// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/PostContractSubPackageReport/MaterialOnSiteReport/PrintSettingForm', ['dojo/_base/declare', 'dojo/_base/lang', "dojo/request", "dojo/dom-style", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", 'dijit/layout/BorderContainer', 'dijit/Toolbar', 'dijit/form/Button', "dojox/form/Manager", "dojo/text!./templates/printSettingForm.html", 'dojo/i18n!buildspace/nls/PostContract'], function(declare, lang, request, domStyle, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, BorderContainer, Toolbar, Button, Manager, template, nls) {
    var printSettingForm;
    printSettingForm = declare("buildspace.apps.PostContractSubPackageReport.MaterialOnSiteReport.PrintSettingForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
      baseClass: "buildspace-form",
      subPackageId: -1,
      templateString: template,
      region: 'center',
      style: "overflow: auto;",
      formInfo: null,
      nls: nls,
      startup: function() {
        this.inherited(arguments);
        return this["mosPrintSettingForm-" + this.subPackageId].setFormValues(this.formInfo);
      },
      clearErrorMsg: function() {
        var field, fieldNode, fields, _i, _len, _results;
        fields = ['project_name', 'site_belonging_address', 'original_finished_date', 'contract_duration', 'contract_original_amount', 'payment_revision_no', 'evaluation_date', 'total_text', 'percentage_of_material_on_site_text', 'carried_to_final_summary_text'];
        _results = [];
        for (_i = 0, _len = fields.length; _i < _len; _i++) {
          field = fields[_i];
          fieldNode = dojo.byId("error-material_on_site_print_setting_" + field);
          if (fieldNode) {
            fieldNode.innerHTML = null;
            _results.push(domStyle.set(fieldNode, 'display', 'none'));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      },
      fillErrorMsgs: function(errorMsgs) {
        var errorMsg, fieldNode, name, _results;
        _results = [];
        for (name in errorMsgs) {
          errorMsg = errorMsgs[name];
          fieldNode = dojo.byId("error-material_on_site_print_setting_" + name);
          if (fieldNode) {
            fieldNode.innerHTML = errorMsg;
            _results.push(domStyle.set(fieldNode, 'display', 'block'));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      },
      save: function() {
        var form, formValues, pb, self;
        self = this;
        form = this["mosPrintSettingForm-" + this.subPackageId];
        if (!form.validate()) {
          return false;
        }
        formValues = dojo.formToObject(this["mosPrintSettingForm-" + this.subPackageId].id);
        pb = buildspace.dialog.indeterminateProgressBar({
          title: nls.pleaseWait + "..."
        });
        lang.mixin(formValues, {
          subPackageId: self.subPackageId
        });
        pb.show();
        this.clearErrorMsg();
        return request.post("subPackageMaterialOnSite/savePrintSetting", {
          data: formValues,
          handleAs: 'json'
        }).then(function(response) {
          if (!response.success) {
            self.fillErrorMsgs(response.errorMsgs);
          }
          return pb.hide();
        }, function() {
          return pb.hide();
        });
      }
    });
    return declare('buildspace.apps.PostContractSubPackageReport.MaterialOnSiteReport.PrintSettingFormContainer', BorderContainer, {
      subPackage: null,
      style: "padding:0px;margin:0px;width:100%;height:100%;",
      gutters: false,
      data: null,
      postCreate: function() {
        var form, self, toolbar;
        this.inherited(arguments);
        self = this;
        form = new printSettingForm({
          subPackageId: self.subPackage.id[0],
          formInfo: self.data.printSettingForm
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:2px;overflow:hidden;"
        });
        toolbar.addChild(new Button({
          label: nls.save,
          iconClass: "icon-16-container icon-16-save",
          onClick: function() {
            return form.save();
          }
        }));
        this.addChild(toolbar);
        return this.addChild(form);
      }
    });
  });

}).call(this);
