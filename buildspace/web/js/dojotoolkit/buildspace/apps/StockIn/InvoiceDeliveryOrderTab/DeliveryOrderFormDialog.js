// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/StockIn/InvoiceDeliveryOrderTab/DeliveryOrderFormDialog', ["dojo/_base/declare", 'dojo/_base/lang', "dojo/keys", "dojo/parser", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", 'dijit/Toolbar', 'dijit/form/Button', "dijit/layout/BorderContainer", "dijit/form/ValidationTextBox", "dijit/form/DateTextBox", "dojo/dom-style", "dojo/dom-form", "dojo/request", "dojox/validate/web", "dijit/form/FilteringSelect", "dojo/store/Memory", "dojox/form/Manager", "dojo/text!./templates/deliveryOrderForm.html", 'dojo/i18n!../../../nls/StockIn'], function(declare, lang, keys, parser, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, Toolbar, Button, BorderContainer, ValidationTextBox, DateTextBox, domStyle, domForm, request, web, FilteringSelect, Memory, Manager, template, nls) {
    var invoiceForm;
    invoiceForm = declare("buildspace.apps.StockIn.InvoiceInformation.DeliveryOrderForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
      baseClass: "buildspace-form",
      invoiceId: -1,
      templateString: template,
      region: 'center',
      style: "overflow: auto;",
      deliveryOrderGrid: null,
      formInfo: null,
      nls: nls,
      dialogContainer: null,
      deliveryOrderId: -1,
      newDeliveryOrderId: -1,
      startup: function() {
        this.inherited(arguments);
        return this.deliveryOrderForm.setFormValues(this.formInfo);
      },
      clearInputErrorMsgs: function() {
        var errorBlock, i, presetErrorBlocks, self;
        self = this;
        presetErrorBlocks = {
          project_structure_id: null,
          purchase_order_id: null,
          term_type: null,
          invoice_no: null,
          invoice_date: null,
          term_type: null
        };
        for (i in presetErrorBlocks) {
          errorBlock = self["error-" + i];
          if (errorBlock == null) {
            return false;
          }
          errorBlock.innerHTML = presetErrorBlocks[i];
          domStyle.set(errorBlock, "display", "none");
        }
      },
      save: function() {
        var form, formValues, pb, self;
        self = this;
        this.clearInputErrorMsgs();
        form = this.deliveryOrderForm;
        if (!form.validate()) {
          return false;
        }
        formValues = dojo.formToObject(this.deliveryOrderForm.id);
        if (self.newDeliveryOrderId > 0) {
          lang.mixin(formValues, {
            deliveryOrderId: self.newDeliveryOrderId
          });
        } else {
          lang.mixin(formValues, {
            deliveryOrderId: self.deliveryOrderId
          });
        }
        pb = buildspace.dialog.indeterminateProgressBar({
          title: nls.pleaseWait + "..."
        });
        pb.show();
        return request.post("stockIn/saveDeliveryOrderFormInformation/invoiceId/" + self.invoiceId, {
          data: formValues,
          handleAs: 'json'
        }).then(function(response) {
          var errorBlock, i, _results;
          pb.hide();
          if (response.success && response.id > 0) {
            self.deliveryOrderGrid.refreshGrid();
            self.newInvoiceId = response.id;
            return self.dialogContainer.hide();
          } else {
            _results = [];
            for (i in response.errorMsgs) {
              errorBlock = self["error-" + i];
              errorBlock.innerHTML = response.errorMsgs[i];
              _results.push(domStyle.set(errorBlock, "display", "block"));
            }
            return _results;
          }
        }, function(error) {
          return pb.hide();
        });
      }
    });
    return declare('buildspace.apps.StockIn.InvoiceInformation.DeliveryOrderFormDialog', dijit.Dialog, {
      title: nls.addNewDeliveryOrder,
      style: "padding:0px;margin:0px;",
      deliveryOrderGrid: null,
      invoice: null,
      formInfo: null,
      buildRendering: function() {
        var content;
        content = this.createContent();
        this.content = content;
        content.startup();
        return this.inherited(arguments);
      },
      postCreate: function() {
        domStyle.set(this.containerNode, {
          padding: "0px",
          margin: "0px"
        });
        this.closeButtonNode.style.display = "none";
        return this.inherited(arguments);
      },
      createContent: function() {
        var borderContainer, form, self, toolbar;
        self = this;
        borderContainer = new BorderContainer({
          style: "width:480px;height:140px;padding:0;margin:0;",
          gutters: false
        });
        form = new invoiceForm({
          invoiceId: self.invoice.id[0],
          dialogContainer: self,
          deliveryOrderGrid: self.deliveryOrderGrid,
          formInfo: this.formInfo
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:2px;overflow:hidden;"
        });
        toolbar.addChild(new Button({
          label: nls.save,
          iconClass: "icon-16-container icon-16-save",
          onClick: function() {
            return form.save();
          }
        }));
        toolbar.addChild(new dijit.ToolbarSeparator());
        toolbar.addChild(new dijit.form.Button({
          label: nls.close,
          iconClass: "icon-16-container icon-16-close",
          onClick: function() {
            return self.hide();
          }
        }));
        borderContainer.addChild(toolbar);
        borderContainer.addChild(form);
        return borderContainer;
      },
      _onKey: function(e) {
        var key;
        key = e.keyCode;
        if (key === keys.ESCAPE) {
          return dojo.stopEvent(e);
        }
      },
      onHide: function() {
        return this.destroyRecursive();
      }
    });
  });

}).call(this);
