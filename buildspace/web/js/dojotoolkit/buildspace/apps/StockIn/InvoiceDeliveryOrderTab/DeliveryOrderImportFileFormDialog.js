// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/StockIn/InvoiceDeliveryOrderTab/DeliveryOrderImportFileFormDialog', ["dojo/_base/declare", "dojo/on", 'dojo/_base/lang', "dojo/keys", "dojo/parser", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", 'dijit/Toolbar', 'dijit/form/Button', "dijit/layout/BorderContainer", "dojo/dom-style", "dojo/dom-form", "dojo/request", "dojox/validate/web", "dojox/form/Manager", "dojo/text!./templates/deliveryOrderImportFileForm.html", 'dojo/i18n!../../../nls/StockIn'], function(declare, on_, lang, keys, parser, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, Toolbar, Button, BorderContainer, domStyle, domForm, request, web, Manager, template, nls) {
    var DeliveryOrderFileImportForm;
    DeliveryOrderFileImportForm = declare("buildspace.apps.StockIn.InvoiceInformation.DeliveryOrderFileImportForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
      baseClass: "buildspace-form",
      deliveryOrderId: -1,
      _csrf_token: null,
      templateString: template,
      region: 'center',
      style: "overflow: auto;",
      nls: nls,
      dialogContainer: null,
      deliveryOrderListGrid: null,
      startup: function() {
        this.inherited(arguments);
        return this.createUploader();
      },
      createUploader: function() {
        var self;
        self = this;
        this.uploader = new dojox.form.Uploader({
          label: nls.uploadFile,
          uploadOnSelect: true,
          style: 'height:24px;',
          url: "stockIn/uploadFileForDeliveryOrder/deliveryOrderId/" + self.deliveryOrderId + "/_csrf_token/" + self._csrf_token,
          name: 'stock_in_delivery_order[fileUpload]'
        });
        on_(this.uploader, "Begin", function(uploadedFiles) {
          self.pb = buildspace.dialog.indeterminateProgressBar({
            title: nls.pleaseWait + "..."
          });
          return self.pb.show();
        });
        on_(this.uploader, "Complete", function(uploadedFiles) {
          self.pb.hide();
          if (uploadedFiles.success) {
            self.deliveryOrderListGrid.refreshGrid();
            return self.dialogContainer.hide();
          } else {
            return buildspace.dialog.alert(nls.error, "<div>" + uploadedFiles.errorMsgs + "</div>", 80, 280);
          }
        });
        this["stockInDeliveryOrderFormUploader-" + self.deliveryOrderId].appendChild(this.uploader.domNode);
        return this.uploader.startup();
      },
      clearInputErrorMsgs: function() {
        var errorBlock, i, presetErrorBlocks, self, _results;
        self = this;
        presetErrorBlocks = {
          name: null
        };
        _results = [];
        for (i in presetErrorBlocks) {
          errorBlock = self["error-" + i];
          errorBlock.innerHTML = presetErrorBlocks[i];
          _results.push(domStyle.set(errorBlock, "display", "none"));
        }
        return _results;
      }
    });
    return declare('buildspace.apps.StockIn.InvoiceInformation.DeliveryOrderImportFileFormDialog', dijit.Dialog, {
      title: nls.deliveryOrderImportFile,
      style: "padding:0px;margin:0px;width:400px;height:120px;",
      deliveryOrderId: -1,
      _csrf_token: null,
      deliveryOrderListGrid: null,
      buildRendering: function() {
        var content;
        content = this.createContent();
        this.content = content;
        content.startup();
        return this.inherited(arguments);
      },
      postCreate: function() {
        domStyle.set(this.containerNode, {
          padding: "0px",
          margin: "0px"
        });
        this.closeButtonNode.style.display = "none";
        return this.inherited(arguments);
      },
      createContent: function() {
        var borderContainer, form, self, toolbar;
        self = this;
        borderContainer = new BorderContainer({
          style: "width:400px;height:120px;padding:0;margin:0;",
          gutters: false
        });
        form = new DeliveryOrderFileImportForm({
          dialogContainer: self,
          deliveryOrderId: self.deliveryOrderId,
          _csrf_token: self._csrf_token,
          deliveryOrderListGrid: this.deliveryOrderListGrid
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:2px;overflow:hidden;"
        });
        toolbar.addChild(new dijit.form.Button({
          label: nls.close,
          iconClass: "icon-16-container icon-16-close",
          onClick: function() {
            return self.hide();
          }
        }));
        borderContainer.addChild(toolbar);
        borderContainer.addChild(form);
        return borderContainer;
      },
      _onKey: function(e) {
        var key;
        key = e.keyCode;
        if (key === keys.ESCAPE) {
          return dojo.stopEvent(e);
        }
      },
      onHide: function() {
        return this.destroyRecursive();
      }
    });
  });

}).call(this);
