// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/StockIn/InvoiceDeliveryOrderTab/MasterTabContainer', ["dojo/_base/declare", 'dojo/data/ItemFileWriteStore', 'dojo/request', 'dijit/layout/TabContainer', 'dijit/layout/ContentPane', 'dijit/layout/BorderContainer', 'dijit/Toolbar', 'dijit/form/Button', './ItemListingGrid', './DeliveryOrderListingGrid', './ReadOnlyInvoiceInformationForm', 'dojo/i18n!../../../nls/StockIn'], function(declare, ItemFileWriteStore, request, TabContainer, ContentPane, BorderContainer, Toolbar, Button, ItemListingGrid, DeliveryOrderListingGrid, ReadOnlyInvoiceInformationForm, nls) {
    return declare('buildspace.apps.StockIn.InvoiceInformation', TabContainer, {
      region: "center",
      style: "padding:0px;margin:0px;border:0px;width:100%;height:100%;",
      project: null,
      invoice: null,
      nested: true,
      postCreate: function(self) {
        var invoiceId, pb, projectId;
        if (self == null) {
          self = this;
        }
        projectId = this.project.id[0];
        invoiceId = this.invoice.id[0];
        pb = new buildspace.dialog.indeterminateProgressBar({
          title: nls.processing + "..."
        });
        pb.show();
        return request.get('stockIn/getInvoiceFormInformation', {
          query: {
            pId: projectId,
            invoiceId: invoiceId
          },
          handleAs: 'json'
        }).then(function(response) {
          self.createContentPaneTab("main-invoice-item-list-" + invoiceId, nls.invoiceItemList, self.createItemListingGrid(), false);
          self.createContentPaneTab("main-invoice-delivery-order-list-" + invoiceId, nls.deliveryOrder, self.createDeliveryOrderListingGrid(), false);
          self.createContentPaneTab("main-invoice-information-" + invoiceId, nls.invoiceInformation, self.createReadOnlyInvoiceInformation(response), false);
          self.selectChild(dijit.byId("main-invoice-item-list-" + invoiceId));
          return pb.hide();
        }, function(error) {
          return pb.hide();
        });
      },
      createContentPaneTab: function(id, title, content, closable) {
        var pane;
        pane = new dijit.layout.ContentPane({
          closable: closable,
          id: id,
          style: "padding:0px;border:0px;margin:0px;overflow:hidden;",
          title: buildspace.truncateString(title, 35),
          content: content
        });
        this.addChild(pane);
        return this.selectChild(pane);
      },
      createItemListingGrid: function(self) {
        if (self == null) {
          self = this;
        }
        return new ItemListingGrid({
          invoice: self.invoice
        });
      },
      createDeliveryOrderListingGrid: function(self) {
        if (self == null) {
          self = this;
        }
        return new DeliveryOrderListingGrid({
          invoice: self.invoice
        });
      },
      createReadOnlyInvoiceInformation: function(formInformation, self) {
        if (self == null) {
          self = this;
        }
        return new ReadOnlyInvoiceInformationForm({
          invoiceId: self.invoice.id[0],
          formInfo: formInformation.formInformation
        });
      }
    });
  });

}).call(this);
