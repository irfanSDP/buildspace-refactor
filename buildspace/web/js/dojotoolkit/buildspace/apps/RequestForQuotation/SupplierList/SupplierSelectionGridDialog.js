// Generated by CoffeeScript 1.9.0
(function() {
    var __hasProp = {}.hasOwnProperty;

    define("buildspace/apps/RequestForQuotation/SupplierList/SupplierSelectionGridDialog", ["dojo/_base/declare", "dojo/aspect", "dojo/_base/lang", "dojo/_base/connect", "dojo/request", "dojo/html", "dojo/dom", "dojo/keys", "dojo/dom-style", "buildspace/widget/grid/cells/Formatter", "dojox/grid/enhanced/plugins/IndirectSelection", 'buildspace/widget/grid/Filter', 'dojo/i18n!../../../nls/RequestForQuotation', 'dojo/i18n!../../../nls/CompanyDirectories'], function(declare, aspect, lang, connect, request, html, dom, keys, domStyle, Formatter, IndirectSelection, Filter, nls, nls2) {
        var Dialog, SupplierSelectionGrid;
        SupplierSelectionGrid = declare("buildspace.apps.RequestForQuotation.SupplierList.SupplierSelectionGrid", dojox.grid.EnhancedGrid, {
            style: "padding:0;margin:0;border:none;",
            region: "center",
            rfqId: -1,
            selectionMode: 'multiple',
            dialogContainer: null,
            companyIds: [],
            _csrf_token: null,
            plugins: {
                indirectSelection: {
                    headerSelector: true,
                    width: "20px",
                    styles: "text-align:center;"
                }
            },
            canSort: function() {
                return false;
            },
            postCreate: function() {
                this.inherited(arguments);
                var self = this;

                this.connect(this.selection, 'onDeselected', function(rowIndex) {
                    var selectedIndexes = self.selection.getSelected();
                    return self.gridAction(selectedIndexes);
                });
                return this.connect(this.selection, 'onSelected', function(rowIndex) {
                    var selectedIndexes = self.selection.getSelected();
                    return self.gridAction(selectedIndexes);
                });
            },
            gridAction: function(selectedIndexes) {
                var company, companyId, key, length, self, _results;
                self = this;
                length = selectedIndexes.length;
                this.disableToolbarButtons(true);
                self.companyIds = [];
                if (length > 0) {
                    _results = [];
                    for (key in selectedIndexes) {
                        if (!__hasProp.call(selectedIndexes, key)) continue;
                        company = selectedIndexes[key];
                        companyId = company['id'][0];
                        if (companyId > 0) {
                            self.companyIds.push(company['id'][0]);
                            _results.push(self.disableToolbarButtons(false));
                        } else {
                            _results.push(void 0);
                        }
                    }
                    return _results;
                }
            },
            select: function() {
                var self = this;
                var selectedIndexes = self.selection.getSelected();
                var pb = buildspace.dialog.indeterminateProgressBar({
                    title: nls.pleaseWait + "..."
                });
                pb.show();
                return request.post('requestForQuotation/saveCurrentSelectedSupplierInfo', {
                    data: {
                        "rfqId": self.rfqId,
                        "companyIds[]": self.companyIds,
                        "_csrf_token": self._csrf_token
                    },
                    handleAs: 'json'
                }).then(function(response) {
                    pb.hide();
                    self.dialogContainer.supplierListContainer.grid.refreshGrid();
                    return self.dialogContainer.hide();
                }, function(error) {
                    return pb.hide();
                });
            },
            disableToolbarButtons: function(isDisable, buttonsToEnable) {
                var selectRowBtn = dijit.byId("selectSupplierButtonForRFQ");
                return selectRowBtn.set('disabled', isDisable);
            }
        });

        Dialog = declare("buildspace.apps.RequestForQuotation.SupplierList.SupplierSelectionDialog", dijit.Dialog, {
            style: "padding:0px;margin:0px;",
            rfqId: null,
            data: null,
            supplierListContainer: null,
            buildRendering: function() {
                var content = this.createContent();
                content.startup();
                this.content = content;
                return this.inherited(arguments);
            },
            postCreate: function() {
                domStyle.set(this.containerNode, {
                    padding: "0px",
                    margin: "0px"
                });
                this.closeButtonNode.style.display = "none";
                return this.inherited(arguments);
            },
            _onKey: function(e) {
                var key = e.keyCode;
                if (key === keys.ESCAPE) {
                    return dojo.stopEvent(e);
                }
            },
            onHide: function() {
                return this.destroyRecursive();
            },
            createContent: function() {
                var borderContainer, grid, self, toolbar;
                self = this;
                grid = this.grid = new SupplierSelectionGrid({
                    rfqId: self.rfqId,
                    store: dojo.data.ItemFileWriteStore({
                        data: self.data.data
                    }),
                    _csrf_token: self.data._csrf_token,
                    structure: self.getGridLayout(),
                    dialogContainer: self
                });
                toolbar = new dijit.Toolbar({
                    region: "top",
                    style: "outline:none!important;padding:0px;border:none;width:100%;"
                });
                toolbar.addChild(new dijit.form.Button({
                    id: 'selectSupplierButtonForRFQ',
                    disabled: true,
                    label: nls.select,
                    iconClass: "icon-16-container icon-16-checkmark2",
                    onClick: function() {
                        return grid.select();
                    }
                }));
                toolbar.addChild(new dijit.ToolbarSeparator());
                toolbar.addChild(new dijit.form.Button({
                    label: nls.close,
                    iconClass: "icon-16-container icon-16-close",
                    onClick: function() {
                        return self.hide();
                    }
                }));
                borderContainer = new dijit.layout.BorderContainer({
                    style: "padding:0px;width:850px;height:450px;",
                    gutters: false,
                    region: 'top'
                });
                borderContainer.addChild(new Filter({
                    region: 'top',
                    editableGrid: false,
                    grid: grid,
                    filterFields: [{
                        'company_name': nls2.companyName,
                        'registration_no': nls2.registrationNo,
                        'business_type': nls2.businessType,
                        'country': nls2.country,
                        'state': nls2.state
                    }]
                }));
                borderContainer.addChild(toolbar);
                borderContainer.addChild(grid);
                return borderContainer;
            },
            getGridLayout: function() {
                var formatter = new Formatter;
                return [{
                    name: "No",
                    field: "id",
                    width: '30px',
                    styles: 'text-align: center;',
                    formatter: formatter.rowCountCellFormatter
                },{
                    name: nls2.companyName,
                    field: "company_name",
                    width: 'auto'
                },{
                    name: nls2.registrationNo,
                    field: "registration_no",
                    width: '120px',
                    styles: 'text-align: center;'
                },{
                    name: nls2.businessType,
                    field: "business_type",
                    width: '120px',
                    styles: 'text-align: center;'
                },{
                    name: nls2.country,
                    field: "country",
                    width: '120px',
                    styles: 'text-align: center;'
                },{
                    name: nls2.state,
                    field: "state",
                    width: '120px',
                    styles: 'text-align: center;'
                }];
            }
        });
        return Dialog;
    });

}).call(this);
