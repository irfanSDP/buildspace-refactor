// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/RequestForQuotation/SupplierList/SupplierExcelExport', ["dojo/_base/declare", 'dojo/_base/lang', "dojo/keys", "dojo/parser", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", 'dijit/Toolbar', 'dijit/form/Button', "dijit/layout/BorderContainer", "dijit/form/ValidationTextBox", "dijit/form/SimpleTextarea", "dijit/registry", "dojo/dom-style", "dojo/dom-form", "dojo/request", "dojo/request/iframe", "dojox/validate/web", "dijit/form/Select", "dijit/form/FilteringSelect", "dojo/store/Memory", "dojox/form/Manager", "dojo/text!./templates/supplierExcelExportForm.html", 'dojo/i18n!../../../nls/RequestForQuotation'], function(declare, lang, keys, parser, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, Toolbar, Button, BorderContainer, ValidationTextBox, SimpleTextarea, registry, domStyle, domForm, request, iframe, web, Select, FilteringSelect, Memory, Manager, template, nls) {
    var Dialog, SupplierExcelExportForm;
    SupplierExcelExportForm = declare("buildspace.apps.RequestForQuotation.SupplierList.SupplierExcelExportForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
      baseClass: "buildspace-form",
      rfqId: -1,
      rfqSupplierId: -1,
      rfqSupplierName: null,
      templateString: template,
      region: 'center',
      style: "overflow: auto;",
      formInfo: null,
      nls: nls,
      dialogContainer: null,
      "export": function() {
        var form, formValues, pb, self;
        self = this;
        form = this.rfqExportForm;
        if (!form.validate()) {
          return false;
        }
        formValues = dojo.formToObject(this.rfqExportForm.id);
        pb = buildspace.dialog.indeterminateProgressBar({
          title: nls.pleaseWait + "..."
        });
        lang.mixin(formValues, {
          rfqId: self.rfqId,
          rfqSupplierId: self.rfqSupplierId,
          _csrf_token: this.formInfo._csrf_token
        });
        pb.show();
        return request.post("requestForQuotationExportFile/exportExcel", {
          data: formValues,
          handleAs: 'json'
        }).then(function(response) {
          var errorBlock, i, _results;
          pb.hide();
          if (response.success) {
            self.downloadExportedRFQItemFile(response.fileUrl);
            return self.dialogContainer.hide();
          } else {
            buildspace.dialog.alert(nls.error, "<div>" + response.errorMsg + "</div>", 80, 280);
            _results = [];
            for (i in response.errorMsgs) {
              if (i !== 'username') {
                errorBlock = self["error-" + i];
                errorBlock.innerHTML = response.errorMsgs[i];
                _results.push(domStyle.set(errorBlock, "display", "block"));
              } else {
                _results.push(void 0);
              }
            }
            return _results;
          }
        }, function(error) {
          return pb.hide();
        });
      },
      downloadExportedRFQItemFile: function(url) {
        return dojo.create("iframe", {
          src: url,
          style: "display: none"
        }, dojo.doc.body);
      }
    });
    return Dialog = declare('buildspace.apps.RequestForQuotation.SupplierList.ExportDialog', dijit.Dialog, {
      title: nls.exportRFQItemExcel,
      style: "padding:0px;margin:0px;width:480px;height:160px;",
      rfqId: -1,
      rfqSupplierId: -1,
      rfqSupplierName: null,
      formInfo: null,
      buildRendering: function() {
        var content;
        content = this.createContent();
        this.content = content;
        content.startup();
        return this.inherited(arguments);
      },
      postCreate: function() {
        domStyle.set(this.containerNode, {
          padding: "0px",
          margin: "0px"
        });
        this.closeButtonNode.style.display = "none";
        return this.inherited(arguments);
      },
      createContent: function() {
        var borderContainer, form, self, toolbar;
        self = this;
        borderContainer = new BorderContainer({
          style: "width:480px;height:160px;padding:0;margin:0;",
          gutters: false
        });
        form = new SupplierExcelExportForm({
          rfqId: this.rfqId,
          rfqSupplierId: this.rfqSupplierId,
          rfqSupplierName: this.rfqSupplierName,
          formInfo: this.formInfo,
          dialogContainer: self
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:2px;overflow:hidden;"
        });
        toolbar.addChild(new Button({
          label: nls.exportRFQItemExcel,
          iconClass: "icon-16-container icon-16-export",
          onClick: function() {
            return form["export"]();
          }
        }));
        toolbar.addChild(new dijit.ToolbarSeparator());
        toolbar.addChild(new dijit.form.Button({
          label: nls.close,
          iconClass: "icon-16-container icon-16-close",
          onClick: function() {
            return self.hide();
          }
        }));
        borderContainer.addChild(toolbar);
        borderContainer.addChild(form);
        return borderContainer;
      },
      _onKey: function(e) {
        var key;
        key = e.keyCode;
        if (key === keys.ESCAPE) {
          return dojo.stopEvent(e);
        }
      },
      onHide: function() {
        return this.destroyRecursive();
      }
    });
  });

}).call(this);
