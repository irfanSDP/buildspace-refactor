// Generated by CoffeeScript 1.9.0
(function() {
  define("buildspace/apps/SubPackage/ExportSubPackageByContractorDialog", ["dojo/_base/declare", "dojo/aspect", "dojo/_base/lang", "dojo/_base/connect", "dojo/when", "dojo/html", "dojo/dom", "dojo/keys", "dojo/dom-style", "dojo/request", "dojo/json", "dojo/number", "dojo/currency", "./ImportSubPackageByContractorDialog", "./ExportExcelSubPackageByContractorDialog", "buildspace/widget/grid/cells/Formatter", 'dojo/i18n!buildspace/nls/PostContract'], function(declare, aspect, lang, connect, when_, html, dom, keys, domStyle, request, JSON, number, currency, ImportSubPackageByContractorDialog, ExportExcelSubPackageByContractorDialog, Formatter, nls) {
    var Dialog, selectedItemGrid, selectedItemGridContainer;
    selectedItemGrid = declare("buildspace.apps.SubPackage.SelectedItemGrid", dojox.grid.EnhancedGrid, {
      style: "border-top:none;",
      region: "center",
      escapeHTMLInData: false,
      subPackage: null,
      company: null,
      subPackageGrid: null,
      subContractorGridContainer: null,
      postCreate: function() {
        var self;
        self = this;
        self.inherited(arguments);
        return this.on('CellClick', function(e) {
          var colField, item;
          colField = e.cell.field;
          item = self.getItem(e.rowIndex);
          if (colField === 'import_link' && item.id[0] > 0) {
            self.createImportSubPackageByContractorDialog(item);
          }
          if (colField === 'export_link' && item.id[0] > 0) {
            return self.createExportSubPackageByContractorDialog(item);
          }
        });
      },
      canSort: function() {
        return false;
      },
      createImportSubPackageByContractorDialog: function(bill, self) {
        var pb;
        if (self == null) {
          self = this;
        }
        pb = new buildspace.dialog.indeterminateProgressBar({
          title: nls.processing + "..."
        });
        pb.show();
        return request.get('subPackage/getImportExportPermission', {
          query: {
            id: self.subPackage.id,
            company_id: self.company.id
          },
          handleAs: 'json'
        }).then(function(response) {
          var dialog;
          pb.hide();
          dialog = new ImportSubPackageByContractorDialog({
            title: nls.importContractorRates + " (" + bill.title[0] + ")",
            subPackage: self.subPackage,
            company: self.company,
            bill: bill,
            formInfo: response,
            subPackageGrid: self.subPackageGrid,
            subContractorGridContainer: self.subContractorGridContainer
          });
          return dialog.show();
        }, function(error) {
          return pb.hide();
        });
      },
      createExportSubPackageByContractorDialog: function(bill, self) {
        var pb;
        if (self == null) {
          self = this;
        }
        pb = new buildspace.dialog.indeterminateProgressBar({
          title: nls.processing + "..."
        });
        pb.show();
        return request.get('subPackage/getImportExportPermission', {
          query: {
            id: self.subPackage.id,
            company_id: self.company.id
          },
          handleAs: 'json'
        }).then(function(response) {
          var dialog;
          pb.hide();
          dialog = new ExportExcelSubPackageByContractorDialog({
            title: nls.exportSubPackageExcel + " (" + bill.title[0] + ")",
            subPackage: self.subPackage,
            company: self.company,
            bill: bill,
            formInfo: response
          });
          return dialog.show();
        }, function(error) {
          return pb.hide();
        });
      }
    });
    selectedItemGridContainer = declare("buildspace.apps.SubPackage.SelectedItemGridContainer", dijit.layout.BorderContainer, {
      style: "padding:0px;width:100%;height:100%;",
      region: "center",
      gutters: false,
      subPackage: null,
      company: null,
      dialog: null,
      store: null,
      structure: null,
      subPackageGrid: null,
      subContractorGridContainer: null,
      postCreate: function() {
        var grid, self, toolbar;
        self = this;
        self.inherited(arguments);
        grid = this.grid = new selectedItemGrid({
          store: self.store,
          structure: self.structure,
          subPackage: self.subPackage,
          company: self.company,
          subPackageGrid: self.subPackageGrid,
          subContractorGridContainer: self.subContractorGridContainer
        });
        toolbar = new dijit.Toolbar({
          region: "top",
          style: "padding:2px;border-bottom:none;width:100%;"
        });
        toolbar.addChild(new dijit.form.Button({
          label: nls.close,
          iconClass: "icon-16-container icon-16-close",
          onClick: function() {
            return self.dialog.hide();
          }
        }));
        self.addChild(toolbar);
        return self.addChild(new dijit.layout.ContentPane({
          style: 'width:100%',
          content: grid,
          region: 'center'
        }));
      }
    });
    return Dialog = declare("buildspace.apps.SubPackage.GroupProjectAssignmentDialog", dijit.Dialog, {
      style: "padding:0px;margin:0px;",
      project: null,
      data: null,
      subPackage: null,
      company: null,
      columnSettings: null,
      subPackageGrid: null,
      subContractorGridContainer: null,
      buildRendering: function() {
        var content;
        content = this.createContent();
        content.startup();
        this.content = content;
        return this.inherited(arguments);
      },
      postCreate: function() {
        domStyle.set(this.containerNode, {
          padding: "0px",
          margin: "0px"
        });
        this.closeButtonNode.style.display = "none";
        return this.inherited(arguments);
      },
      _onKey: function(e) {
        var key;
        key = e.keyCode;
        if (key === keys.ESCAPE) {
          return dojo.stopEvent(e);
        }
      },
      onHide: function() {
        return this.destroyRecursive();
      },
      createContent: function(self) {
        var borderContainer, content;
        if (self == null) {
          self = this;
        }
        borderContainer = new dijit.layout.BorderContainer({
          style: "padding:0px;width:780px;height:380px;",
          gutters: false
        });
        content = new selectedItemGridContainer({
          dialog: self,
          structure: self.constructGridStructure(),
          subPackage: self.subPackage,
          company: self.company,
          store: dojo.data.ItemFileWriteStore({
            data: self.data
          }),
          subPackageGrid: self.subPackageGrid,
          subContractorGridContainer: self.subContractorGridContainer
        });
        borderContainer.addChild(content);
        return borderContainer;
      },
      constructGridStructure: function(self) {
        var basicStructure, colCount, formatter;
        if (self == null) {
          self = this;
        }
        formatter = new Formatter();
        colCount = 0;
        basicStructure = {
          noscroll: false,
          width: "50",
          cells: [
            [
              {
                name: "No",
                field: "id",
                width: '30px',
                styles: 'text-align: center;',
                formatter: formatter.rowCountCellFormatter
              }, {
                name: nls.description,
                field: 'title',
                width: 'auto',
                noresize: true
              }, {
                name: nls["import"],
                field: 'import_link',
                width: '120px',
                styles: 'text-align: center;',
                noresize: true,
                formatter: function(cellValue, rowIdx, cell) {
                  var item;
                  item = this.grid.getItem(rowIdx);
                  if (item.id[0] > 0) {
                    return "<a href=\"#\" onclick=\"return false;\">" + nls["import"] + "</a>";
                  } else {
                    return null;
                  }
                }
              }, {
                name: nls["export"],
                field: 'export_link',
                width: '120px',
                styles: 'text-align: center;',
                noresize: true,
                formatter: function(cellValue, rowIdx, cell) {
                  var item;
                  item = this.grid.getItem(rowIdx);
                  if (item.id[0] > 0) {
                    return "<a href=\"#\" onclick=\"return false;\">" + nls["export"] + "</a>";
                  } else {
                    return null;
                  }
                }
              }
            ]
          ]
        };
        return basicStructure;
      }
    });
  });

}).call(this);
