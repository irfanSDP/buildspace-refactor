// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/PurchaseOrder/PurchaseOrderDialog', ['dojo/_base/declare', 'dojo/_base/lang', "dojo/_base/connect", 'dojo/on', "dojo/request", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", "dojo/html", "dojo/dom", "dojo/dom-attr", 'dojo/keys', "dojo/dom-style", 'dijit/layout/TabContainer', 'dijit/layout/ContentPane', 'dijit/layout/BorderContainer', 'dijit/Toolbar', 'dijit/form/FilteringSelect', 'dijit/form/Select', 'dijit/form/Button', "dojo/store/Memory", "dojox/form/Manager", "dojo/text!./templates/purchaseOrderForm.html", './AssignProjectGrid', 'dojo/i18n!../../nls/PurchaseOrder'], function(declare, lang, connect, bind, request, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, html, dom, domAttr, keys, domStyle, TabContainer, ContentPane, BorderContainer, Toolbar, FilteringSelect, Select, Button, Memory, Manager, template, AssignProjectGrid, nls) {
    var purchaseOrderForm;
    purchaseOrderForm = declare("buildspace.apps.PurchaseOrder.PurchaseOrderForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
      baseClass: "buildspace-form",
      poId: -1,
      newPoId: -1,
      templateString: template,
      region: 'center',
      style: "overflow: auto;",
      formInfo: null,
      dialogContainer: null,
      purchaseOrderGrid: null,
      rfqStatusSelections: null,
      currentPurchaseOrderNo: null,
      nls: nls,
      postCreate: function() {
        var self;
        this.inherited(arguments);
        self = this;
        bind(this.assignProjectGridAction, 'click', function(e) {
          var dialog;
          dialog = new AssignProjectGrid({
            poId: self.newPoId,
            poForm: self
          });
          return dialog.show();
        });
        bind(this.poPrefix, 'change', function(e) {
          return self.updateFormView();
        });
        this.createDropdown();
        this.hideSupplierSelectContainer();
        return this.setRequiredFields();
      },
      startup: function() {
        this.inherited(arguments);
        this["poForm-" + this.poId].setFormValues(this.formInfo);
        return this.toggleProjectInformationContainer();
      },
      createDropdown: function() {
        var countrySelectStore, self, stateSelectStore;
        self = this;
        this.supplierSelectStore = new dojo.data.ItemFileReadStore({
          data: {
            "identifier": "id",
            "items": []
          }
        });
        countrySelectStore = new dojo.data.ItemFileReadStore({
          url: "projectBuilder/getCountry"
        });
        this.stateSelectStore = stateSelectStore = new dojo.data.ItemFileReadStore({
          url: "projectBuilder/getStateByCountry/regionId/" + self.formInfo["purchase_order[region_id]"]
        });
        this.supplierSelect = new FilteringSelect({
          name: "company_id",
          store: this.supplierSelectStore,
          style: "width: 180px;padding:2px!important;",
          searchAttr: "name",
          required: false
        }).placeAt(self.supplierSelectDivNode);
        this.countrySelect = new FilteringSelect({
          name: "purchase_order[region_id]",
          store: countrySelectStore,
          style: "width: 180px;padding:2px!important;",
          searchAttr: "name",
          value: self.formInfo["purchase_order[region_id]"],
          required: true,
          onChange: function(country) {
            return self.updateStateSelectStore(country);
          }
        }).placeAt(self.countrySelectDivNode);
        return this.stateSelect = new FilteringSelect({
          name: "purchase_order[sub_region_id]",
          store: stateSelectStore,
          style: "width: 180px;padding:2px!important;",
          searchAttr: "name",
          readOnly: self.formInfo["purchase_order[sub_region_id]"] > 0 ? false : true,
          value: self.formInfo["purchase_order[sub_region_id]"],
          required: true
        }).placeAt(self.stateSelectDivNode);
      },
      updateStateSelectStore: function(countryId) {
        if (countryId == null) {
          countryId = 0;
        }
        if (!countryId) {
          countryId = 0;
        }
        this.stateSelectStore = new dojo.data.ItemFileReadStore({
          url: "projectBuilder/getStateByCountry/regionId/" + countryId,
          clearOnClose: true
        });
        this.stateSelect.store.close();
        this.stateSelect.set('store', this.stateSelectStore);
        if (this.stateValue) {
          return this.stateSelect.set('value', this.stateValue);
        }
      },
      save: function() {
        var form, formValues, pb, self;
        self = this;
        form = this["poForm-" + this.poId];
        if (!form.validate()) {
          return false;
        }
        formValues = dojo.formToObject(this["poForm-" + this.poId].id);
        pb = buildspace.dialog.indeterminateProgressBar({
          title: nls.pleaseWait + "..."
        });
        if (self.newPoId > 0) {
          lang.mixin(formValues, {
            poId: self.newPoId
          });
        } else {
          lang.mixin(formValues, {
            poId: self.poId
          });
        }
        pb.show();
        return request.post('purchaseOrder/savePurchaseOrderInformation', {
          data: formValues,
          handleAs: 'json'
        }).then(function(response) {
          var errorBlock, i;
          if (response.success && response.id > 0) {
            self.newPoId = response.id;
            self.purchaseOrderGrid.refreshGrid();
            self.dialogContainer.hide();
          } else {
            for (i in response.errorMsgs) {
              if (i !== 'username') {
                errorBlock = self["error-" + i];
                errorBlock.innerHTML = response.errorMsgs[i];
                domStyle.set(errorBlock, "display", "block");
              }
            }
          }
          return pb.hide();
        }, function(error) {
          return pb.hide();
        });
      },
      toggleProjectInformationContainer: function() {
        domStyle.set(this.projectNameContainer, 'display', 'table-row');
        return domStyle.set(this.projectSiteAddressContainer, 'display', 'table-row');
      },
      setRequiredFields: function() {
        var countrySelect, poPrefix, stateSelect;
        poPrefix = this.poPrefix;
        countrySelect = this.countrySelect;
        stateSelect = this.stateSelect;
        poPrefix.set('required', true);
        countrySelect.set('required', false);
        stateSelect.set('required', false);
        countrySelect.set('readOnly', true);
        return stateSelect.set('readOnly', true);
      },
      updateFormView: function() {
        var poNo, poPrefixValue;
        poPrefixValue = domAttr.get(this.poPrefix, 'value');
        if (this.currentPurchaseOrderNo !== null) {
          if (poPrefixValue) {
            poNo = "" + poPrefixValue + this.currentPurchaseOrderNo;
          } else {
            poNo = this.currentPurchaseOrderNo;
          }
        } else {
          poNo = null;
        }
        return this.poNoContainer.innerHTML = poNo;
      },
      hideSupplierSelectContainer: function() {
        return domStyle.set(this.supplierSelectContainer, 'display', 'none');
      },
      showSupplierSelectContainer: function() {
        return domStyle.set(this.supplierSelectContainer, 'display', 'table-row');
      },
      updateSupplierSelectStore: function(store) {
        this.supplierSelectStore = new dojo.data.ItemFileReadStore({
          clearOnClose: true,
          data: {
            "identifier": "id",
            "items": store
          }
        });
        this.supplierSelect.store.close();
        this.supplierSelect.set('store', this.supplierSelectStore);
        this.supplierSelect.set('value', -1);
        return this.supplierSelect.set('item', null);
      }
    });
    return declare('buildspace.apps.PurchaseOrder.PurchaseOrderDialog', dijit.Dialog, {
      poId: -1,
      style: "padding:0px;margin:0px;width:540px;height:280px;",
      billId: null,
      data: null,
      purchaseOrderGrid: null,
      buildRendering: function() {
        var content;
        content = this.createContent();
        this.content = content;
        content.startup();
        return this.inherited(arguments);
      },
      postCreate: function() {
        domStyle.set(this.containerNode, {
          padding: "0px",
          margin: "0px"
        });
        this.closeButtonNode.style.display = "none";
        return this.inherited(arguments);
      },
      createContent: function() {
        var borderContainer, form, self, toolbar;
        self = this;
        form = new purchaseOrderForm({
          poId: self.poId,
          dialogContainer: self,
          formInfo: self.data.purchaseOrderForm,
          purchaseOrderGrid: self.purchaseOrderGrid
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:2px;overflow:hidden;"
        });
        toolbar.addChild(new Button({
          label: nls.save,
          iconClass: "icon-16-container icon-16-save",
          onClick: function() {
            return form.save();
          },
          id: 'PO-form-button-save',
          disabled: true
        }));
        toolbar.addChild(new dijit.ToolbarSeparator());
        toolbar.addChild(new Button({
          label: nls.close,
          iconClass: "icon-16-container icon-16-close",
          onClick: function() {
            return self.hide();
          }
        }));
        borderContainer = new BorderContainer({
          style: "width:540px;height:280px;padding:0;margin:0;",
          gutters: false
        });
        borderContainer.addChild(toolbar);
        borderContainer.addChild(form);
        return borderContainer;
      },
      _onKey: function(e) {
        var key;
        key = e.keyCode;
        if (key === keys.ESCAPE) {
          return dojo.stopEvent(e);
        }
      },
      onHide: function() {
        return this.destroyRecursive();
      }
    });
  });

}).call(this);
