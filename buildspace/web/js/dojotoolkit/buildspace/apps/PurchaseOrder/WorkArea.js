// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/PurchaseOrder/WorkArea', ["dojo/_base/declare", 'dojo/data/ItemFileWriteStore', 'dojo/request', 'dijit/layout/TabContainer', 'dijit/layout/ContentPane', 'dijit/layout/BorderContainer', 'dijit/Toolbar', 'dijit/form/Button', './ItemList/ItemListContainer', './PurchaseOrderViewOnlyForm/PurchaseOrderViewOnlyForm', 'dojo/i18n!../../nls/PurchaseOrder'], function(declare, ItemFileWriteStore, request, TabContainer, ContentPane, BorderContainer, Toolbar, Button, ItemListContainer, PurchaseOrderViewOnlyForm, nls) {
    return declare('buildspace.apps.PurchaseOrder.WorkArea', TabContainer, {
      region: "center",
      style: "padding:0px;margin:0px;border:none;width:100%;height:100%;",
      purchaseOrder: null,
      postCreate: function() {
        var pb, self;
        self = this;
        pb = new buildspace.dialog.indeterminateProgressBar({
          title: nls.processing + "..."
        });
        pb.show();
        return request.get('purchaseOrder/getWorkAreaInformation', {
          query: {
            poId: self.purchaseOrder.id
          },
          handleAs: 'json'
        }).then(function(response) {
          var firstPane;
          self.createContentPaneTab('main-poItemList', nls.itemList, self.itemListContainer(), false);
          self.createContentPaneTab('main-poInformation', nls.poInformationTabDesc, self.informationContainer(response), false);
          firstPane = dijit.byId('main-poItemList');
          self.selectChild(firstPane);
          return pb.hide();
        }, function(error) {
          return pb.hide();
        });
      },
      createContentPaneTab: function(id, title, content, closable) {
        var pane;
        pane = new dijit.layout.ContentPane({
          closable: closable,
          id: id,
          style: "padding:0px;border:none;margin:0px;overflow:hidden;",
          title: buildspace.truncateString(title, 35),
          content: content
        });
        this.addChild(pane);
        return this.selectChild(pane);
      },
      itemListContainer: function() {
        return new ItemListContainer({
          purchaseOrder: this.purchaseOrder
        });
      },
      informationContainer: function(response) {
        return new PurchaseOrderViewOnlyForm({
          poId: this.purchaseOrder.id,
          data: response
        });
      }
    });
  });

}).call(this);
