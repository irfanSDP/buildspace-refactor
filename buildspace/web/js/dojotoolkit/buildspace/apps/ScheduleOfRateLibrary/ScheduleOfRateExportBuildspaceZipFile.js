// Generated by CoffeeScript 1.9.0
(function() {
  define('buildspace/apps/ScheduleOfRateLibrary/ScheduleOfRateExportBuildspaceZipFile', ["dojo/_base/declare", 'dojo/_base/lang', "dojo/keys", "dojo/parser", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", 'dijit/Toolbar', 'dijit/form/Button', "dijit/layout/BorderContainer", "dijit/form/ValidationTextBox", "dijit/form/SimpleTextarea", "dijit/registry", "dojo/dom-style", "dojo/dom-form", "dojo/request", "dojo/request/iframe", "dojox/validate/web", "dijit/form/Select", "dijit/form/FilteringSelect", "dojo/store/Memory", "dojox/form/Manager", "dojo/text!./templates/ScheduleOfRateLibraryExportBuildSpaceForm.html", 'dojo/i18n!buildspace/nls/ScheduleOfRateLibrary'], function(declare, lang, keys, parser, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, Toolbar, Button, BorderContainer, ValidationTextBox, SimpleTextarea, registry, domStyle, domForm, request, iframe, web, Select, FilteringSelect, Memory, Manager, template, nls) {
    var ScheduleOfRateLibraryExportBuildSpaceForm;
    ScheduleOfRateLibraryExportBuildSpaceForm = declare("buildspace.apps.ScheduleOfRateLibrary.ScheduleOfRateLibraryExportBuildSpaceForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
      baseClass: "buildspace-form",
      scheduleOfRateLibraryId: -1,
      templateString: template,
      region: 'center',
      style: "overflow: auto;",
      formInfo: null,
      nls: nls,
      dialogContainer: null,
      "export": function() {
        var form, self, values;
        self = this;
        form = this.rfqExportForm;
        if (!form.validate()) {
          return false;
        }
        values = dojo.formToObject(form.id);
        return buildspace.windowOpen('POST', 'scheduleOfRate/exportBuildSpaceXML', {
          fileName: values.fileName,
          scheduleOfRateLibraryId: self.scheduleOfRateLibraryId
        });
      }
    });
    return declare('buildspace.apps.ScheduleOfRateLibrary.ScheduleOfRateLibraryExportBuildSpaceDialog', dijit.Dialog, {
      title: nls.exportScheduleOfRateLibraryBuildSpace,
      style: "padding:0px;margin:0px;width:480px;height:160px;",
      scheduleOfRateLibraryId: -1,
      formInfo: null,
      buildRendering: function() {
        var content;
        content = this.createContent();
        this.content = content;
        content.startup();
        return this.inherited(arguments);
      },
      postCreate: function() {
        domStyle.set(this.containerNode, {
          padding: "0px",
          margin: "0px"
        });
        this.closeButtonNode.style.display = "none";
        return this.inherited(arguments);
      },
      createContent: function() {
        var borderContainer, form, self, toolbar;
        self = this;
        borderContainer = new BorderContainer({
          style: "width:480px;height:160px;padding:0;margin:0;",
          gutters: false
        });
        form = new ScheduleOfRateLibraryExportBuildSpaceForm({
          scheduleOfRateLibraryId: this.scheduleOfRateLibraryId,
          formInfo: this.formInfo,
          dialogContainer: self
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:2px;overflow:hidden;"
        });
        toolbar.addChild(new Button({
          label: nls["export"],
          iconClass: "icon-16-container icon-16-export",
          onClick: function() {
            return form["export"]();
          }
        }));
        toolbar.addChild(new dijit.ToolbarSeparator());
        toolbar.addChild(new dijit.form.Button({
          label: nls.close,
          iconClass: "icon-16-container icon-16-close",
          onClick: function() {
            return self.hide();
          }
        }));
        borderContainer.addChild(toolbar);
        borderContainer.addChild(form);
        return borderContainer;
      },
      _onKey: function(e) {
        var key;
        key = e.keyCode;
        if (key === keys.ESCAPE) {
          return dojo.stopEvent(e);
        }
      },
      onHide: function() {
        return this.destroyRecursive();
      }
    });
  });

}).call(this);
