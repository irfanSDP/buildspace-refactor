// Generated by CoffeeScript 1.9.0
(function() {
    define("buildspace/apps/SystemAdministration/UserMaintenance/UserProfileForm", ["dojo/_base/declare", "dojo/on", "dojo/_base/lang", "dojo/html", "dojo/dom", "dojo/dom-attr", "dojo/dom-style", "dojo/_base/array", "dijit/_WidgetBase", "dijit/_TemplatedMixin", "dojo/text!./templates/userProfileForm.html", "dojo/i18n!buildspace/nls/UserProfile"], function(declare, on_, lang, html, dom, domAttr, domStyle, array, _WidgetBase, _TemplatedMixin, userProfileFormTemplate, nls) {

    var UserProfileForm = declare("buildspace.apps.SystemAdministration.UserMaintenance.UserProfileForm", [_WidgetBase, _TemplatedMixin], {
        templateString: userProfileFormTemplate,
        baseClass: "buildspace-form",
        region: "center",
        style: "border:none;padding:5px;overflow:auto;",
        user: null,
        nls: nls,
        constructor: function(args) {
            var imgPath, profileImg;
            var user = this.user = args.user;
            profileImg = user.profile_img;
            this.imgPath = require.toUrl("images/profiles/" + profileImg);
        }
    });

    return declare("buildspace.apps.SystemAdministration.UserMaintenance.UserProfileFormContainer", dijit.layout.BorderContainer, {
        region: "top",
        style: "padding:0px; width: 560px; height: 200px;",
        gutters: false,
        user: null,
        userMaintenanceGrid: null,
        postCreate: function() {
            this.inherited(arguments);
            var userProfileForm = new UserProfileForm({
                user: this.user
            });

            if(!this.user.is_super_admin){
                var toolbar = new dijit.Toolbar({
                    region: "top",
                    style: "outline:none!important;border-bottom: 1px solid #ccc;border-top:none;border-left:none;border-right:none;padding:2px;width:100%;"
                });
                toolbar.addChild(new dijit.form.Button({
                    label: nls.disableAccessToBuildspacePro,
                    iconClass: "icon-16-container icon-16-delete",
                    style: "outline:none!important;",
                    onClick: dojo.hitch(this, "disableAccessToBuildspace")
                }));

                this.addChild(toolbar);
            }

            this.addChild(userProfileForm);
        },
        disableAccessToBuildspace: function(){
            var pb = buildspace.dialog.indeterminateProgressBar({
                title: nls.pleaseWait + '...'
            });
            var self = this;
            new buildspace.dialog.confirm(nls.disableAccessToBuildspacePro, nls.areYouSureToDisableAccessToBuildspacePro, 80, 320, function() {
                pb.show().then(function(){
                    dojo.xhrPost({
                        url: 'systemAdministration/disableAccessToBuildspace',
                        content: {
                            id: self.user.id,
                            _csrf_token: self.user._csrf_token
                        },
                        handleAs: 'json',
                        load: function(data) {
                            pb.hide();
                            if (data.success) {
                                var widget = dijit.byId('userMaintenance-stackContainer');
                                if (widget) {
                                    var children = widget.getChildren();
                                    var index = dojo.indexOf(children, dijit.byId('userMaintenance-userList'));
                                    index = index + 1;
                                    widget.selectChild(children[index]);

                                    self.userMaintenanceGrid.refreshGrid();
                                }
                            } else {
                            }
                        },
                        error: function() {
                            return pb.hide();
                        }
                    });
                });

            }, function() {
            });
        }
    });
  });

}).call(this);
