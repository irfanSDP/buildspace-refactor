// Generated by CoffeeScript 1.9.0
(function() {
    define('buildspace/apps/CompanyDirectories/Branches/CompanyBranchForm', ["dojo/_base/declare", 'dojo/_base/lang', "dojo/parser", "dijit/_WidgetBase", "dijit/_OnDijitClickMixin", "dijit/_TemplatedMixin", "dijit/_WidgetsInTemplateMixin", 'dijit/Toolbar', 'dijit/form/Button', "dijit/layout/BorderContainer", "dijit/form/ValidationTextBox", "dijit/form/SimpleTextarea", "dijit/registry", "dojo/dom-style", "dojo/dom-form", "dojo/request", "dojox/validate/web", "dijit/form/Select", "dijit/form/FilteringSelect", "dojo/store/Memory", "dojox/form/Manager", "dojo/text!./templates/companyBranchForm.html", 'dojo/i18n!../../../nls/CompanyDirectories'], function(declare, lang, parser, _WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin, Toolbar, Button, BorderContainer, ValidationTextBox, SimpleTextarea, registry, domStyle, domForm, request, web, Select, FilteringSelect, Memory, Manager, template, nls) {
        var companyBranchForm, companyBranchFormContainer;
        companyBranchForm = declare("buildspace.apps.CompanyDirectories.Branches.Branches.CompanyBranchForm", [_WidgetBase, _OnDijitClickMixin, _TemplatedMixin, _WidgetsInTemplateMixin], {
            baseClass: "buildspace-form",
            companyId: -1,
            branchId: -1,
            newBranchId: -1,
            templateString: template,
            region: 'center',
            style: "overflow: auto;",
            formInfo: null,
            companyBranchContainer: null,
            nls: nls,
            editable: true,
            postCreate: function() {
                this.inherited(arguments);
                return this.createDropdown();
            },
            startup: function() {
                this.inherited(arguments);
                this["branchForm-" + this.companyId + "-" + this.branchId].setFormValues(this.formInfo);
                if (!this.editable) {
                    return this["branchForm-" + this.companyId + "-" + this.branchId].disable();
                }
            },
            createDropdown: function() {
                var countrySelectStore, self, stateSelectStore;
                self = this;
                countrySelectStore = new dojo.data.ItemFileReadStore({
                    url: "projectBuilder/getCountry"
                });
                this.stateSelectStore = stateSelectStore = new dojo.data.ItemFileReadStore({
                    url: "projectBuilder/getStateByCountry/regionId/" + self.formInfo["company_branch[region_id]"]
                });
                this.countrySelect = new FilteringSelect({
                    name: "company_branch[region_id]",
                    store: countrySelectStore,
                    style: "width: 140px; padding:2px;",
                    searchAttr: "name",
                    value: self.formInfo["company_branch[region_id]"],
                    required: true,
                    onChange: function(country) {
                        if (country) {
                            self.stateSelect.set('readOnly', false);
                        } else {
                            self.stateSelect.set('readOnly', true);
                        }
                        return self.updateStateSelectStore(country);
                    }
                }).placeAt(self.branchCountrySelectDivNode);
                return this.stateSelect = new FilteringSelect({
                    name: "company_branch[sub_region_id]",
                    store: stateSelectStore,
                    style: "width: 140px; padding:2px;",
                    required: true,
                    searchAttr: "name",
                    readOnly: self.formInfo["company_branch[sub_region_id]"] > 0 ? false : true,
                    value: self.formInfo["company_branch[sub_region_id]"]
                }).placeAt(self.branchStateSelectDivNode);
            },
            updateStateSelectStore: function(countryId) {
                if (countryId == null) {
                    countryId = 0;
                }
                if (!countryId) {
                    countryId = 0;
                }
                this.stateSelectStore = new dojo.data.ItemFileReadStore({
                    url: "projectBuilder/getStateByCountry/regionId/" + countryId,
                    clearOnClose: true
                });
                this.stateSelect.store.close();
                this.stateSelect.set('store', this.stateSelectStore);
                return this.stateSelect.set('value', '');
            },
            clearInputErrorMsgs: function() {
                var errorBlock, i, presetErrorBlocks, self, _results;
                self = this;
                presetErrorBlocks = {
                    name: null,
                    contact_person_name: null,
                    contact_person_email: null,
                    contact_person_direct_line: null,
                    contact_person_mobile: null,
                    phone_number: null,
                    fax_number: null,
                    address: null,
                    postcode: null
                };
                _results = [];
                for (i in presetErrorBlocks) {
                    errorBlock = self["error-" + i];
                    errorBlock.innerHTML = presetErrorBlocks[i];
                    _results.push(domStyle.set(errorBlock, "display", "none"));
                }
                return _results;
            },
            save: function() {
                var form, formValues, pb, self;
                self = this;
                this.clearInputErrorMsgs();
                form = this["branchForm-" + this.companyId + "-" + this.branchId];
                if (!form.validate()) {
                    return false;
                }
                formValues = dojo.formToObject(this["branchForm-" + this.companyId + "-" + this.branchId].id);
                pb = buildspace.dialog.indeterminateProgressBar({
                    title: nls.pleaseWait + "..."
                });
                if (self.newBranchId > 0) {
                    lang.mixin(formValues, {
                        companyId: self.companyId,
                        branchId: self.newBranchId
                    });
                } else {
                    lang.mixin(formValues, {
                        companyId: self.companyId,
                        branchId: self.branchId
                    });
                }
                pb.show();
                return request.post('companyDirectories/updateBranchInformation', {
                    data: formValues,
                    handleAs: 'json'
                }).then(function(response) {
                    var errorBlock, i, _results;
                    pb.hide();
                    if (response.success && response.id > 0) {
                        self.newBranchId = response.id;
                        return self.companyBranchContainer.grid.refreshGrid();
                    } else {
                        _results = [];
                        for (i in response.errorMsgs) {
                            if (i !== 'username') {
                                errorBlock = self["error-" + i];
                                errorBlock.innerHTML = response.errorMsgs[i];
                                _results.push(domStyle.set(errorBlock, "display", "block"));
                            } else {
                                _results.push(void 0);
                            }
                        }
                        return _results;
                    }
                }, function(error) {
                    return pb.hide();
                });
            }
        });

        return declare("buildspace.apps.CompanyDirectories.Branches.CompanyBranchFormContainer", BorderContainer, {
            companyId: -1,
            branchId: -1,
            style: 'width:100%;height:100%;padding:0;margin:0;',
            gutters: false,
            formInfo: null,
            companyBranchContainer: null,
            region: 'top',
            editable: true,
            postCreate: function() {
                this.inherited(arguments);

                var form = new companyBranchForm({
                    companyId: this.companyId,
                    branchId: this.branchId,
                    formInfo: this.formInfo,
                    companyBranchContainer: this.companyBranchContainer,
                    editable: this.editable
                });

                if(this.editable){
                    var toolbar = new Toolbar({
                        region: 'top',
                        style: "outline:none!important;padding:2px;overflow:hidden;"
                    });
                    toolbar.addChild(new Button({
                        label: nls.save,
                        iconClass: "icon-16-container icon-16-save",
                        disabled: this.editable ? false : true,
                        onClick: function() {
                            return form.save();
                        }
                    }));
                    this.addChild(toolbar);
                }

                return this.addChild(form);
            }
        });
    });

}).call(this);
