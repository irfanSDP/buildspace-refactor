// Generated by CoffeeScript 1.9.0
(function() {
  define(["dojo/_base/declare", 'dojo/data/ItemFileWriteStore', 'dojo/request', 'dijit/layout/TabContainer', 'dijit/layout/ContentPane', 'dijit/layout/BorderContainer', 'dijit/layout/StackController', 'dijit/layout/StackContainer', 'dijit/Toolbar', 'dijit/form/Button', './grid', './CompanyDirectoriesDialog', 'buildspace/widget/grid/cells/Formatter', 'dojo/i18n!../../nls/CompanyDirectories', 'buildspace/widget/grid/Filter'], function(declare, ItemFileWriteStore, request, TabContainer, ContentPane, BorderContainer, StackController, StackContainer, Toolbar, Button, CompanyDirectoriesGrid, CompanyDirectoriesDialog, Formatter, nls, FilterToolbar) {
    return declare("buildspace.apps.CompanyDirectories", buildspace.apps._App, {
      init: function(args) {
        var grid, mainContainer, self, store, toolbar;
        self = this;
        this.win = new buildspace.widget.Window({
          title: nls.appName,
          height: "300px",
          width: "450px",
          showMaximize: false,
          iconClass: this.iconClass,
          onClose: dojo.hitch(this, "kill")
        });
        store = new dojo.data.ItemFileWriteStore({
          url: 'companyDirectories/getCompanyListing',
          clearOnClose: true,
          urlPreventCache: true
        });
        grid = this.companyDirectoriesGrid = new CompanyDirectoriesGrid({
          structure: self.getGridLayout(),
          store: store,
          companyDirectoriesGridContainer: self
        });
        toolbar = new Toolbar({
          region: 'top',
          style: "outline:none!important;padding:0px;border-bottom:none;width:100%;"
        });
        mainContainer = this.mainContainer = new BorderContainer({
          style: "padding:0px;width:100%;height:100%;",
          gutters: false
        });
        mainContainer.addChild(new FilterToolbar({
          region: 'top',
          grid: grid,
          editableGrid: false,
          filterFields: new Array('company_name', 'registration_no', 'business_type', 'country', 'state')
        }));
        mainContainer.addChild(toolbar);
        mainContainer.addChild(grid);
        this.win.addChild(mainContainer);
        this.win.show();
        return this.win.startup();
      },
      companyDirectoriesDialogForm: function(companyId) {
        var pb, self;
        self = this;
        pb = new buildspace.dialog.indeterminateProgressBar({
          title: nls.processing + "..."
        });
        pb.show();
        return request.get('companyDirectories/getCompanyInformation', {
          query: {
            companyId: companyId
          },
          handleAs: 'json'
        }).then(function(response) {
          var dialog;
          pb.hide();
          dialog = new CompanyDirectoriesDialog({
            title: nls.add,
            data: response,
            companyDirectoriesGrid: self.companyDirectoriesGrid
          });
          return dialog.show();
        }, function(error) {
          return pb.hide();
        });
      },
      getGridLayout: function() {
        var formatter = new Formatter;
        return [{
            name: "No",
            field: "id",
            width: '30px',
            styles: 'text-align: center;',
            formatter: formatter.rowCountCellFormatter
          },{
            name: nls.companyName,
            field: "company_name",
            width: 'auto'
          },{
            name: nls.registrationNo,
            field: "registration_no",
            width: '120px',
            styles: 'text-align: center;'
          },{
            name: nls.businessType,
            field: "business_type",
            width: '120px',
            styles: 'text-align: center;'
          },{
            name: nls.country,
            field: "country",
            width: '120px',
            styles: 'text-align: center;'
          },{
            name: nls.state,
            field: "state",
            width: '120px',
            styles: 'text-align: center;'
          }];
      },
      kill: function() {
        if (this.win && typeof(this.win) != "undefined"){
            this.win.close();
        }
      }
    });
  });

}).call(this);
