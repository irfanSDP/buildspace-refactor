Resource:
  connection: main_conn
  options:
    symfony:
      filter: false
  tableName: resources
  actAs: [Timestampable, Signable, SoftDelete]
  indexes:
    resource_id_idx:
      fields: [id]
    resource_name_unique_idx:
      fields: [name, deleted_at]
      type: unique
  columns:
    id:   { type: integer, primary: true, notnull: true, autoincrement: true }
    name: { type: string(200), notnull: true }

ResourceTrade:
  connection: main_conn
  options:
    symfony:
      filter: false
      form: false
  tableName: resource_trades
  actAs: [Timestampable, Signable, SoftDelete]
  indexes:
    resource_trade_id_idx:
      fields: [id, resource_id]
    resource_trade_priority_unique_idx:
      fields: [priority, resource_id, deleted_at]
      type: unique
  columns:
    id:          { type: integer, primary: true, notnull: true, autoincrement: true }
    description: { type: string, notnull: false }
    resource_id: { type: integer, notnull: true }
    priority:    { type: integer, notnull: true, default: 0 }
  relations:
    Resource:
      local: resource_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: Trades
      foreignType: many

ResourceItem:
  connection: main_conn
  options:
    symfony:
      filter: false
      form: false
  tableName: resource_items
  actAs:
    Timestampable:
    Signable:
    SoftDelete:
    NestedSet:
      levelColumnName: level
      hasManyRoots: true
      rootColumnName: root_id
  indexes:
    resources_items_id_idx:
      fields: [id, root_id, lft, rgt]
    resources_items_type_idx:
      fields: [type]
    resources_items_fk_idx:
       fields: [root_id, resource_trade_id, uom_id]
  columns:
    id:                      { type: integer, primary: true, notnull: true, autoincrement: true }
    description:             { type: string, notnull: false }
    type:                    { type: integer(4), notnull: true }
    resource_trade_id:       { type: integer, notnull: true }
    uom_id:                  { type: integer, notnull: false }
    import_resource_item_id: { type: integer, default: null }
    import_sor_item_id:      { type: integer, default: null }
    import_bq_item_id:       { type: integer, default: null }
    priority:                { type: integer, notnull: true, default: 0 }
  relations:
    ResourceTrade:
      local: resource_trade_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: Items
      foreignType: many
    UnitOfMeasurement:
      local: uom_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: ResourceItems
      foreignType: many
    ScheduleOfRateItem:
      local: import_sor_item_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: ResourceItems
      foreignType: many
    BQItem:
      local: import_bq_item_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: ResourceItems
      foreignType: many

ResourceItemFormulatedColumn:
  connection: main_conn
  options:
    symfony:
      filter: false
      form: false
  tableName: resource_item_formulated_columns
  actAs: [FormulatedColumn, Timestampable, Signable, SoftDelete]
  indexes:
    resource_ifc_id_idx:
      fields: [id, relation_id, value, final_value, column_name, deleted_at]
    resource_ifc_rel_idx:
      fields: [relation_id]
  columns:
    id: { type: integer, primary: true, notnull: true, autoincrement: true }
  relations:
    ResourceItem:
      local: relation_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: FormulatedColumns
      foreignType: many

ResourceItemEdge:
  connection: main_conn
  options:
    symfony:
      filter: false
      form: false
  tableName: resource_item_edges
  actAs: [Timestampable, Signable, SoftDelete]
  indexes:
    resource_ie_id_idx:
      fields: [id, node_from, node_to, column_name, deleted_at]
    resource_ie_fk_idx:
      fields: [node_from, node_to]
  columns:
    id:          { type: integer, primary: true, notnull: true, autoincrement: true }
    node_from:   { type: integer, notnull: true }
    node_to:     { type: integer, notnull: true }
    column_name: { type: string(50), notnull: true }
  relations:
    NodeFrom:
      class: ResourceItemFormulatedColumn
      local: node_from
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: NodeFromEdges
      foreignType: many
    NodeTo:
      class: ResourceItemFormulatedColumn
      local: node_to
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: NodeToEdges
      foreignType: many

ResourceItemSelectionOfRate:
  connection: main_conn
  tableName: resource_item_selection_of_rates
  options:
    symfony:
      filter: false
  actAs: [Timestampable, Signable]
  indexes:
    resource_item_uniq_idx:
      fields: [resource_item_id]
      type: unique
  columns:
    resource_item_id: { type: integer, notnull: false }
    sorting_type:     { type: integer, notnull: false }
  relations:
    ResourceItem:
      local: resource_item_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: SelectionOfRate
      foreignType: one

ResourceItemSelectedRate:
  connection: main_conn
  tableName: resource_item_selection_of_rates
  options:
    symfony:
      filter: false
  actAs: [Timestampable, Signable]
  indexes:
    resource_item_uniq_idx:
      fields: [resource_item_id]
      type: unique
  columns:
    resource_item_id: { type: integer, notnull: false }
    sorting_type:     { type: integer, notnull: false }
  relations:
    ResourceItem:
      local: resource_item_id
      foreign: id
      onDelete: CASCADE
      type: one
      foreignAlias: SelectionOfRate
      foreignType: one
    RFQItemRates:
      class: RFQItemRate
      local: resource_item_selection_of_rate_id
      foreign: request_for_quotation_item_rate_id
      refClass: ResourceSelectionOfRateRfqItemRate
      onDelete: CASCADE

ResourceSelectionOfRateRfqItemRate:
  connection: main_conn
  options:
    symfony:
      filter: false
      form: false
  actAs: [Timestampable]
  indexes:
    resource_rate_selection_rfq_item_rate_fk_idx:
      fields: [resource_item_selection_of_rate_id, request_for_quotation_item_rate_id]
      type: unique
  columns:
    resource_item_selection_of_rate_id:
      type: integer
      primary: true
    request_for_quotation_item_rate_id:
      type: integer
      primary: true
  relations:
    SelectionOfRate:
      local: resource_item_selection_of_rate_id
      onDelete: CASCADE
    RFQItemRate:
      local: request_for_quotation_item_rate_id
      onDelete: CASCADE