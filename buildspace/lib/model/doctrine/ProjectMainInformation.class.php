<?php

/**
 * ProjectMainInformation
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ProjectMainInformation extends BaseProjectMainInformation
{
    const STATUS_PRETENDER = 1;
    const STATUS_TENDERING = 2;
    const STATUS_POSTCONTRACT = 4;
    const STATUS_IMPORT = 8;
    const STATUS_IMPORT_SUB_PACKAGE = 16;
	const STATUS_POSTCONTRACT_SUB_PACKAGE = 32;
    const STATUS_PRETENDER_TEXT = "Pre Tender";
    const STATUS_TENDERING_TEXT = "Tendering";
    const STATUS_POSTCONTRACT_TEXT = "Post Contract";
    const STATUS_IMPORT_TEXT = "Participated";
    const STATUS_IMPORT_SUB_PACKAGE_TEXT = "Sub Package";
	const STATUS_POSTCONTRACT_SUB_PACKAGE_TEXT = "Sub Package Post Contract";
    const TENDER_TYPE_TENDERED = 1;
    const TENDER_TYPE_PARTICIPATED = 2;
    const ERROR_MSG_PROJECT_EXIST = "Project Already Exists";
    const ERROR_MSG_WRONG_PROJECT_RATES = "Please Choose a rate from the same project source";
	const ERROR_MSG_WRONG_SUB_PACKAGE_RATES = "Please Choose a rate from the same sub package source";
    const ERROR_MSG_UNKNOWN_TENDER_TYPE = "Unknown Tender Type";

    public function getEProjectProject()
    {
        return Doctrine_Query::create()
            ->from('EProjectProject p')
            ->where('p.id = ?',$this->eproject_origin_id)
            ->fetchOne();
    }

    public static function getProjectStatusById($statusId)
    {
        switch($statusId)
        {
            case self::STATUS_PRETENDER:
                return self::STATUS_PRETENDER_TEXT;
            case self::STATUS_TENDERING:
                return self::STATUS_TENDERING_TEXT;
            case self::STATUS_POSTCONTRACT:
                return self::STATUS_POSTCONTRACT_TEXT;
            case self::STATUS_IMPORT:
                return self::STATUS_IMPORT_TEXT;
            case self::STATUS_IMPORT_SUB_PACKAGE:
                return self::STATUS_IMPORT_SUB_PACKAGE_TEXT;
           	case self::STATUS_POSTCONTRACT_SUB_PACKAGE:
                return self::STATUS_POSTCONTRACT_SUB_PACKAGE_TEXT;
            default:
                return null;
        }
    }

    public static function getWorkCategoryById($workCategoryId)
    {
        $workCategory = DoctrineQuery::create()->select('c.id, c.name')
        ->from('WorkCategory c')
        ->addWhere('c.id = ? ', $workCategoryId)
        ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
        ->fetchOne();

        return $workCategory ? $workCategory['name'] : null;
    }

    public static function getCountryNameById($countryId)
    {
        $country = DoctrineQuery::create()->select('c.id, c.country')
        ->from('Regions c')
        ->addWhere('c.id = ? ', $countryId)
        ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
        ->fetchOne();

        return $country ? $country['country'] : null;
    }

    public static function getStateNameById($stateId)
    {
        $state = DoctrineQuery::create()->select('c.id, c.name')
        ->from('Subregions c')
        ->addWhere('c.id = ? ', $stateId)
        ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
        ->fetchOne();

        return $state ? $state['name'] : null;
    }

    public function postSave($event)
    {
        if($this->deleted_at == NULL)
        {
            if($this->ProjectStructure->ProjectSummaryFooter->isNew())
            {
                $projectSummaryFooter = $this->ProjectStructure->ProjectSummaryFooter;

                $projectSummaryFooter->project_structure_id = $this->project_structure_id;
                $projectSummaryFooter->save();
            }

            if($this->ProjectStructure->ProjectSummaryGeneralSetting->isNew())
            {
                $projectSummaryGeneralSetting = $this->ProjectStructure->ProjectSummaryGeneralSetting;

                $projectSummaryGeneralSetting->project_structure_id;
                $projectSummaryGeneralSetting->project_title = $this->ProjectStructure->title;
                $projectSummaryGeneralSetting->save();
            }
        }

        return parent::postSave($event);
    }
}
