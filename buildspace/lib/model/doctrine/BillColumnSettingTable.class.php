<?php

/**
 * BillColumnSettingTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BillColumnSettingTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BillColumnSettingTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BillColumnSetting');
    }

    public static function getBillColumnSettingsByBillId($billId, $hydrate = null)
    {
        $query = DoctrineQuery::create()->select('*')
            ->from('BillColumnSetting c')
            ->where('c.project_structure_id = ?', $billId)
            ->andWhere('c.deleted_at IS NULL');

        if(!is_null($hydrate))
        {
            $query->setHydrationMode($hydrate);
        }

        return $query->execute();
    }

    public static function getAllBillColumnSettingsInProject(ProjectStructure $project, $groupByBillId = false){

        $pdo = self::getInstance()->getConnection()->getDbh();

        $stmt = $pdo->prepare("SELECT bill.id as bill_id, cs.id, cs.name, cs.quantity
            FROM " . self::getInstance()->getTableName() . " cs
            JOIN " . ProjectStructureTable::getInstance()->getTableName() . " bill ON cs.project_structure_id = bill.id
            WHERE bill.root_id = " . intval($project->id) . " 
            AND bill.deleted_at IS NULL
            AND cs.deleted_at IS NULL
            ORDER BY bill.lft asc, cs.id desc
            ");

        $stmt->execute();

        if($groupByBillId)
        {
            $billColumnSettings = $stmt->fetchAll(PDO::FETCH_GROUP|PDO::FETCH_ASSOC);
        }
        else
        {
            $billColumnSettings = $stmt->fetchAll(PDO::FETCH_ASSOC);
        }

        return $billColumnSettings;
    }
}