<?php

/**
 * BillItemTypeReferenceFormulatedColumn
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BillItemTypeReferenceFormulatedColumn extends BaseBillItemTypeReferenceFormulatedColumn
{
    public function getConvertedValue()
    {
        return BillItemTypeReferenceFormulatedColumnTable::getConvertedValue($this->value);
    }

    public function save(Doctrine_Connection $conn = null)
    {
        parent::save($conn);

        if($this->deleted_at == NULL)
        {
            $this->refresh();

            if($this->column_name == BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT or $this->column_name == BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT_REMEASUREMENT)
            {
                $this->clearBuildUpQuantities();

                $billItemTypeRef = $this->BillItemTypeReference;

                $billItemTypeRef->updateTotalQuantity($this->column_name, $this->final_value);

                $billItemTypeRef->updateTypeTotal();

                $this->setBillItemTypeReferenceQuantityDifferencePercentage($conn);
            }
        }
    }

    public function clearBuildUpQuantities()
    {
        if(!$this->has_build_up)
        {
            $type = $this->column_name == BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT ? BillBuildUpQuantityItem::QUANTITY_PER_UNIT_ORIGINAL : BillBuildUpQuantityItem::QUANTITY_PER_UNIT_REMEASUREMENT;

            Doctrine_Query::create()
                ->delete('BillBuildUpQuantitySummary s')
                ->where('s.bill_item_id = ?', $this->BillItemTypeReference->bill_item_id)
                ->andWhere('s.bill_column_setting_id = ?', $this->BillItemTypeReference->bill_column_setting_id)
                ->andWhere('s.type = ?', $type)
                ->execute();

            DoctrineQuery::create()->delete('BillBuildUpQuantityItem i')
                ->where('i.bill_item_id = ?', $this->BillItemTypeReference->bill_item_id)
                ->andWhere('i.bill_column_setting_id = ?', $this->BillItemTypeReference->bill_column_setting_id)
                ->andWhere('i.type = ?', $type)
                ->execute();

            Doctrine_Query::create()
                ->delete('ScheduleOfQuantityBillItemXref x')
                ->where('x.bill_item_id = ?', $this->BillItemTypeReference->bill_item_id)
                ->andWhere('x.bill_column_setting_id = ?', $this->BillItemTypeReference->bill_column_setting_id)
                ->andWhere('x.type = ?', $type)
                ->execute();
        }
    }

    private function setBillItemTypeReferenceQuantityDifferencePercentage(Doctrine_Connection $conn = null)
    {
        $billItemTypeRef = $this->BillItemTypeReference;

        $firstQtyFormulatedColumn = BillItemTypeReferenceTable::getFormulatedColumnByRelationIdAndColumnName($this->relation_id, BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT);
        $secondQtyFormulatedColumn = BillItemTypeReferenceTable::getFormulatedColumnByRelationIdAndColumnName($this->relation_id, BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT_REMEASUREMENT);

        $percentageDifference = 0;

        if($firstQtyFormulatedColumn and !$firstQtyFormulatedColumn->isNew() and
            $secondQtyFormulatedColumn and !$secondQtyFormulatedColumn->isNew() and
            $secondQtyFormulatedColumn->final_value != NULL and $firstQtyFormulatedColumn->final_value != NULL)
        {
            $firstValue = $firstQtyFormulatedColumn->final_value;
            $secondValue = $secondQtyFormulatedColumn->final_value;

            $difference = $firstValue !=  0 ? ($secondValue - $firstValue) / $firstValue : 0;
            $percentageDifference = number_format(($difference * 100), '2','.','');
        }

        if($billItemTypeRef->quantity_per_unit_difference != $percentageDifference)
        {
            $billItemTypeRef->setQuantityPerUnitDifference($percentageDifference);
            $billItemTypeRef->save($conn);
        }
    }
}
