<?php

/**
 * PreliminariesWorkBasedClaimTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PreliminariesWorkBasedClaimTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PreliminariesWorkBasedClaimTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PreliminariesWorkBasedClaim');
    }

    public static function getRecordsByLastRevision(Array $lastLatestRevision)
    {
        $query = DoctrineQuery::create()
        ->from('PreliminariesWorkBasedClaim br')
        ->where('br.revision_id = ?', $lastLatestRevision['id'])
        ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY);

        return $query->execute();
    }

    public static function insertRecordsByNewRevision(PostContractClaimRevision $revision, Array $data)
    {
        if ( count($data) > 0 )
        {
            $pdo = self::getInstance()->getConnection()->getDbh();
            $sql = 'INSERT INTO '.PreliminariesWorkBasedClaimTable::getInstance()->getTableName().' (post_contract_bill_item_rate_id, builders_work_done, total_builders_work, total, revision_id, created_at, updated_at) VALUES ';

            foreach ( $data as $claim )
            {
                $sql_arr[] = '(' . $claim['post_contract_bill_item_rate_id'] . ", " . $claim['builders_work_done'] . ", " . $claim['total_builders_work'] . ", " . $claim['total'] . ", " . $revision->id . ", NOW(), NOW())";
            }

            $sql .= implode(", ", $sql_arr);

            $statement = $pdo->prepare($sql);
            $result    = $statement->execute();
        }

    }
}