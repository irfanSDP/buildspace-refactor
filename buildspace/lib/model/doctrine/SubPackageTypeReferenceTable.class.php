<?php

/**
 * SubPackageTypeReferenceTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SubPackageTypeReferenceTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object SubPackageTypeReferenceTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('SubPackageTypeReference');
    }

    public static function getBySubPackageId($subPackageId, $projectStructureId)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $stmt = $pdo->prepare("SELECT stp.bill_column_setting_id AS id, bcs.project_structure_id, bcs.name AS name, COUNT(stp.counter) AS quantity
            FROM ".SubPackageTypeReferenceTable::getInstance()->getTableName()." AS stp
            LEFT JOIN ".BillColumnSettingTable::getInstance()->getTableName()." AS bcs ON bcs.id = stp.bill_column_setting_id AND bcs.deleted_at IS NULL
            WHERE stp.sub_package_id = ".$subPackageId." AND bcs.project_structure_id = ".$projectStructureId." GROUP BY stp.bill_column_setting_id, bcs.project_structure_id, bcs.name, stp.bill_column_setting_id
            ORDER BY stp.bill_column_setting_id");

        $stmt->execute();

        $billColumnSettings = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if(!count($billColumnSettings))
        {
            $stmt = $pdo->prepare("SELECT bcs.id, bcs.name, 1 AS quantity
                FROM ".BillColumnSettingTable::getInstance()->getTableName()." AS bcs
                WHERE bcs.deleted_at IS NULL AND bcs.project_structure_id = ".$projectStructureId);

            $stmt->execute();

            $billColumnSettings = $stmt->fetchAll(PDO::FETCH_ASSOC);   
        }

        return $billColumnSettings;
    }

    public static function getIndividualUnits($subPackageId, $projectStructureId)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $stmt = $pdo->prepare("SELECT cs.id, stype.counter
                FROM " . SubPackageTypeReferenceTable::getInstance()->getTableName() . " stype
                LEFT JOIN " . BillColumnSettingTable::getInstance()->getTableName() . " cs ON cs.id = stype.bill_column_setting_id
                WHERE cs.project_structure_id = " . $projectStructureId . " AND stype.sub_package_id = " . $subPackageId . "
                ORDER BY stype.bill_column_setting_id");

        $stmt->execute();

        $results = $stmt->fetchAll(PDO::FETCH_ASSOC | PDO::FETCH_GROUP);

        $units = array();

        foreach($results as $billColumnSettingId => $result)
        {
            $units[$billColumnSettingId] = array();

            foreach($result as $counter)
            {
                $units[$billColumnSettingId][] = $counter['counter'];
            }
        }

        return $units;
    }
}