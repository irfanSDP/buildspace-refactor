<?php

/**
 * RequestForVariationItemClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 *  
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class RequestForVariationItemClaim extends BaseRequestForVariationItemClaim
{
    public function setAmount(float $value)
    {
        $variationOrderItem = $this->VariationOrderItem;

        $originalValue = $value;
        $originalRefAmount = $variationOrderItem->reference_amount;

        $absoluteReferenceAmount = abs($variationOrderItem->reference_amount);
        $absoluteValue = abs($value);

        $absoluteValue = $absoluteValue > $absoluteReferenceAmount ? $absoluteReferenceAmount : $absoluteValue;

        $value = (abs($originalValue) == $absoluteValue) ? $originalValue : $originalRefAmount;

        $percentage = ($originalRefAmount) ? ($value / $originalRefAmount) * 100 : 0;

        parent::_set('percentage', round($percentage, 2));
        
        return parent::_set('amount', $value);
    }

    public function setPercentage(float $value)
    {
        $variationOrderItem = $this->VariationOrderItem;

        $value = abs($value) > 100 ? 100 : $value;

        $value = round($value, 2);

        $amount = ($variationOrderItem->reference_amount) ? $variationOrderItem->reference_amount * ($value/100) : 0;

        parent::_set('amount', $amount);
        
        return parent::_set('percentage', $value);
    }

    public function updateClaimCertificateCertifiedAmount()
    {
        $variationOrderItem = $this->VariationOrderItem;

        $data = Doctrine_Query::create()->select('x.claim_certificate_id')
                ->from('RequestForVariationItemClaimCertificate x')
                ->andWhere('x.variation_order_item_id = ?', $variationOrderItem->id)
                ->limit(1)
                ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                ->fetchOne();
        
        if($data && $claimCertificate = Doctrine_Core::getTable('ClaimCertificate')->find(intval($data['claim_certificate_id'])))
        {
            //call claimCert save() method so it will update claim cert certified amount. Certified amount must include RFV claim value
            if($claimCertificate->status == ClaimCertificate::STATUS_TYPE_IN_PROGRESS)
            {
                $claimCertificate->save();
            }
        }
    }

    public function save(Doctrine_Connection $conn = null)
    {
        parent::save($conn);

        $this->updateClaimCertificateCertifiedAmount();
    }
}
