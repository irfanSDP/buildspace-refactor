<?php

/**
 * SubPackageBillItemRate
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class SubPackageBillItemRate extends BaseSubPackageBillItemRate
{
    public function save(Doctrine_Connection $conn = null)
    {
        $modifiedFields = $this->getModified(true);
        $oldRate = $this->rate;
        if(isset($modifiedFields['rate']))
        {
            $oldRate = $modifiedFields['rate'];
        }

        parent::save($conn);

        $this->refresh();

        $newRate = $this->rate;

        if($oldRate != $newRate)
        {
            $billColumnSettings = $this->BillItem->Element->ProjectStructure->BillColumnSettings;

            $pdo = $this->getTable()->getConnection()->getDbh();
            $grandTotal = 0;
            $singleUnitGrandTotal = 0;
            $billColumnSettingIds = Utilities::arrayValueRecursive('id', $billColumnSettings->toArray());

            $stmt = $pdo->prepare("SELECT r.bill_column_setting_id, COALESCE(COUNT(r.id), 0) FROM ".SubPackageTypeReferenceTable::getInstance()->getTableName()." r
            JOIN ".SubPackageCompanyTable::getInstance()->getTableName()." spc ON spc.sub_package_id = r.sub_package_id
            WHERE spc.id = ".$this->sub_package_company_id." AND r.bill_column_setting_id IN (".implode(',', $billColumnSettingIds).") GROUP BY r.bill_column_setting_id");

            $stmt->execute();

            $totalUnitAssignedByBillColumnSettings = $stmt->fetchAll(PDO::FETCH_GROUP | PDO::FETCH_COLUMN);

            foreach($billColumnSettings as $billColumnSetting)
            {
                $quantityFieldName = $billColumnSetting->use_original_quantity ? BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT : BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT_REMEASUREMENT;

                $stmt = $pdo->prepare("SELECT COALESCE(fc.final_value, 0) AS value FROM ".BillItemTypeReferenceFormulatedColumnTable::getInstance()->getTableName()." fc
                    JOIN ".BillItemTypeReferenceTable::getInstance()->getTableName()." r ON fc.relation_id = r.id
                    WHERE r.bill_item_id = ".$this->bill_item_id." AND r.bill_column_setting_id = ".$billColumnSetting->id."
                    AND r.include IS TRUE AND fc.column_name = '".$quantityFieldName."' AND fc.final_value <> 0
                    AND r.deleted_at IS NULL AND fc.deleted_at IS NULL");

                $stmt->execute();

                $quantity = $stmt->fetchColumn(0);

                $singleUnitGrandTotal += $newRate * $quantity;

                if(array_key_exists($billColumnSetting->id, $totalUnitAssignedByBillColumnSettings))
                {
                    $grandTotal += $newRate * $quantity * $totalUnitAssignedByBillColumnSettings[$billColumnSetting->id][0];
                }
            }

            $this->single_unit_grand_total = $singleUnitGrandTotal;
            $this->grand_total = $grandTotal;

            $this->parentSave($conn);
        }
    }

    public function parentSave(Doctrine_Connection $conn = null)
    {
        parent::save($conn);
    }
}
