<?php

/**
 * BillMarkupSettingTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BillMarkupSettingTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BillMarkupSettingTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BillMarkupSetting');
    }

    public static function getMarkupExcludedItemIds()
    {
        return array(
            BillItem::TYPE_HEADER,
            BillItem::TYPE_ITEM_RATE_ONLY,
            BillItem::TYPE_HEADER_N,
            BillItem::TYPE_NOID
        );
    }

    public static function updateBillMarkupAmountById($billMarkupSettingId)
    {
        $billMarkupSetting = self::getInstance()->find($billMarkupSettingId);

        if($billMarkupSetting->bill_markup_percentage <> 0)
        {
            $query = DoctrineQuery::create()->select('e.id')
                ->from('BillElement e')->leftJoin('e.ProjectStructure p')->leftJoin('p.BillMarkupSetting m')
                ->where('m.id = ?', $billMarkupSettingId)
                ->andWhere('m.bill_markup_percentage <> 0');
            $query->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY);

            $elements = $query->execute();
            $grandTotal = 0;

            foreach($elements as $element)
            {
                $elementGrandTotal = BillElementTable::getElementGrandTotalByElementId($element['id']);

                if($percentageMarkupColumn = BillElementTable::getFormulatedColumnByRelationIdAndColumnName($element['id'], BillElement::FORMULATED_COLUMN_MARKUP_PERCENTAGE, Doctrine_Core::HYDRATE_ARRAY))
                {
                    $elementGrandTotal += $elementGrandTotal * ($percentageMarkupColumn['final_value'] / 100);
                }

                $grandTotal += $elementGrandTotal;
            }

            //to update element markup amount column based on grand_total * markup percentage

            $amountMarkup = number_format($grandTotal * ($billMarkupSetting->bill_markup_percentage / 100), 5, '.', '');

            $billMarkupSetting->bill_markup_amount = $amountMarkup;
            $billMarkupSetting->save();
        }
    }

    public static function getMarkUpSettingsInfo(BillMarkupSetting $billMarkupSetting)
    {
        return array(
            'bill_markup_enabled'    => $billMarkupSetting->bill_markup_enabled,
            'bill_markup_percentage' => $billMarkupSetting->bill_markup_percentage,
            'element_markup_enabled' => $billMarkupSetting->element_markup_enabled,
            'item_markup_enabled'    => $billMarkupSetting->item_markup_enabled,
            'rounding_type'          => $billMarkupSetting->rounding_type > 0 ? $billMarkupSetting->rounding_type : BillMarkupSetting::ROUNDING_TYPE_DISABLED
        );
    }
}