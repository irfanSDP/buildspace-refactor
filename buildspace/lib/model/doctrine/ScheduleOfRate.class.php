<?php

/**
 * ScheduleOfRate
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ScheduleOfRate extends BaseScheduleOfRate
{
    public function delete(Doctrine_Connection $conn = null)
    {
        // get trade id associated with current deleted category
        $trades = Doctrine_Query::create()
        ->select('sort.id')
        ->from('ScheduleOfRateTrade sort')
        ->where('sort.schedule_of_rate_id = ?', $this->id)
        ->execute();

        $affectedTradeIds = array();

        foreach ( $trades as $trade )
        {
            array_push($affectedTradeIds, $trade->id);

            $trade->delete();
        }

        $affectedItemIds            = array();
        $affectedFormulatedColumnId = array();

        if ( count($affectedTradeIds) > 0 )
        {
            // get item associated with current deleting trade ID
            $items = Doctrine_Query::create()
            ->select('sori.id, fc.id')
            ->from('ScheduleOfRateItem sori')
            ->leftJoin('sori.FormulatedColumns fc')
            ->whereIn('sori.trade_id', $affectedTradeIds)
            ->execute();

            foreach($items as $item)
            {
                foreach ( $item['FormulatedColumns'] as $formulatedColumn )
                {
                    array_push($affectedFormulatedColumnId, $formulatedColumn['id']);
                }

                array_push($affectedItemIds, $item->id);
            }
        }

        // unlink bill item that is linked to SoR, if available
        if ( count($affectedFormulatedColumnId) > 0 )
        {
            BillItemFormulatedColumnTable::unlinkFormulatedColumnFromSor($affectedFormulatedColumnId);
        }

        if ( count($affectedItemIds) > 0 )
        {
            ScheduleOfRateItemFormulatedColumnTable::deleteRecordRelatedToItems($affectedItemIds);
        }

        parent::delete($conn);
    }
}