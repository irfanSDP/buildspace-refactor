<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ScheduleCalendarEventWorkingDay', 'main_conn');

/**
 * BaseScheduleCalendarEventWorkingDay
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $event_date
 * @property integer $project_schedule_id
 * @property ProjectSchedule $ProjectSchedule
 * 
 * @method integer                         getId()                  Returns the current record's "id" value
 * @method date                            getEventDate()           Returns the current record's "event_date" value
 * @method integer                         getProjectScheduleId()   Returns the current record's "project_schedule_id" value
 * @method ProjectSchedule                 getProjectSchedule()     Returns the current record's "ProjectSchedule" value
 * @method ScheduleCalendarEventWorkingDay setId()                  Sets the current record's "id" value
 * @method ScheduleCalendarEventWorkingDay setEventDate()           Sets the current record's "event_date" value
 * @method ScheduleCalendarEventWorkingDay setProjectScheduleId()   Sets the current record's "project_schedule_id" value
 * @method ScheduleCalendarEventWorkingDay setProjectSchedule()     Sets the current record's "ProjectSchedule" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScheduleCalendarEventWorkingDay extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_schedule_calendar_event_working_days');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('event_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('project_schedule_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('pscewd_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_schedule_id',
             ),
             ));
        $this->index('pscewd_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_schedule_id',
             ),
             ));
        $this->index('pscewd_unique_idx', array(
             'fields' => 
             array(
              0 => 'project_schedule_id',
              1 => 'event_date',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectSchedule', array(
             'local' => 'project_schedule_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}