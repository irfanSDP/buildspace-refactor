<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectUserPermission', 'main_conn');

/**
 * BaseProjectUserPermission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $project_structure_id
 * @property integer $user_id
 * @property integer $project_status
 * @property boolean $is_admin
 * @property sfGuardUser $sfGuardUser
 * @property ProjectStructure $ProjectStructure
 * 
 * @method integer               getId()                   Returns the current record's "id" value
 * @method integer               getProjectStructureId()   Returns the current record's "project_structure_id" value
 * @method integer               getUserId()               Returns the current record's "user_id" value
 * @method integer               getProjectStatus()        Returns the current record's "project_status" value
 * @method boolean               getIsAdmin()              Returns the current record's "is_admin" value
 * @method sfGuardUser           getSfGuardUser()          Returns the current record's "sfGuardUser" value
 * @method ProjectStructure      getProjectStructure()     Returns the current record's "ProjectStructure" value
 * @method ProjectUserPermission setId()                   Sets the current record's "id" value
 * @method ProjectUserPermission setProjectStructureId()   Sets the current record's "project_structure_id" value
 * @method ProjectUserPermission setUserId()               Sets the current record's "user_id" value
 * @method ProjectUserPermission setProjectStatus()        Sets the current record's "project_status" value
 * @method ProjectUserPermission setIsAdmin()              Sets the current record's "is_admin" value
 * @method ProjectUserPermission setSfGuardUser()          Sets the current record's "sfGuardUser" value
 * @method ProjectUserPermission setProjectStructure()     Sets the current record's "ProjectStructure" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectUserPermission extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_user_permissions');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('project_status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_admin', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));


        $this->index('project_user_perm_unique_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'user_id',
              2 => 'project_status',
             ),
             'type' => 'unique',
             ));
        $this->index('project_user_perm_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'user_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}