<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Company', 'main_conn');

/**
 * BaseCompany
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $reference_id
 * @property varchar $registration_no
 * @property varchar $name
 * @property varchar $shortname
 * @property varchar $contact_person_name
 * @property varchar $contact_person_email
 * @property varchar $contact_person_direct_line
 * @property varchar $contact_person_mobile
 * @property text $address
 * @property text $about
 * @property integer $region_id
 * @property integer $sub_region_id
 * @property varchar $phone_number
 * @property varchar $fax_number
 * @property string $website
 * @property Regions $Region
 * @property Subregions $SubRegion
 * @property Doctrine_Collection $CompanyOtherInformations
 * @property Doctrine_Collection $CompanyBranches
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $EditorBillItemInfo
 * @property Doctrine_Collection $EditorBillItemNotListed
 * @property Doctrine_Collection $EditorProjectInfo
 * @property Doctrine_Collection $PurchaseOrders
 * @property Doctrine_Collection $RequestForQuotations
 * @property Doctrine_Collection $SubPackages
 * @property Doctrine_Collection $AwardedSubPackages
 * @property Doctrine_Collection $SubPackageCompany
 * @property Doctrine_Collection $AwardedTenders
 * @property Doctrine_Collection $TenderCompany
 * @property Doctrine_Collection $TenderCompanyAttachments
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method varchar             getReferenceId()                Returns the current record's "reference_id" value
 * @method varchar             getRegistrationNo()             Returns the current record's "registration_no" value
 * @method varchar             getName()                       Returns the current record's "name" value
 * @method varchar             getShortname()                  Returns the current record's "shortname" value
 * @method varchar             getContactPersonName()          Returns the current record's "contact_person_name" value
 * @method varchar             getContactPersonEmail()         Returns the current record's "contact_person_email" value
 * @method varchar             getContactPersonDirectLine()    Returns the current record's "contact_person_direct_line" value
 * @method varchar             getContactPersonMobile()        Returns the current record's "contact_person_mobile" value
 * @method text                getAddress()                    Returns the current record's "address" value
 * @method text                getAbout()                      Returns the current record's "about" value
 * @method integer             getRegionId()                   Returns the current record's "region_id" value
 * @method integer             getSubRegionId()                Returns the current record's "sub_region_id" value
 * @method varchar             getPhoneNumber()                Returns the current record's "phone_number" value
 * @method varchar             getFaxNumber()                  Returns the current record's "fax_number" value
 * @method string              getWebsite()                    Returns the current record's "website" value
 * @method Regions             getRegion()                     Returns the current record's "Region" value
 * @method Subregions          getSubRegion()                  Returns the current record's "SubRegion" value
 * @method Doctrine_Collection getCompanyOtherInformations()   Returns the current record's "CompanyOtherInformations" collection
 * @method Doctrine_Collection getCompanyBranches()            Returns the current record's "CompanyBranches" collection
 * @method Doctrine_Collection getGroups()                     Returns the current record's "Groups" collection
 * @method Doctrine_Collection getEditorBillItemInfo()         Returns the current record's "EditorBillItemInfo" collection
 * @method Doctrine_Collection getEditorBillItemNotListed()    Returns the current record's "EditorBillItemNotListed" collection
 * @method Doctrine_Collection getEditorProjectInfo()          Returns the current record's "EditorProjectInfo" collection
 * @method Doctrine_Collection getPurchaseOrders()             Returns the current record's "PurchaseOrders" collection
 * @method Doctrine_Collection getRequestForQuotations()       Returns the current record's "RequestForQuotations" collection
 * @method Doctrine_Collection getSubPackages()                Returns the current record's "SubPackages" collection
 * @method Doctrine_Collection getAwardedSubPackages()         Returns the current record's "AwardedSubPackages" collection
 * @method Doctrine_Collection getSubPackageCompany()          Returns the current record's "SubPackageCompany" collection
 * @method Doctrine_Collection getAwardedTenders()             Returns the current record's "AwardedTenders" collection
 * @method Doctrine_Collection getTenderCompany()              Returns the current record's "TenderCompany" collection
 * @method Doctrine_Collection getTenderCompanyAttachments()   Returns the current record's "TenderCompanyAttachments" collection
 * @method Company             setId()                         Sets the current record's "id" value
 * @method Company             setReferenceId()                Sets the current record's "reference_id" value
 * @method Company             setRegistrationNo()             Sets the current record's "registration_no" value
 * @method Company             setName()                       Sets the current record's "name" value
 * @method Company             setShortname()                  Sets the current record's "shortname" value
 * @method Company             setContactPersonName()          Sets the current record's "contact_person_name" value
 * @method Company             setContactPersonEmail()         Sets the current record's "contact_person_email" value
 * @method Company             setContactPersonDirectLine()    Sets the current record's "contact_person_direct_line" value
 * @method Company             setContactPersonMobile()        Sets the current record's "contact_person_mobile" value
 * @method Company             setAddress()                    Sets the current record's "address" value
 * @method Company             setAbout()                      Sets the current record's "about" value
 * @method Company             setRegionId()                   Sets the current record's "region_id" value
 * @method Company             setSubRegionId()                Sets the current record's "sub_region_id" value
 * @method Company             setPhoneNumber()                Sets the current record's "phone_number" value
 * @method Company             setFaxNumber()                  Sets the current record's "fax_number" value
 * @method Company             setWebsite()                    Sets the current record's "website" value
 * @method Company             setRegion()                     Sets the current record's "Region" value
 * @method Company             setSubRegion()                  Sets the current record's "SubRegion" value
 * @method Company             setCompanyOtherInformations()   Sets the current record's "CompanyOtherInformations" collection
 * @method Company             setCompanyBranches()            Sets the current record's "CompanyBranches" collection
 * @method Company             setGroups()                     Sets the current record's "Groups" collection
 * @method Company             setEditorBillItemInfo()         Sets the current record's "EditorBillItemInfo" collection
 * @method Company             setEditorBillItemNotListed()    Sets the current record's "EditorBillItemNotListed" collection
 * @method Company             setEditorProjectInfo()          Sets the current record's "EditorProjectInfo" collection
 * @method Company             setPurchaseOrders()             Sets the current record's "PurchaseOrders" collection
 * @method Company             setRequestForQuotations()       Sets the current record's "RequestForQuotations" collection
 * @method Company             setSubPackages()                Sets the current record's "SubPackages" collection
 * @method Company             setAwardedSubPackages()         Sets the current record's "AwardedSubPackages" collection
 * @method Company             setSubPackageCompany()          Sets the current record's "SubPackageCompany" collection
 * @method Company             setAwardedTenders()             Sets the current record's "AwardedTenders" collection
 * @method Company             setTenderCompany()              Sets the current record's "TenderCompany" collection
 * @method Company             setTenderCompanyAttachments()   Sets the current record's "TenderCompanyAttachments" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompany extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('companies');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('reference_id', 'varchar', 16, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 16,
             ));
        $this->hasColumn('registration_no', 'varchar', 60, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 60,
             ));
        $this->hasColumn('name', 'varchar', 250, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('shortname', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('contact_person_name', 'varchar', 150, array(
             'type' => 'varchar',
             'length' => 150,
             ));
        $this->hasColumn('contact_person_email', 'varchar', 150, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 150,
             ));
        $this->hasColumn('contact_person_direct_line', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('contact_person_mobile', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('address', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('about', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sub_region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('phone_number', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('fax_number', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('website', 'string', null, array(
             'type' => 'string',
             ));


        $this->index('company_reference_id_unique_idx', array(
             'fields' => 
             array(
              0 => 'reference_id',
             ),
             'type' => 'unique',
             ));
        $this->index('company_registration_no_unique_idx', array(
             'fields' => 
             array(
              0 => 'registration_no',
             ),
             'type' => 'unique',
             ));
        $this->index('company_name_unique_idx', array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->index('company_fk_idx', array(
             'fields' => 
             array(
              0 => 'region_id',
              1 => 'sub_region_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Regions as Region', array(
             'local' => 'region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Subregions as SubRegion', array(
             'local' => 'sub_region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CompanyOtherInformation as CompanyOtherInformations', array(
             'local' => 'id',
             'foreign' => 'company_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CompanyBranch as CompanyBranches', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('CompanyGroup as Groups', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EditorBillItemInfo', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EditorBillItemNotListed', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EditorProjectInformation as EditorProjectInfo', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('PurchaseOrderSupplier as PurchaseOrders', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('RFQSupplier as RequestForQuotations', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('SubPackage as SubPackages', array(
             'refClass' => 'SubPackageCompany',
             'local' => 'company_id',
             'foreign' => 'sub_package_id'));

        $this->hasMany('SubPackage as AwardedSubPackages', array(
             'local' => 'id',
             'foreign' => 'selected_company_id'));

        $this->hasMany('SubPackageCompany', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('TenderSetting as AwardedTenders', array(
             'local' => 'id',
             'foreign' => 'awarded_company_id'));

        $this->hasMany('TenderCompany', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('TenderCompanyAttachments', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}