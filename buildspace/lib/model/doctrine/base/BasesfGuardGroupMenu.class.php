<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('sfGuardGroupMenu', 'main_conn');

/**
 * BasesfGuardGroupMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $group_id
 * @property integer $menu_id
 * @property sfGuardGroup $Group
 * @property Menu $Menu
 * 
 * @method integer          getGroupId()  Returns the current record's "group_id" value
 * @method integer          getMenuId()   Returns the current record's "menu_id" value
 * @method sfGuardGroup     getGroup()    Returns the current record's "Group" value
 * @method Menu             getMenu()     Returns the current record's "Menu" value
 * @method sfGuardGroupMenu setGroupId()  Sets the current record's "group_id" value
 * @method sfGuardGroupMenu setMenuId()   Sets the current record's "menu_id" value
 * @method sfGuardGroupMenu setGroup()    Sets the current record's "Group" value
 * @method sfGuardGroupMenu setMenu()     Sets the current record's "Menu" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardGroupMenu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_group_menu');
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('menu_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));


        $this->index('sf_guard_group_menu_fk_idx', array(
             'fields' => 
             array(
              0 => 'group_id',
              1 => 'menu_id',
             ),
             ));
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Menu', array(
             'local' => 'menu_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}