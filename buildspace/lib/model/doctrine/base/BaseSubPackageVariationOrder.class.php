<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SubPackageVariationOrder', 'main_conn');

/**
 * BaseSubPackageVariationOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property integer $sub_package_id
 * @property boolean $is_approved
 * @property integer $priority
 * @property SubPackage $SubPackage
 * @property Doctrine_Collection $Items
 * @property Doctrine_Collection $Claims
 * 
 * @method integer                  getId()             Returns the current record's "id" value
 * @method string                   getDescription()    Returns the current record's "description" value
 * @method integer                  getSubPackageId()   Returns the current record's "sub_package_id" value
 * @method boolean                  getIsApproved()     Returns the current record's "is_approved" value
 * @method integer                  getPriority()       Returns the current record's "priority" value
 * @method SubPackage               getSubPackage()     Returns the current record's "SubPackage" value
 * @method Doctrine_Collection      getItems()          Returns the current record's "Items" collection
 * @method Doctrine_Collection      getClaims()         Returns the current record's "Claims" collection
 * @method SubPackageVariationOrder setId()             Sets the current record's "id" value
 * @method SubPackageVariationOrder setDescription()    Sets the current record's "description" value
 * @method SubPackageVariationOrder setSubPackageId()   Sets the current record's "sub_package_id" value
 * @method SubPackageVariationOrder setIsApproved()     Sets the current record's "is_approved" value
 * @method SubPackageVariationOrder setPriority()       Sets the current record's "priority" value
 * @method SubPackageVariationOrder setSubPackage()     Sets the current record's "SubPackage" value
 * @method SubPackageVariationOrder setItems()          Sets the current record's "Items" collection
 * @method SubPackageVariationOrder setClaims()         Sets the current record's "Claims" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubPackageVariationOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sub_package_variation_orders');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('sub_package_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_approved', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('sp_variation_order_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'sub_package_id',
             ),
             ));
        $this->index('sp_variation_order_priority_unique_idx', array(
             'fields' => 
             array(
              0 => 'priority',
              1 => 'sub_package_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SubPackage', array(
             'local' => 'sub_package_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('SubPackageVariationOrderItem as Items', array(
             'local' => 'id',
             'foreign' => 'sub_package_variation_order_id'));

        $this->hasMany('SubPackageVariationOrderClaim as Claims', array(
             'local' => 'id',
             'foreign' => 'sub_package_variation_order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}