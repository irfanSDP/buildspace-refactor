<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MasterCostData', 'main_conn');

/**
 * BaseMasterCostData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $CostData
 * @property Doctrine_Collection $Items
 * @property Doctrine_Collection $Particulars
 * @property Doctrine_Collection $PrimeCostSumItems
 * @property Doctrine_Collection $PrimeCostRateItems
 * @property Doctrine_Collection $ProjectInformationItems
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method Doctrine_Collection getCostData()                Returns the current record's "CostData" collection
 * @method Doctrine_Collection getItems()                   Returns the current record's "Items" collection
 * @method Doctrine_Collection getParticulars()             Returns the current record's "Particulars" collection
 * @method Doctrine_Collection getPrimeCostSumItems()       Returns the current record's "PrimeCostSumItems" collection
 * @method Doctrine_Collection getPrimeCostRateItems()      Returns the current record's "PrimeCostRateItems" collection
 * @method Doctrine_Collection getProjectInformationItems() Returns the current record's "ProjectInformationItems" collection
 * @method MasterCostData      setId()                      Sets the current record's "id" value
 * @method MasterCostData      setName()                    Sets the current record's "name" value
 * @method MasterCostData      setCostData()                Sets the current record's "CostData" collection
 * @method MasterCostData      setItems()                   Sets the current record's "Items" collection
 * @method MasterCostData      setParticulars()             Sets the current record's "Particulars" collection
 * @method MasterCostData      setPrimeCostSumItems()       Sets the current record's "PrimeCostSumItems" collection
 * @method MasterCostData      setPrimeCostRateItems()      Sets the current record's "PrimeCostRateItems" collection
 * @method MasterCostData      setProjectInformationItems() Sets the current record's "ProjectInformationItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMasterCostData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('master_cost_data');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));


        $this->index('master_cost_data_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CostData', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_id'));

        $this->hasMany('MasterCostDataItem as Items', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_id'));

        $this->hasMany('MasterCostDataParticular as Particulars', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_id'));

        $this->hasMany('MasterCostDataPrimeCostSumItem as PrimeCostSumItems', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_id'));

        $this->hasMany('MasterCostDataPrimeCostRate as PrimeCostRateItems', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_id'));

        $this->hasMany('MasterCostDataProjectInformation as ProjectInformationItems', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}