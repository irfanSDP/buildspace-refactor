<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContractClaimItem', 'main_conn');

/**
 * BasePostContractClaimItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_contract_claim_id
 * @property string $description
 * @property integer $type
 * @property decimal $quantity
 * @property integer $uom_id
 * @property decimal $rate
 * @property integer $sequence
 * @property PostContractClaim $PostContractClaim
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property PostContractClaimMaterialOnSite $PostContractClaimMaterialOnSite
 * @property PurchaseOnBehalf $PurchaseOnBehalf
 * @property OutOfContractItem $OutOfContractItem
 * @property Doctrine_Collection $ClaimItems
 * 
 * @method integer                         getId()                              Returns the current record's "id" value
 * @method integer                         getPostContractClaimId()             Returns the current record's "post_contract_claim_id" value
 * @method string                          getDescription()                     Returns the current record's "description" value
 * @method integer                         getType()                            Returns the current record's "type" value
 * @method decimal                         getQuantity()                        Returns the current record's "quantity" value
 * @method integer                         getUomId()                           Returns the current record's "uom_id" value
 * @method decimal                         getRate()                            Returns the current record's "rate" value
 * @method integer                         getSequence()                        Returns the current record's "sequence" value
 * @method PostContractClaim               getPostContractClaim()               Returns the current record's "PostContractClaim" value
 * @method UnitOfMeasurement               getUnitOfMeasurement()               Returns the current record's "UnitOfMeasurement" value
 * @method PostContractClaimMaterialOnSite getPostContractClaimMaterialOnSite() Returns the current record's "PostContractClaimMaterialOnSite" value
 * @method PurchaseOnBehalf                getPurchaseOnBehalf()                Returns the current record's "PurchaseOnBehalf" value
 * @method OutOfContractItem               getOutOfContractItem()               Returns the current record's "OutOfContractItem" value
 * @method Doctrine_Collection             getClaimItems()                      Returns the current record's "ClaimItems" collection
 * @method PostContractClaimItem           setId()                              Sets the current record's "id" value
 * @method PostContractClaimItem           setPostContractClaimId()             Sets the current record's "post_contract_claim_id" value
 * @method PostContractClaimItem           setDescription()                     Sets the current record's "description" value
 * @method PostContractClaimItem           setType()                            Sets the current record's "type" value
 * @method PostContractClaimItem           setQuantity()                        Sets the current record's "quantity" value
 * @method PostContractClaimItem           setUomId()                           Sets the current record's "uom_id" value
 * @method PostContractClaimItem           setRate()                            Sets the current record's "rate" value
 * @method PostContractClaimItem           setSequence()                        Sets the current record's "sequence" value
 * @method PostContractClaimItem           setPostContractClaim()               Sets the current record's "PostContractClaim" value
 * @method PostContractClaimItem           setUnitOfMeasurement()               Sets the current record's "UnitOfMeasurement" value
 * @method PostContractClaimItem           setPostContractClaimMaterialOnSite() Sets the current record's "PostContractClaimMaterialOnSite" value
 * @method PostContractClaimItem           setPurchaseOnBehalf()                Sets the current record's "PurchaseOnBehalf" value
 * @method PostContractClaimItem           setOutOfContractItem()               Sets the current record's "OutOfContractItem" value
 * @method PostContractClaimItem           setClaimItems()                      Sets the current record's "ClaimItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContractClaimItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contract_claim_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_contract_claim_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('sequence', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('post_contract_claim_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'root_id',
              2 => 'lft',
              3 => 'rgt',
             ),
             ));
        $this->index('post_contract_claim_items_type_idx', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('post_contract_claim_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_claim_id',
              1 => 'root_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractClaim', array(
             'local' => 'post_contract_claim_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PostContractClaimMaterialOnSite', array(
             'local' => 'id',
             'foreign' => 'post_contract_claim_item_id'));

        $this->hasOne('PurchaseOnBehalf', array(
             'local' => 'id',
             'foreign' => 'post_contract_claim_item_id'));

        $this->hasOne('OutOfContractItem', array(
             'local' => 'id',
             'foreign' => 'post_contract_claim_item_id'));

        $this->hasMany('PostContractClaimClaimItem as ClaimItems', array(
             'local' => 'id',
             'foreign' => 'post_contract_claim_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'levelColumnName' => 'level',
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}