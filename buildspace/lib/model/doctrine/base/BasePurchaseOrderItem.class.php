<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PurchaseOrderItem', 'main_conn');

/**
 * BasePurchaseOrderItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $purchase_order_id
 * @property integer $resource_item_id
 * @property decimal $quantity
 * @property decimal $rates
 * @property integer $remark_id
 * @property PurchaseOrder $PurchaseOrder
 * @property ResourceItem $ResourceItem
 * @property RFQItemRemark $Remark
 * 
 * @method integer           getPurchaseOrderId()   Returns the current record's "purchase_order_id" value
 * @method integer           getResourceItemId()    Returns the current record's "resource_item_id" value
 * @method decimal           getQuantity()          Returns the current record's "quantity" value
 * @method decimal           getRates()             Returns the current record's "rates" value
 * @method integer           getRemarkId()          Returns the current record's "remark_id" value
 * @method PurchaseOrder     getPurchaseOrder()     Returns the current record's "PurchaseOrder" value
 * @method ResourceItem      getResourceItem()      Returns the current record's "ResourceItem" value
 * @method RFQItemRemark     getRemark()            Returns the current record's "Remark" value
 * @method PurchaseOrderItem setPurchaseOrderId()   Sets the current record's "purchase_order_id" value
 * @method PurchaseOrderItem setResourceItemId()    Sets the current record's "resource_item_id" value
 * @method PurchaseOrderItem setQuantity()          Sets the current record's "quantity" value
 * @method PurchaseOrderItem setRates()             Sets the current record's "rates" value
 * @method PurchaseOrderItem setRemarkId()          Sets the current record's "remark_id" value
 * @method PurchaseOrderItem setPurchaseOrder()     Sets the current record's "PurchaseOrder" value
 * @method PurchaseOrderItem setResourceItem()      Sets the current record's "ResourceItem" value
 * @method PurchaseOrderItem setRemark()            Sets the current record's "Remark" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePurchaseOrderItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_order_items');
        $this->hasColumn('purchase_order_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('resource_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('quantity', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('rates', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('remark_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('po_item_idx', array(
             'fields' => 
             array(
              0 => 'purchase_order_id',
              1 => 'resource_item_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PurchaseOrder', array(
             'local' => 'purchase_order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ResourceItem', array(
             'local' => 'resource_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('RFQItemRemark as Remark', array(
             'local' => 'remark_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}