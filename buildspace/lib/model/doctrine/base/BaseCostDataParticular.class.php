<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CostDataParticular', 'main_conn');

/**
 * BaseCostDataParticular
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cost_data_id
 * @property integer $master_cost_data_particular_id
 * @property decimal $value
 * @property CostData $CostData
 * @property MasterCostDataParticular $MasterCostDataParticular
 * 
 * @method integer                  getId()                             Returns the current record's "id" value
 * @method integer                  getCostDataId()                     Returns the current record's "cost_data_id" value
 * @method integer                  getMasterCostDataParticularId()     Returns the current record's "master_cost_data_particular_id" value
 * @method decimal                  getValue()                          Returns the current record's "value" value
 * @method CostData                 getCostData()                       Returns the current record's "CostData" value
 * @method MasterCostDataParticular getMasterCostDataParticular()       Returns the current record's "MasterCostDataParticular" value
 * @method CostDataParticular       setId()                             Sets the current record's "id" value
 * @method CostDataParticular       setCostDataId()                     Sets the current record's "cost_data_id" value
 * @method CostDataParticular       setMasterCostDataParticularId()     Sets the current record's "master_cost_data_particular_id" value
 * @method CostDataParticular       setValue()                          Sets the current record's "value" value
 * @method CostDataParticular       setCostData()                       Sets the current record's "CostData" value
 * @method CostDataParticular       setMasterCostDataParticular()       Sets the current record's "MasterCostDataParticular" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostDataParticular extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_data_particulars');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('cost_data_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('master_cost_data_particular_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('value', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));


        $this->index('cost_data_particular_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('cost_data_particular_fk_idx', array(
             'fields' => 
             array(
              0 => 'cost_data_id',
              1 => 'master_cost_data_particular_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CostData', array(
             'local' => 'cost_data_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MasterCostDataParticular', array(
             'local' => 'master_cost_data_particular_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}