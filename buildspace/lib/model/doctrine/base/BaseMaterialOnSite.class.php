<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MaterialOnSite', 'main_conn');

/**
 * BaseMaterialOnSite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_structure_id
 * @property string $description
 * @property integer $status
 * @property decimal $reduction_percentage
 * @property decimal $total
 * @property decimal $total_after_reduction
 * @property integer $priority
 * @property ProjectStructure $Project
 * @property Doctrine_Collection $Items
 * 
 * @method integer             getProjectStructureId()    Returns the current record's "project_structure_id" value
 * @method string              getDescription()           Returns the current record's "description" value
 * @method integer             getStatus()                Returns the current record's "status" value
 * @method decimal             getReductionPercentage()   Returns the current record's "reduction_percentage" value
 * @method decimal             getTotal()                 Returns the current record's "total" value
 * @method decimal             getTotalAfterReduction()   Returns the current record's "total_after_reduction" value
 * @method integer             getPriority()              Returns the current record's "priority" value
 * @method ProjectStructure    getProject()               Returns the current record's "Project" value
 * @method Doctrine_Collection getItems()                 Returns the current record's "Items" collection
 * @method MaterialOnSite      setProjectStructureId()    Sets the current record's "project_structure_id" value
 * @method MaterialOnSite      setDescription()           Sets the current record's "description" value
 * @method MaterialOnSite      setStatus()                Sets the current record's "status" value
 * @method MaterialOnSite      setReductionPercentage()   Sets the current record's "reduction_percentage" value
 * @method MaterialOnSite      setTotal()                 Sets the current record's "total" value
 * @method MaterialOnSite      setTotalAfterReduction()   Sets the current record's "total_after_reduction" value
 * @method MaterialOnSite      setPriority()              Sets the current record's "priority" value
 * @method MaterialOnSite      setProject()               Sets the current record's "Project" value
 * @method MaterialOnSite      setItems()                 Sets the current record's "Items" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMaterialOnSite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('material_on_sites');
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('reduction_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total_after_reduction', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('material_on_site_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'deleted_at',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure as Project', array(
             'local' => 'project_structure_id',
             'foreign' => 'id'));

        $this->hasMany('MaterialOnSiteItem as Items', array(
             'local' => 'id',
             'foreign' => 'material_on_site_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}