<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SupplyOfMaterialItem', 'main_conn');

/**
 * BaseSupplyOfMaterialItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property string $note
 * @property integer $type
 * @property integer $element_id
 * @property integer $uom_id
 * @property decimal $supply_rate
 * @property decimal $contractor_supply_rate
 * @property decimal $estimated_qty
 * @property decimal $percentage_of_wastage
 * @property decimal $difference
 * @property decimal $amount
 * @property integer $bill_import_item_id
 * @property string $tender_origin_id
 * @property integer $priority
 * @property SupplyOfMaterialElement $Element
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property Doctrine_Collection $TenderCompanyRates
 * @property Doctrine_Collection $TenderCompanyRateLogs
 * 
 * @method integer                 getId()                     Returns the current record's "id" value
 * @method string                  getDescription()            Returns the current record's "description" value
 * @method string                  getNote()                   Returns the current record's "note" value
 * @method integer                 getType()                   Returns the current record's "type" value
 * @method integer                 getElementId()              Returns the current record's "element_id" value
 * @method integer                 getUomId()                  Returns the current record's "uom_id" value
 * @method decimal                 getSupplyRate()             Returns the current record's "supply_rate" value
 * @method decimal                 getContractorSupplyRate()   Returns the current record's "contractor_supply_rate" value
 * @method decimal                 getEstimatedQty()           Returns the current record's "estimated_qty" value
 * @method decimal                 getPercentageOfWastage()    Returns the current record's "percentage_of_wastage" value
 * @method decimal                 getDifference()             Returns the current record's "difference" value
 * @method decimal                 getAmount()                 Returns the current record's "amount" value
 * @method integer                 getBillImportItemId()       Returns the current record's "bill_import_item_id" value
 * @method string                  getTenderOriginId()         Returns the current record's "tender_origin_id" value
 * @method integer                 getPriority()               Returns the current record's "priority" value
 * @method SupplyOfMaterialElement getElement()                Returns the current record's "Element" value
 * @method UnitOfMeasurement       getUnitOfMeasurement()      Returns the current record's "UnitOfMeasurement" value
 * @method Doctrine_Collection     getTenderCompanyRates()     Returns the current record's "TenderCompanyRates" collection
 * @method Doctrine_Collection     getTenderCompanyRateLogs()  Returns the current record's "TenderCompanyRateLogs" collection
 * @method SupplyOfMaterialItem    setId()                     Sets the current record's "id" value
 * @method SupplyOfMaterialItem    setDescription()            Sets the current record's "description" value
 * @method SupplyOfMaterialItem    setNote()                   Sets the current record's "note" value
 * @method SupplyOfMaterialItem    setType()                   Sets the current record's "type" value
 * @method SupplyOfMaterialItem    setElementId()              Sets the current record's "element_id" value
 * @method SupplyOfMaterialItem    setUomId()                  Sets the current record's "uom_id" value
 * @method SupplyOfMaterialItem    setSupplyRate()             Sets the current record's "supply_rate" value
 * @method SupplyOfMaterialItem    setContractorSupplyRate()   Sets the current record's "contractor_supply_rate" value
 * @method SupplyOfMaterialItem    setEstimatedQty()           Sets the current record's "estimated_qty" value
 * @method SupplyOfMaterialItem    setPercentageOfWastage()    Sets the current record's "percentage_of_wastage" value
 * @method SupplyOfMaterialItem    setDifference()             Sets the current record's "difference" value
 * @method SupplyOfMaterialItem    setAmount()                 Sets the current record's "amount" value
 * @method SupplyOfMaterialItem    setBillImportItemId()       Sets the current record's "bill_import_item_id" value
 * @method SupplyOfMaterialItem    setTenderOriginId()         Sets the current record's "tender_origin_id" value
 * @method SupplyOfMaterialItem    setPriority()               Sets the current record's "priority" value
 * @method SupplyOfMaterialItem    setElement()                Sets the current record's "Element" value
 * @method SupplyOfMaterialItem    setUnitOfMeasurement()      Sets the current record's "UnitOfMeasurement" value
 * @method SupplyOfMaterialItem    setTenderCompanyRates()     Sets the current record's "TenderCompanyRates" collection
 * @method SupplyOfMaterialItem    setTenderCompanyRateLogs()  Sets the current record's "TenderCompanyRateLogs" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSupplyOfMaterialItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('supply_of_material_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('note', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('element_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('supply_rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('contractor_supply_rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('estimated_qty', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('percentage_of_wastage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('difference', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('bill_import_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('tender_origin_id', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('supply_of_material_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'root_id',
              2 => 'lft',
              3 => 'rgt',
             ),
             ));
        $this->index('supply_of_material_items_type_idx', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('supply_of_material_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'element_id',
              1 => 'root_id',
              2 => 'uom_id',
              3 => 'bill_import_item_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SupplyOfMaterialElement as Element', array(
             'local' => 'element_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('TenderSupplyOfMaterialRate as TenderCompanyRates', array(
             'local' => 'id',
             'foreign' => 'supply_of_material_item_id'));

        $this->hasMany('TenderSupplyOfMaterialItemRateLog as TenderCompanyRateLogs', array(
             'local' => 'id',
             'foreign' => 'supply_of_material_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'levelColumnName' => 'level',
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}