<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SubPackagePreliminariesFinalClaim', 'main_conn');

/**
 * BaseSubPackagePreliminariesFinalClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $sub_package_post_contract_bill_item_rate_id
 * @property decimal $percentage
 * @property decimal $amount
 * @property integer $revision_id
 * @property SubPackagePostContractBillItemRate $ItemRate
 * @property SubPackagePostContractClaimRevision $Revision
 * 
 * @method integer                             getSubPackagePostContractBillItemRateId()        Returns the current record's "sub_package_post_contract_bill_item_rate_id" value
 * @method decimal                             getPercentage()                                  Returns the current record's "percentage" value
 * @method decimal                             getAmount()                                      Returns the current record's "amount" value
 * @method integer                             getRevisionId()                                  Returns the current record's "revision_id" value
 * @method SubPackagePostContractBillItemRate  getItemRate()                                    Returns the current record's "ItemRate" value
 * @method SubPackagePostContractClaimRevision getRevision()                                    Returns the current record's "Revision" value
 * @method SubPackagePreliminariesFinalClaim   setSubPackagePostContractBillItemRateId()        Sets the current record's "sub_package_post_contract_bill_item_rate_id" value
 * @method SubPackagePreliminariesFinalClaim   setPercentage()                                  Sets the current record's "percentage" value
 * @method SubPackagePreliminariesFinalClaim   setAmount()                                      Sets the current record's "amount" value
 * @method SubPackagePreliminariesFinalClaim   setRevisionId()                                  Sets the current record's "revision_id" value
 * @method SubPackagePreliminariesFinalClaim   setItemRate()                                    Sets the current record's "ItemRate" value
 * @method SubPackagePreliminariesFinalClaim   setRevision()                                    Sets the current record's "Revision" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubPackagePreliminariesFinalClaim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sub_package_prelim_final_claims');
        $this->hasColumn('sub_package_post_contract_bill_item_rate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('revision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('sub_package_prelim_final_claim_uniq_idx', array(
             'fields' => 
             array(
              0 => 'sub_package_post_contract_bill_item_rate_id',
              1 => 'revision_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SubPackagePostContractBillItemRate as ItemRate', array(
             'local' => 'sub_package_post_contract_bill_item_rate_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('SubPackagePostContractClaimRevision as Revision', array(
             'local' => 'revision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}