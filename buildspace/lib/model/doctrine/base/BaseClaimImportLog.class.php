<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClaimImportLog', 'main_conn');

/**
 * BaseClaimImportLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $revision_id
 * @property PostContractClaimRevision $PostContractClaimRevision
 * 
 * @method integer                   getId()                        Returns the current record's "id" value
 * @method integer                   getRevisionId()                Returns the current record's "revision_id" value
 * @method PostContractClaimRevision getPostContractClaimRevision() Returns the current record's "PostContractClaimRevision" value
 * @method ClaimImportLog            setId()                        Sets the current record's "id" value
 * @method ClaimImportLog            setRevisionId()                Sets the current record's "revision_id" value
 * @method ClaimImportLog            setPostContractClaimRevision() Sets the current record's "PostContractClaimRevision" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimImportLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claim_import_logs');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('revision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('claim_import_logs_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('claim_import_logs_fk_idx', array(
             'fields' => 
             array(
              0 => 'revision_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractClaimRevision', array(
             'local' => 'revision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}