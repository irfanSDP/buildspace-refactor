<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectLevel', 'main_conn');

/**
 * BaseProjectLevel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property integer $project_structure_id
 * @property ProjectStructure $ProjectStructure
 * 
 * @method integer          getId()                   Returns the current record's "id" value
 * @method string           getTitle()                Returns the current record's "title" value
 * @method string           getDescription()          Returns the current record's "description" value
 * @method integer          getProjectStructureId()   Returns the current record's "project_structure_id" value
 * @method ProjectStructure getProjectStructure()     Returns the current record's "ProjectStructure" value
 * @method ProjectLevel     setId()                   Sets the current record's "id" value
 * @method ProjectLevel     setTitle()                Sets the current record's "title" value
 * @method ProjectLevel     setDescription()          Sets the current record's "description" value
 * @method ProjectLevel     setProjectStructureId()   Sets the current record's "project_structure_id" value
 * @method ProjectLevel     setProjectStructure()     Sets the current record's "ProjectStructure" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectLevel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_levels');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('project_lvl_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_structure_id',
              2 => 'deleted_at',
             ),
             ));
        $this->index('project_lvl_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}