<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Subregions', 'main_conn');

/**
 * BaseSubregions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $region_id
 * @property varchar $name
 * @property varchar $timezone
 * @property Regions $Regions
 * @property Doctrine_Collection $Companies
 * @property Doctrine_Collection $CompanyBranches
 * @property Doctrine_Collection $CostData
 * @property Doctrine_Collection $GlobalCalendarEvents
 * @property Doctrine_Collection $myCompanyProfile
 * @property Doctrine_Collection $ProjectsInformation
 * @property Doctrine_Collection $PurchaseOrderRequests
 * @property Doctrine_Collection $QuotationRequests
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method integer             getRegionId()              Returns the current record's "region_id" value
 * @method varchar             getName()                  Returns the current record's "name" value
 * @method varchar             getTimezone()              Returns the current record's "timezone" value
 * @method Regions             getRegions()               Returns the current record's "Regions" value
 * @method Doctrine_Collection getCompanies()             Returns the current record's "Companies" collection
 * @method Doctrine_Collection getCompanyBranches()       Returns the current record's "CompanyBranches" collection
 * @method Doctrine_Collection getCostData()              Returns the current record's "CostData" collection
 * @method Doctrine_Collection getGlobalCalendarEvents()  Returns the current record's "GlobalCalendarEvents" collection
 * @method Doctrine_Collection getMyCompanyProfile()      Returns the current record's "myCompanyProfile" collection
 * @method Doctrine_Collection getProjectsInformation()   Returns the current record's "ProjectsInformation" collection
 * @method Doctrine_Collection getPurchaseOrderRequests() Returns the current record's "PurchaseOrderRequests" collection
 * @method Doctrine_Collection getQuotationRequests()     Returns the current record's "QuotationRequests" collection
 * @method Subregions          setId()                    Sets the current record's "id" value
 * @method Subregions          setRegionId()              Sets the current record's "region_id" value
 * @method Subregions          setName()                  Sets the current record's "name" value
 * @method Subregions          setTimezone()              Sets the current record's "timezone" value
 * @method Subregions          setRegions()               Sets the current record's "Regions" value
 * @method Subregions          setCompanies()             Sets the current record's "Companies" collection
 * @method Subregions          setCompanyBranches()       Sets the current record's "CompanyBranches" collection
 * @method Subregions          setCostData()              Sets the current record's "CostData" collection
 * @method Subregions          setGlobalCalendarEvents()  Sets the current record's "GlobalCalendarEvents" collection
 * @method Subregions          setMyCompanyProfile()      Sets the current record's "myCompanyProfile" collection
 * @method Subregions          setProjectsInformation()   Sets the current record's "ProjectsInformation" collection
 * @method Subregions          setPurchaseOrderRequests() Sets the current record's "PurchaseOrderRequests" collection
 * @method Subregions          setQuotationRequests()     Sets the current record's "QuotationRequests" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubregions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('subregions');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('timezone', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 255,
             ));


        $this->index('subregion_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('subregion_region_id_idx', array(
             'fields' => 
             array(
              0 => 'region_id',
             ),
             ));
        $this->index('subregion_unique_idx', array(
             'fields' => 
             array(
              0 => 'region_id',
              1 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Regions', array(
             'local' => 'region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Company as Companies', array(
             'local' => 'id',
             'foreign' => 'sub_region_id'));

        $this->hasMany('CompanyBranch as CompanyBranches', array(
             'local' => 'id',
             'foreign' => 'sub_region_id'));

        $this->hasMany('CostData', array(
             'local' => 'id',
             'foreign' => 'sub_region_id'));

        $this->hasMany('GlobalCalendar as GlobalCalendarEvents', array(
             'local' => 'id',
             'foreign' => 'subregion_id'));

        $this->hasMany('myCompanyProfile', array(
             'local' => 'id',
             'foreign' => 'subregion_id'));

        $this->hasMany('ProjectMainInformation as ProjectsInformation', array(
             'local' => 'id',
             'foreign' => 'subregion_id'));

        $this->hasMany('PurchaseOrder as PurchaseOrderRequests', array(
             'local' => 'id',
             'foreign' => 'sub_region_id'));

        $this->hasMany('RFQ as QuotationRequests', array(
             'local' => 'id',
             'foreign' => 'sub_region_id'));
    }
}