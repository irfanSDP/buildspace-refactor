<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BillBuildUpQuantityItem', 'main_conn');

/**
 * BaseBillBuildUpQuantityItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bill_item_id
 * @property integer $bill_column_setting_id
 * @property string $description
 * @property decimal $total
 * @property integer $sign
 * @property integer $priority
 * @property integer $type
 * @property BillItem $BillItem
 * @property BillColumnSetting $BillColumnSetting
 * @property Doctrine_Collection $FormulatedColumns
 * 
 * @method integer                 getId()                     Returns the current record's "id" value
 * @method integer                 getBillItemId()             Returns the current record's "bill_item_id" value
 * @method integer                 getBillColumnSettingId()    Returns the current record's "bill_column_setting_id" value
 * @method string                  getDescription()            Returns the current record's "description" value
 * @method decimal                 getTotal()                  Returns the current record's "total" value
 * @method integer                 getSign()                   Returns the current record's "sign" value
 * @method integer                 getPriority()               Returns the current record's "priority" value
 * @method integer                 getType()                   Returns the current record's "type" value
 * @method BillItem                getBillItem()               Returns the current record's "BillItem" value
 * @method BillColumnSetting       getBillColumnSetting()      Returns the current record's "BillColumnSetting" value
 * @method Doctrine_Collection     getFormulatedColumns()      Returns the current record's "FormulatedColumns" collection
 * @method BillBuildUpQuantityItem setId()                     Sets the current record's "id" value
 * @method BillBuildUpQuantityItem setBillItemId()             Sets the current record's "bill_item_id" value
 * @method BillBuildUpQuantityItem setBillColumnSettingId()    Sets the current record's "bill_column_setting_id" value
 * @method BillBuildUpQuantityItem setDescription()            Sets the current record's "description" value
 * @method BillBuildUpQuantityItem setTotal()                  Sets the current record's "total" value
 * @method BillBuildUpQuantityItem setSign()                   Sets the current record's "sign" value
 * @method BillBuildUpQuantityItem setPriority()               Sets the current record's "priority" value
 * @method BillBuildUpQuantityItem setType()                   Sets the current record's "type" value
 * @method BillBuildUpQuantityItem setBillItem()               Sets the current record's "BillItem" value
 * @method BillBuildUpQuantityItem setBillColumnSetting()      Sets the current record's "BillColumnSetting" value
 * @method BillBuildUpQuantityItem setFormulatedColumns()      Sets the current record's "FormulatedColumns" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBillBuildUpQuantityItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bill_build_up_quantity_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('bill_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bill_column_setting_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('sign', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));


        $this->index('bill_buq_item_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'bill_item_id',
              2 => 'bill_column_setting_id',
              3 => 'type',
              4 => 'deleted_at',
             ),
             ));
        $this->index('bill_buq_item_fk_idx', array(
             'fields' => 
             array(
              0 => 'bill_item_id',
              1 => 'bill_column_setting_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BillItem', array(
             'local' => 'bill_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillColumnSetting', array(
             'local' => 'bill_column_setting_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillBuildUpQuantityFormulatedColumn as FormulatedColumns', array(
             'local' => 'id',
             'foreign' => 'relation_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}