<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectSchedule', 'main_conn');

/**
 * BaseProjectSchedule
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property integer $type
 * @property boolean $exclude_saturdays
 * @property boolean $exclude_sundays
 * @property date $start_date
 * @property string $timezone
 * @property integer $project_structure_id
 * @property integer $sub_package_id
 * @property varchar $zoom
 * @property ProjectStructure $ProjectStructure
 * @property SubPackage $SubPackage
 * @property Doctrine_Collection $CalendarEventWorkingDays
 * @property Doctrine_Collection $TaskItems
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method string              getTitle()                    Returns the current record's "title" value
 * @method string              getDescription()              Returns the current record's "description" value
 * @method integer             getType()                     Returns the current record's "type" value
 * @method boolean             getExcludeSaturdays()         Returns the current record's "exclude_saturdays" value
 * @method boolean             getExcludeSundays()           Returns the current record's "exclude_sundays" value
 * @method date                getStartDate()                Returns the current record's "start_date" value
 * @method string              getTimezone()                 Returns the current record's "timezone" value
 * @method integer             getProjectStructureId()       Returns the current record's "project_structure_id" value
 * @method integer             getSubPackageId()             Returns the current record's "sub_package_id" value
 * @method varchar             getZoom()                     Returns the current record's "zoom" value
 * @method ProjectStructure    getProjectStructure()         Returns the current record's "ProjectStructure" value
 * @method SubPackage          getSubPackage()               Returns the current record's "SubPackage" value
 * @method Doctrine_Collection getCalendarEventWorkingDays() Returns the current record's "CalendarEventWorkingDays" collection
 * @method Doctrine_Collection getTaskItems()                Returns the current record's "TaskItems" collection
 * @method ProjectSchedule     setId()                       Sets the current record's "id" value
 * @method ProjectSchedule     setTitle()                    Sets the current record's "title" value
 * @method ProjectSchedule     setDescription()              Sets the current record's "description" value
 * @method ProjectSchedule     setType()                     Sets the current record's "type" value
 * @method ProjectSchedule     setExcludeSaturdays()         Sets the current record's "exclude_saturdays" value
 * @method ProjectSchedule     setExcludeSundays()           Sets the current record's "exclude_sundays" value
 * @method ProjectSchedule     setStartDate()                Sets the current record's "start_date" value
 * @method ProjectSchedule     setTimezone()                 Sets the current record's "timezone" value
 * @method ProjectSchedule     setProjectStructureId()       Sets the current record's "project_structure_id" value
 * @method ProjectSchedule     setSubPackageId()             Sets the current record's "sub_package_id" value
 * @method ProjectSchedule     setZoom()                     Sets the current record's "zoom" value
 * @method ProjectSchedule     setProjectStructure()         Sets the current record's "ProjectStructure" value
 * @method ProjectSchedule     setSubPackage()               Sets the current record's "SubPackage" value
 * @method ProjectSchedule     setCalendarEventWorkingDays() Sets the current record's "CalendarEventWorkingDays" collection
 * @method ProjectSchedule     setTaskItems()                Sets the current record's "TaskItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectSchedule extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_schedules');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 180, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 180,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('exclude_saturdays', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('exclude_sundays', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('timezone', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sub_package_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('zoom', 'varchar', 1, array(
             'type' => 'varchar',
             'notnull' => true,
             'default' => 'm',
             'length' => 1,
             ));


        $this->index('project_schedules_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_structure_id',
              2 => 'type',
              3 => 'deleted_at',
             ),
             ));
        $this->index('project_schedules_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'sub_package_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('SubPackage', array(
             'local' => 'sub_package_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ScheduleCalendarEventWorkingDay as CalendarEventWorkingDays', array(
             'local' => 'id',
             'foreign' => 'project_schedule_id'));

        $this->hasMany('ScheduleTaskItem as TaskItems', array(
             'local' => 'id',
             'foreign' => 'project_schedule_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}