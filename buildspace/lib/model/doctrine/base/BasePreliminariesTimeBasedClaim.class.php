<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PreliminariesTimeBasedClaim', 'main_conn');

/**
 * BasePreliminariesTimeBasedClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_contract_bill_item_rate_id
 * @property decimal $up_to_date_duration
 * @property decimal $total_project_duration
 * @property decimal $total
 * @property integer $revision_id
 * @property PostContractBillItemRate $ItemRate
 * @property PostContractClaimRevision $Revision
 * 
 * @method integer                     getPostContractBillItemRateId()      Returns the current record's "post_contract_bill_item_rate_id" value
 * @method decimal                     getUpToDateDuration()                Returns the current record's "up_to_date_duration" value
 * @method decimal                     getTotalProjectDuration()            Returns the current record's "total_project_duration" value
 * @method decimal                     getTotal()                           Returns the current record's "total" value
 * @method integer                     getRevisionId()                      Returns the current record's "revision_id" value
 * @method PostContractBillItemRate    getItemRate()                        Returns the current record's "ItemRate" value
 * @method PostContractClaimRevision   getRevision()                        Returns the current record's "Revision" value
 * @method PreliminariesTimeBasedClaim setPostContractBillItemRateId()      Sets the current record's "post_contract_bill_item_rate_id" value
 * @method PreliminariesTimeBasedClaim setUpToDateDuration()                Sets the current record's "up_to_date_duration" value
 * @method PreliminariesTimeBasedClaim setTotalProjectDuration()            Sets the current record's "total_project_duration" value
 * @method PreliminariesTimeBasedClaim setTotal()                           Sets the current record's "total" value
 * @method PreliminariesTimeBasedClaim setRevisionId()                      Sets the current record's "revision_id" value
 * @method PreliminariesTimeBasedClaim setItemRate()                        Sets the current record's "ItemRate" value
 * @method PreliminariesTimeBasedClaim setRevision()                        Sets the current record's "Revision" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePreliminariesTimeBasedClaim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('prelim_time_based_claims');
        $this->hasColumn('post_contract_bill_item_rate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('up_to_date_duration', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total_project_duration', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('revision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('prelim_time_based_claim_uniq_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_bill_item_rate_id',
              1 => 'revision_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractBillItemRate as ItemRate', array(
             'local' => 'post_contract_bill_item_rate_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PostContractClaimRevision as Revision', array(
             'local' => 'revision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}