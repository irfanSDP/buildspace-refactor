<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LocationProgressClaim', 'main_conn');

/**
 * BaseLocationProgressClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_contract_claim_revision_id
 * @property integer $location_bill_item_quantity_prorates_id
 * @property decimal $current_quantity
 * @property decimal $current_percentage
 * @property decimal $up_to_date_quantity
 * @property decimal $up_to_date_percentage
 * @property text $remarks
 * @property LocationBillItemQuantityProrate $LocationBillItemQuantityProrate
 * @property PostContractClaimRevision $PostContractClaimRevision
 * 
 * @method integer                         getId()                                      Returns the current record's "id" value
 * @method integer                         getPostContractClaimRevisionId()             Returns the current record's "post_contract_claim_revision_id" value
 * @method integer                         getLocationBillItemQuantityProratesId()      Returns the current record's "location_bill_item_quantity_prorates_id" value
 * @method decimal                         getCurrentQuantity()                         Returns the current record's "current_quantity" value
 * @method decimal                         getCurrentPercentage()                       Returns the current record's "current_percentage" value
 * @method decimal                         getUpToDateQuantity()                        Returns the current record's "up_to_date_quantity" value
 * @method decimal                         getUpToDatePercentage()                      Returns the current record's "up_to_date_percentage" value
 * @method text                            getRemarks()                                 Returns the current record's "remarks" value
 * @method LocationBillItemQuantityProrate getLocationBillItemQuantityProrate()         Returns the current record's "LocationBillItemQuantityProrate" value
 * @method PostContractClaimRevision       getPostContractClaimRevision()               Returns the current record's "PostContractClaimRevision" value
 * @method LocationProgressClaim           setId()                                      Sets the current record's "id" value
 * @method LocationProgressClaim           setPostContractClaimRevisionId()             Sets the current record's "post_contract_claim_revision_id" value
 * @method LocationProgressClaim           setLocationBillItemQuantityProratesId()      Sets the current record's "location_bill_item_quantity_prorates_id" value
 * @method LocationProgressClaim           setCurrentQuantity()                         Sets the current record's "current_quantity" value
 * @method LocationProgressClaim           setCurrentPercentage()                       Sets the current record's "current_percentage" value
 * @method LocationProgressClaim           setUpToDateQuantity()                        Sets the current record's "up_to_date_quantity" value
 * @method LocationProgressClaim           setUpToDatePercentage()                      Sets the current record's "up_to_date_percentage" value
 * @method LocationProgressClaim           setRemarks()                                 Sets the current record's "remarks" value
 * @method LocationProgressClaim           setLocationBillItemQuantityProrate()         Sets the current record's "LocationBillItemQuantityProrate" value
 * @method LocationProgressClaim           setPostContractClaimRevision()               Sets the current record's "PostContractClaimRevision" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLocationProgressClaim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('location_progress_claims');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_contract_claim_revision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('location_bill_item_quantity_prorates_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('current_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('current_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('remarks', 'text', null, array(
             'type' => 'text',
             ));


        $this->index('location_progress_claims_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'post_contract_claim_revision_id',
              2 => 'location_bill_item_quantity_prorates_id',
             ),
             ));
        $this->index('location_progress_claims_unique_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_claim_revision_id',
              1 => 'location_bill_item_quantity_prorates_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LocationBillItemQuantityProrate', array(
             'local' => 'location_bill_item_quantity_prorates_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PostContractClaimRevision', array(
             'local' => 'post_contract_claim_revision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}