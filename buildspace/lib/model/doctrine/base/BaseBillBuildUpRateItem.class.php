<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BillBuildUpRateItem', 'main_conn');

/**
 * BaseBillBuildUpRateItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bill_item_id
 * @property integer $build_up_rate_resource_id
 * @property integer $build_up_rate_resource_trade_id
 * @property integer $resource_item_library_id
 * @property string $description
 * @property decimal $total
 * @property decimal $line_total
 * @property integer $uom_id
 * @property integer $priority
 * @property BillItem $BillItem
 * @property BillBuildUpRateResource $Resource
 * @property BillBuildUpRateResourceTrade $Trade
 * @property ResourceItem $ResourceItemLibrary
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property Doctrine_Collection $FormulatedColumns
 * 
 * @method integer                      getId()                              Returns the current record's "id" value
 * @method integer                      getBillItemId()                      Returns the current record's "bill_item_id" value
 * @method integer                      getBuildUpRateResourceId()           Returns the current record's "build_up_rate_resource_id" value
 * @method integer                      getBuildUpRateResourceTradeId()      Returns the current record's "build_up_rate_resource_trade_id" value
 * @method integer                      getResourceItemLibraryId()           Returns the current record's "resource_item_library_id" value
 * @method string                       getDescription()                     Returns the current record's "description" value
 * @method decimal                      getTotal()                           Returns the current record's "total" value
 * @method decimal                      getLineTotal()                       Returns the current record's "line_total" value
 * @method integer                      getUomId()                           Returns the current record's "uom_id" value
 * @method integer                      getPriority()                        Returns the current record's "priority" value
 * @method BillItem                     getBillItem()                        Returns the current record's "BillItem" value
 * @method BillBuildUpRateResource      getResource()                        Returns the current record's "Resource" value
 * @method BillBuildUpRateResourceTrade getTrade()                           Returns the current record's "Trade" value
 * @method ResourceItem                 getResourceItemLibrary()             Returns the current record's "ResourceItemLibrary" value
 * @method UnitOfMeasurement            getUnitOfMeasurement()               Returns the current record's "UnitOfMeasurement" value
 * @method Doctrine_Collection          getFormulatedColumns()               Returns the current record's "FormulatedColumns" collection
 * @method BillBuildUpRateItem          setId()                              Sets the current record's "id" value
 * @method BillBuildUpRateItem          setBillItemId()                      Sets the current record's "bill_item_id" value
 * @method BillBuildUpRateItem          setBuildUpRateResourceId()           Sets the current record's "build_up_rate_resource_id" value
 * @method BillBuildUpRateItem          setBuildUpRateResourceTradeId()      Sets the current record's "build_up_rate_resource_trade_id" value
 * @method BillBuildUpRateItem          setResourceItemLibraryId()           Sets the current record's "resource_item_library_id" value
 * @method BillBuildUpRateItem          setDescription()                     Sets the current record's "description" value
 * @method BillBuildUpRateItem          setTotal()                           Sets the current record's "total" value
 * @method BillBuildUpRateItem          setLineTotal()                       Sets the current record's "line_total" value
 * @method BillBuildUpRateItem          setUomId()                           Sets the current record's "uom_id" value
 * @method BillBuildUpRateItem          setPriority()                        Sets the current record's "priority" value
 * @method BillBuildUpRateItem          setBillItem()                        Sets the current record's "BillItem" value
 * @method BillBuildUpRateItem          setResource()                        Sets the current record's "Resource" value
 * @method BillBuildUpRateItem          setTrade()                           Sets the current record's "Trade" value
 * @method BillBuildUpRateItem          setResourceItemLibrary()             Sets the current record's "ResourceItemLibrary" value
 * @method BillBuildUpRateItem          setUnitOfMeasurement()               Sets the current record's "UnitOfMeasurement" value
 * @method BillBuildUpRateItem          setFormulatedColumns()               Sets the current record's "FormulatedColumns" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBillBuildUpRateItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bill_build_up_rate_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('bill_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('build_up_rate_resource_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('build_up_rate_resource_trade_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('resource_item_library_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('line_total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('bill_br_item_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'bill_item_id',
              2 => 'build_up_rate_resource_id',
              3 => 'priority',
             ),
             ));
        $this->index('bill_br_item_fk_idx', array(
             'fields' => 
             array(
              0 => 'bill_item_id',
              1 => 'build_up_rate_resource_id',
              2 => 'build_up_rate_resource_trade_id',
              3 => 'resource_item_library_id',
              4 => 'uom_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BillItem', array(
             'local' => 'bill_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillBuildUpRateResource as Resource', array(
             'local' => 'build_up_rate_resource_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillBuildUpRateResourceTrade as Trade', array(
             'local' => 'build_up_rate_resource_trade_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ResourceItem as ResourceItemLibrary', array(
             'local' => 'resource_item_library_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillBuildUpRateFormulatedColumn as FormulatedColumns', array(
             'local' => 'id',
             'foreign' => 'relation_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}