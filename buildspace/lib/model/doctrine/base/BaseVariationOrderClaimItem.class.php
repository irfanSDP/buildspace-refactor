<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VariationOrderClaimItem', 'main_conn');

/**
 * BaseVariationOrderClaimItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $variation_order_claim_id
 * @property integer $variation_order_item_id
 * @property decimal $current_quantity
 * @property decimal $current_amount
 * @property decimal $current_percentage
 * @property decimal $up_to_date_quantity
 * @property decimal $up_to_date_amount
 * @property decimal $up_to_date_percentage
 * @property text $remarks
 * @property VariationOrderClaim $VariationOrderClaim
 * @property VariationOrderItem $VariationOrderItem
 * 
 * @method integer                 getId()                       Returns the current record's "id" value
 * @method integer                 getVariationOrderClaimId()    Returns the current record's "variation_order_claim_id" value
 * @method integer                 getVariationOrderItemId()     Returns the current record's "variation_order_item_id" value
 * @method decimal                 getCurrentQuantity()          Returns the current record's "current_quantity" value
 * @method decimal                 getCurrentAmount()            Returns the current record's "current_amount" value
 * @method decimal                 getCurrentPercentage()        Returns the current record's "current_percentage" value
 * @method decimal                 getUpToDateQuantity()         Returns the current record's "up_to_date_quantity" value
 * @method decimal                 getUpToDateAmount()           Returns the current record's "up_to_date_amount" value
 * @method decimal                 getUpToDatePercentage()       Returns the current record's "up_to_date_percentage" value
 * @method text                    getRemarks()                  Returns the current record's "remarks" value
 * @method VariationOrderClaim     getVariationOrderClaim()      Returns the current record's "VariationOrderClaim" value
 * @method VariationOrderItem      getVariationOrderItem()       Returns the current record's "VariationOrderItem" value
 * @method VariationOrderClaimItem setId()                       Sets the current record's "id" value
 * @method VariationOrderClaimItem setVariationOrderClaimId()    Sets the current record's "variation_order_claim_id" value
 * @method VariationOrderClaimItem setVariationOrderItemId()     Sets the current record's "variation_order_item_id" value
 * @method VariationOrderClaimItem setCurrentQuantity()          Sets the current record's "current_quantity" value
 * @method VariationOrderClaimItem setCurrentAmount()            Sets the current record's "current_amount" value
 * @method VariationOrderClaimItem setCurrentPercentage()        Sets the current record's "current_percentage" value
 * @method VariationOrderClaimItem setUpToDateQuantity()         Sets the current record's "up_to_date_quantity" value
 * @method VariationOrderClaimItem setUpToDateAmount()           Sets the current record's "up_to_date_amount" value
 * @method VariationOrderClaimItem setUpToDatePercentage()       Sets the current record's "up_to_date_percentage" value
 * @method VariationOrderClaimItem setRemarks()                  Sets the current record's "remarks" value
 * @method VariationOrderClaimItem setVariationOrderClaim()      Sets the current record's "VariationOrderClaim" value
 * @method VariationOrderClaimItem setVariationOrderItem()       Sets the current record's "VariationOrderItem" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVariationOrderClaimItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('variation_order_claim_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('variation_order_claim_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('variation_order_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('current_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('current_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('current_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('remarks', 'text', null, array(
             'type' => 'text',
             ));


        $this->index('vo_claim_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'variation_order_claim_id',
             ),
             ));
        $this->index('vo_claim_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'variation_order_claim_id',
              1 => 'variation_order_item_id',
             ),
             ));
        $this->index('vo_claims_items_unique_idx', array(
             'fields' => 
             array(
              0 => 'variation_order_claim_id',
              1 => 'variation_order_item_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('VariationOrderClaim', array(
             'local' => 'variation_order_claim_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('VariationOrderItem', array(
             'local' => 'variation_order_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}