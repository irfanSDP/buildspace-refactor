<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EditorBillItemPrimeCostRate', 'main_conn');

/**
 * BaseEditorBillItemPrimeCostRate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bill_item_info_id
 * @property decimal $supply_rate
 * @property decimal $wastage_percentage
 * @property decimal $wastage_amount
 * @property decimal $labour_for_installation
 * @property decimal $other_cost
 * @property decimal $profit_percentage
 * @property decimal $profit_amount
 * @property decimal $total
 * @property EditorBillItemInfo $EditorBillItemInfo
 * 
 * @method integer                     getId()                      Returns the current record's "id" value
 * @method integer                     getBillItemInfoId()          Returns the current record's "bill_item_info_id" value
 * @method decimal                     getSupplyRate()              Returns the current record's "supply_rate" value
 * @method decimal                     getWastagePercentage()       Returns the current record's "wastage_percentage" value
 * @method decimal                     getWastageAmount()           Returns the current record's "wastage_amount" value
 * @method decimal                     getLabourForInstallation()   Returns the current record's "labour_for_installation" value
 * @method decimal                     getOtherCost()               Returns the current record's "other_cost" value
 * @method decimal                     getProfitPercentage()        Returns the current record's "profit_percentage" value
 * @method decimal                     getProfitAmount()            Returns the current record's "profit_amount" value
 * @method decimal                     getTotal()                   Returns the current record's "total" value
 * @method EditorBillItemInfo          getEditorBillItemInfo()      Returns the current record's "EditorBillItemInfo" value
 * @method EditorBillItemPrimeCostRate setId()                      Sets the current record's "id" value
 * @method EditorBillItemPrimeCostRate setBillItemInfoId()          Sets the current record's "bill_item_info_id" value
 * @method EditorBillItemPrimeCostRate setSupplyRate()              Sets the current record's "supply_rate" value
 * @method EditorBillItemPrimeCostRate setWastagePercentage()       Sets the current record's "wastage_percentage" value
 * @method EditorBillItemPrimeCostRate setWastageAmount()           Sets the current record's "wastage_amount" value
 * @method EditorBillItemPrimeCostRate setLabourForInstallation()   Sets the current record's "labour_for_installation" value
 * @method EditorBillItemPrimeCostRate setOtherCost()               Sets the current record's "other_cost" value
 * @method EditorBillItemPrimeCostRate setProfitPercentage()        Sets the current record's "profit_percentage" value
 * @method EditorBillItemPrimeCostRate setProfitAmount()            Sets the current record's "profit_amount" value
 * @method EditorBillItemPrimeCostRate setTotal()                   Sets the current record's "total" value
 * @method EditorBillItemPrimeCostRate setEditorBillItemInfo()      Sets the current record's "EditorBillItemInfo" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEditorBillItemPrimeCostRate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('editor_bill_item_prime_cost_rates');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('bill_item_info_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('supply_rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('wastage_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('wastage_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('labour_for_installation', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('other_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('profit_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('profit_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('editor_bill_ipcr_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'bill_item_info_id',
              2 => 'total',
             ),
             ));
        $this->index('editor_bill_ipcr_unique_idx', array(
             'fields' => 
             array(
              0 => 'bill_item_info_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EditorBillItemInfo', array(
             'local' => 'bill_item_info_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}