<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CompanyBranch', 'main_conn');

/**
 * BaseCompanyBranch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $company_id
 * @property varchar $name
 * @property varchar $contact_person_name
 * @property varchar $contact_person_email
 * @property varchar $contact_person_direct_line
 * @property varchar $contact_person_mobile
 * @property string $address
 * @property integer $region_id
 * @property integer $sub_region_id
 * @property varchar $postcode
 * @property varchar $phone_number
 * @property varchar $fax_number
 * @property Company $Company
 * @property Regions $Region
 * @property Subregions $SubRegion
 * 
 * @method integer       getId()                         Returns the current record's "id" value
 * @method integer       getCompanyId()                  Returns the current record's "company_id" value
 * @method varchar       getName()                       Returns the current record's "name" value
 * @method varchar       getContactPersonName()          Returns the current record's "contact_person_name" value
 * @method varchar       getContactPersonEmail()         Returns the current record's "contact_person_email" value
 * @method varchar       getContactPersonDirectLine()    Returns the current record's "contact_person_direct_line" value
 * @method varchar       getContactPersonMobile()        Returns the current record's "contact_person_mobile" value
 * @method string        getAddress()                    Returns the current record's "address" value
 * @method integer       getRegionId()                   Returns the current record's "region_id" value
 * @method integer       getSubRegionId()                Returns the current record's "sub_region_id" value
 * @method varchar       getPostcode()                   Returns the current record's "postcode" value
 * @method varchar       getPhoneNumber()                Returns the current record's "phone_number" value
 * @method varchar       getFaxNumber()                  Returns the current record's "fax_number" value
 * @method Company       getCompany()                    Returns the current record's "Company" value
 * @method Regions       getRegion()                     Returns the current record's "Region" value
 * @method Subregions    getSubRegion()                  Returns the current record's "SubRegion" value
 * @method CompanyBranch setId()                         Sets the current record's "id" value
 * @method CompanyBranch setCompanyId()                  Sets the current record's "company_id" value
 * @method CompanyBranch setName()                       Sets the current record's "name" value
 * @method CompanyBranch setContactPersonName()          Sets the current record's "contact_person_name" value
 * @method CompanyBranch setContactPersonEmail()         Sets the current record's "contact_person_email" value
 * @method CompanyBranch setContactPersonDirectLine()    Sets the current record's "contact_person_direct_line" value
 * @method CompanyBranch setContactPersonMobile()        Sets the current record's "contact_person_mobile" value
 * @method CompanyBranch setAddress()                    Sets the current record's "address" value
 * @method CompanyBranch setRegionId()                   Sets the current record's "region_id" value
 * @method CompanyBranch setSubRegionId()                Sets the current record's "sub_region_id" value
 * @method CompanyBranch setPostcode()                   Sets the current record's "postcode" value
 * @method CompanyBranch setPhoneNumber()                Sets the current record's "phone_number" value
 * @method CompanyBranch setFaxNumber()                  Sets the current record's "fax_number" value
 * @method CompanyBranch setCompany()                    Sets the current record's "Company" value
 * @method CompanyBranch setRegion()                     Sets the current record's "Region" value
 * @method CompanyBranch setSubRegion()                  Sets the current record's "SubRegion" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompanyBranch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company_branches');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'varchar', 250, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('contact_person_name', 'varchar', 150, array(
             'type' => 'varchar',
             'length' => 150,
             ));
        $this->hasColumn('contact_person_email', 'varchar', 150, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 150,
             ));
        $this->hasColumn('contact_person_direct_line', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('contact_person_mobile', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('sub_region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('postcode', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('phone_number', 'varchar', 20, array(
             'type' => 'varchar',
             'length' => 20,
             ));
        $this->hasColumn('fax_number', 'varchar', 20, array(
             'type' => 'varchar',
             'length' => 20,
             ));


        $this->index('company_branch_name_unique_idx', array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->index('company_branch_company_id_idx', array(
             'fields' => 
             array(
              0 => 'company_id',
             ),
             ));
        $this->index('company_branch_fk_idx', array(
             'fields' => 
             array(
              0 => 'region_id',
              1 => 'sub_region_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Regions as Region', array(
             'local' => 'region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Subregions as SubRegion', array(
             'local' => 'sub_region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}