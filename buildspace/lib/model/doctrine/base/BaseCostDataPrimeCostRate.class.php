<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CostDataPrimeCostRate', 'main_conn');

/**
 * BaseCostDataPrimeCostRate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cost_data_id
 * @property integer $master_cost_data_prime_cost_rate_id
 * @property boolean $show
 * @property decimal $units
 * @property decimal $approved_value
 * @property string $approved_brand
 * @property decimal $awarded_value
 * @property string $awarded_brand
 * @property CostData $CostData
 * @property MasterCostDataPrimeCostRate $MasterCostDataPrimeCostRate
 * @property Doctrine_Collection $BillItemCostDataPrimeCostRate
 * 
 * @method integer                     getId()                                  Returns the current record's "id" value
 * @method integer                     getCostDataId()                          Returns the current record's "cost_data_id" value
 * @method integer                     getMasterCostDataPrimeCostRateId()       Returns the current record's "master_cost_data_prime_cost_rate_id" value
 * @method boolean                     getShow()                                Returns the current record's "show" value
 * @method decimal                     getUnits()                               Returns the current record's "units" value
 * @method decimal                     getApprovedValue()                       Returns the current record's "approved_value" value
 * @method string                      getApprovedBrand()                       Returns the current record's "approved_brand" value
 * @method decimal                     getAwardedValue()                        Returns the current record's "awarded_value" value
 * @method string                      getAwardedBrand()                        Returns the current record's "awarded_brand" value
 * @method CostData                    getCostData()                            Returns the current record's "CostData" value
 * @method MasterCostDataPrimeCostRate getMasterCostDataPrimeCostRate()         Returns the current record's "MasterCostDataPrimeCostRate" value
 * @method Doctrine_Collection         getBillItemCostDataPrimeCostRate()       Returns the current record's "BillItemCostDataPrimeCostRate" collection
 * @method CostDataPrimeCostRate       setId()                                  Sets the current record's "id" value
 * @method CostDataPrimeCostRate       setCostDataId()                          Sets the current record's "cost_data_id" value
 * @method CostDataPrimeCostRate       setMasterCostDataPrimeCostRateId()       Sets the current record's "master_cost_data_prime_cost_rate_id" value
 * @method CostDataPrimeCostRate       setShow()                                Sets the current record's "show" value
 * @method CostDataPrimeCostRate       setUnits()                               Sets the current record's "units" value
 * @method CostDataPrimeCostRate       setApprovedValue()                       Sets the current record's "approved_value" value
 * @method CostDataPrimeCostRate       setApprovedBrand()                       Sets the current record's "approved_brand" value
 * @method CostDataPrimeCostRate       setAwardedValue()                        Sets the current record's "awarded_value" value
 * @method CostDataPrimeCostRate       setAwardedBrand()                        Sets the current record's "awarded_brand" value
 * @method CostDataPrimeCostRate       setCostData()                            Sets the current record's "CostData" value
 * @method CostDataPrimeCostRate       setMasterCostDataPrimeCostRate()         Sets the current record's "MasterCostDataPrimeCostRate" value
 * @method CostDataPrimeCostRate       setBillItemCostDataPrimeCostRate()       Sets the current record's "BillItemCostDataPrimeCostRate" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostDataPrimeCostRate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_data_prime_cost_rates');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('cost_data_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('master_cost_data_prime_cost_rate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('show', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('units', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 1,
             ));
        $this->hasColumn('approved_value', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('approved_brand', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('awarded_value', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('awarded_brand', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));


        $this->index('cost_data_prime_cost_rate_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('cost_data_prime_cost_rate_fk_idx', array(
             'fields' => 
             array(
              0 => 'cost_data_id',
              1 => 'master_cost_data_prime_cost_rate_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CostData', array(
             'local' => 'cost_data_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MasterCostDataPrimeCostRate', array(
             'local' => 'master_cost_data_prime_cost_rate_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillItemCostDataPrimeCostRate', array(
             'local' => 'id',
             'foreign' => 'cost_data_prime_cost_rate_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}