<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PurchaseOrderInformation', 'main_conn');

/**
 * BasePurchaseOrderInformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $purchase_order_id
 * @property integer $sub_package_id
 * @property integer $currency_id
 * @property string $ref
 * @property string $quo_ref
 * @property string $company_address_1
 * @property string $company_address_2
 * @property string $company_address_3
 * @property string $supplier_address_1
 * @property string $supplier_address_2
 * @property string $supplier_address_3
 * @property string $attention_to
 * @property string $ship_to_1
 * @property string $ship_to_2
 * @property string $ship_to_3
 * @property string $note
 * @property text $signature
 * @property integer $status
 * @property string $price_format
 * @property boolean $print_without_cents
 * @property PurchaseOrder $PurchaseOrder
 * @property SubPackage $SubPackage
 * @property Currency $Currency
 * @property Doctrine_Collection $PurchaseOrderTaxes
 * 
 * @method integer                  getPurchaseOrderId()     Returns the current record's "purchase_order_id" value
 * @method integer                  getSubPackageId()        Returns the current record's "sub_package_id" value
 * @method integer                  getCurrencyId()          Returns the current record's "currency_id" value
 * @method string                   getRef()                 Returns the current record's "ref" value
 * @method string                   getQuoRef()              Returns the current record's "quo_ref" value
 * @method string                   getCompanyAddress1()     Returns the current record's "company_address_1" value
 * @method string                   getCompanyAddress2()     Returns the current record's "company_address_2" value
 * @method string                   getCompanyAddress3()     Returns the current record's "company_address_3" value
 * @method string                   getSupplierAddress1()    Returns the current record's "supplier_address_1" value
 * @method string                   getSupplierAddress2()    Returns the current record's "supplier_address_2" value
 * @method string                   getSupplierAddress3()    Returns the current record's "supplier_address_3" value
 * @method string                   getAttentionTo()         Returns the current record's "attention_to" value
 * @method string                   getShipTo1()             Returns the current record's "ship_to_1" value
 * @method string                   getShipTo2()             Returns the current record's "ship_to_2" value
 * @method string                   getShipTo3()             Returns the current record's "ship_to_3" value
 * @method string                   getNote()                Returns the current record's "note" value
 * @method text                     getSignature()           Returns the current record's "signature" value
 * @method integer                  getStatus()              Returns the current record's "status" value
 * @method string                   getPriceFormat()         Returns the current record's "price_format" value
 * @method boolean                  getPrintWithoutCents()   Returns the current record's "print_without_cents" value
 * @method PurchaseOrder            getPurchaseOrder()       Returns the current record's "PurchaseOrder" value
 * @method SubPackage               getSubPackage()          Returns the current record's "SubPackage" value
 * @method Currency                 getCurrency()            Returns the current record's "Currency" value
 * @method Doctrine_Collection      getPurchaseOrderTaxes()  Returns the current record's "PurchaseOrderTaxes" collection
 * @method PurchaseOrderInformation setPurchaseOrderId()     Sets the current record's "purchase_order_id" value
 * @method PurchaseOrderInformation setSubPackageId()        Sets the current record's "sub_package_id" value
 * @method PurchaseOrderInformation setCurrencyId()          Sets the current record's "currency_id" value
 * @method PurchaseOrderInformation setRef()                 Sets the current record's "ref" value
 * @method PurchaseOrderInformation setQuoRef()              Sets the current record's "quo_ref" value
 * @method PurchaseOrderInformation setCompanyAddress1()     Sets the current record's "company_address_1" value
 * @method PurchaseOrderInformation setCompanyAddress2()     Sets the current record's "company_address_2" value
 * @method PurchaseOrderInformation setCompanyAddress3()     Sets the current record's "company_address_3" value
 * @method PurchaseOrderInformation setSupplierAddress1()    Sets the current record's "supplier_address_1" value
 * @method PurchaseOrderInformation setSupplierAddress2()    Sets the current record's "supplier_address_2" value
 * @method PurchaseOrderInformation setSupplierAddress3()    Sets the current record's "supplier_address_3" value
 * @method PurchaseOrderInformation setAttentionTo()         Sets the current record's "attention_to" value
 * @method PurchaseOrderInformation setShipTo1()             Sets the current record's "ship_to_1" value
 * @method PurchaseOrderInformation setShipTo2()             Sets the current record's "ship_to_2" value
 * @method PurchaseOrderInformation setShipTo3()             Sets the current record's "ship_to_3" value
 * @method PurchaseOrderInformation setNote()                Sets the current record's "note" value
 * @method PurchaseOrderInformation setSignature()           Sets the current record's "signature" value
 * @method PurchaseOrderInformation setStatus()              Sets the current record's "status" value
 * @method PurchaseOrderInformation setPriceFormat()         Sets the current record's "price_format" value
 * @method PurchaseOrderInformation setPrintWithoutCents()   Sets the current record's "print_without_cents" value
 * @method PurchaseOrderInformation setPurchaseOrder()       Sets the current record's "PurchaseOrder" value
 * @method PurchaseOrderInformation setSubPackage()          Sets the current record's "SubPackage" value
 * @method PurchaseOrderInformation setCurrency()            Sets the current record's "Currency" value
 * @method PurchaseOrderInformation setPurchaseOrderTaxes()  Sets the current record's "PurchaseOrderTaxes" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePurchaseOrderInformation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_order_informations');
        $this->hasColumn('purchase_order_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sub_package_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('currency_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('ref', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('quo_ref', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('company_address_1', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('company_address_2', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('company_address_3', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('supplier_address_1', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('supplier_address_2', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('supplier_address_3', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('attention_to', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('ship_to_1', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('ship_to_2', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('ship_to_3', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('note', 'string', 370, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 370,
             ));
        $this->hasColumn('signature', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('price_format', 'string', 20, array(
             'type' => 'string',
             'default' => 'normal',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('print_without_cents', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));


        $this->index('po_info_po_idx', array(
             'fields' => 
             array(
              0 => 'purchase_order_id',
              1 => 'deleted_at',
             ),
             ));
        $this->index('po_status_idx', array(
             'fields' => 
             array(
              0 => 'purchase_order_id',
              1 => 'status',
              2 => 'deleted_at',
             ),
             ));
        $this->index('po_subpackage_idx', array(
             'fields' => 
             array(
              0 => 'purchase_order_id',
              1 => 'sub_package_id',
              2 => 'deleted_at',
             ),
             ));
        $this->index('po_currency_idx', array(
             'fields' => 
             array(
              0 => 'purchase_order_id',
              1 => 'currency_id',
              2 => 'deleted_at',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PurchaseOrder', array(
             'local' => 'purchase_order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('SubPackage', array(
             'local' => 'sub_package_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Currency', array(
             'local' => 'currency_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PurchaseOrderTax as PurchaseOrderTaxes', array(
             'local' => 'id',
             'foreign' => 'purchase_order_information_id',
             'onDelete' => 'CASCADE',
             'orderBy' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}