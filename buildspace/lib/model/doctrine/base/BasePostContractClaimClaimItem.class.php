<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContractClaimClaimItem', 'main_conn');

/**
 * BasePostContractClaimClaimItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_contract_claim_claim_id
 * @property integer $post_contract_claim_item_id
 * @property decimal $current_quantity
 * @property decimal $current_amount
 * @property decimal $current_percentage
 * @property decimal $up_to_date_quantity
 * @property decimal $up_to_date_amount
 * @property decimal $up_to_date_percentage
 * @property PostContractClaimClaim $PostContractClaimClaim
 * @property PostContractClaimItem $PostContractClaimItem
 * 
 * @method integer                    getId()                           Returns the current record's "id" value
 * @method integer                    getPostContractClaimClaimId()     Returns the current record's "post_contract_claim_claim_id" value
 * @method integer                    getPostContractClaimItemId()      Returns the current record's "post_contract_claim_item_id" value
 * @method decimal                    getCurrentQuantity()              Returns the current record's "current_quantity" value
 * @method decimal                    getCurrentAmount()                Returns the current record's "current_amount" value
 * @method decimal                    getCurrentPercentage()            Returns the current record's "current_percentage" value
 * @method decimal                    getUpToDateQuantity()             Returns the current record's "up_to_date_quantity" value
 * @method decimal                    getUpToDateAmount()               Returns the current record's "up_to_date_amount" value
 * @method decimal                    getUpToDatePercentage()           Returns the current record's "up_to_date_percentage" value
 * @method PostContractClaimClaim     getPostContractClaimClaim()       Returns the current record's "PostContractClaimClaim" value
 * @method PostContractClaimItem      getPostContractClaimItem()        Returns the current record's "PostContractClaimItem" value
 * @method PostContractClaimClaimItem setId()                           Sets the current record's "id" value
 * @method PostContractClaimClaimItem setPostContractClaimClaimId()     Sets the current record's "post_contract_claim_claim_id" value
 * @method PostContractClaimClaimItem setPostContractClaimItemId()      Sets the current record's "post_contract_claim_item_id" value
 * @method PostContractClaimClaimItem setCurrentQuantity()              Sets the current record's "current_quantity" value
 * @method PostContractClaimClaimItem setCurrentAmount()                Sets the current record's "current_amount" value
 * @method PostContractClaimClaimItem setCurrentPercentage()            Sets the current record's "current_percentage" value
 * @method PostContractClaimClaimItem setUpToDateQuantity()             Sets the current record's "up_to_date_quantity" value
 * @method PostContractClaimClaimItem setUpToDateAmount()               Sets the current record's "up_to_date_amount" value
 * @method PostContractClaimClaimItem setUpToDatePercentage()           Sets the current record's "up_to_date_percentage" value
 * @method PostContractClaimClaimItem setPostContractClaimClaim()       Sets the current record's "PostContractClaimClaim" value
 * @method PostContractClaimClaimItem setPostContractClaimItem()        Sets the current record's "PostContractClaimItem" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContractClaimClaimItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contract_claim_claim_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_contract_claim_claim_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('post_contract_claim_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('current_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('current_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('current_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('up_to_date_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));


        $this->index('post_contract_claim_claim_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'post_contract_claim_claim_id',
             ),
             ));
        $this->index('post_contract_claim_claim_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_claim_claim_id',
              1 => 'post_contract_claim_item_id',
             ),
             ));
        $this->index('post_contract_claim_claim_items_unique_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_claim_claim_id',
              1 => 'post_contract_claim_item_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractClaimClaim', array(
             'local' => 'post_contract_claim_claim_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PostContractClaimItem', array(
             'local' => 'post_contract_claim_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}