<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PurchaseOrder', 'main_conn');

/**
 * BasePurchaseOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_structure_id
 * @property string $prefix
 * @property integer $po_count
 * @property integer $region_id
 * @property integer $sub_region_id
 * @property ProjectStructure $Project
 * @property Regions $Region
 * @property Subregions $SubRegion
 * @property PurchaseOrderProject $PurchaseOrderProject
 * @property PurchaseOrderSupplier $PurchaseOrderSupplier
 * @property Doctrine_Collection $PurchaseOrderItems
 * @property PurchaseOrderInformation $PurchaseOrderInformation
 * @property Doctrine_Collection $StockInInvoices
 * 
 * @method integer                  getProjectStructureId()       Returns the current record's "project_structure_id" value
 * @method string                   getPrefix()                   Returns the current record's "prefix" value
 * @method integer                  getPoCount()                  Returns the current record's "po_count" value
 * @method integer                  getRegionId()                 Returns the current record's "region_id" value
 * @method integer                  getSubRegionId()              Returns the current record's "sub_region_id" value
 * @method ProjectStructure         getProject()                  Returns the current record's "Project" value
 * @method Regions                  getRegion()                   Returns the current record's "Region" value
 * @method Subregions               getSubRegion()                Returns the current record's "SubRegion" value
 * @method PurchaseOrderProject     getPurchaseOrderProject()     Returns the current record's "PurchaseOrderProject" value
 * @method PurchaseOrderSupplier    getPurchaseOrderSupplier()    Returns the current record's "PurchaseOrderSupplier" value
 * @method Doctrine_Collection      getPurchaseOrderItems()       Returns the current record's "PurchaseOrderItems" collection
 * @method PurchaseOrderInformation getPurchaseOrderInformation() Returns the current record's "PurchaseOrderInformation" value
 * @method Doctrine_Collection      getStockInInvoices()          Returns the current record's "StockInInvoices" collection
 * @method PurchaseOrder            setProjectStructureId()       Sets the current record's "project_structure_id" value
 * @method PurchaseOrder            setPrefix()                   Sets the current record's "prefix" value
 * @method PurchaseOrder            setPoCount()                  Sets the current record's "po_count" value
 * @method PurchaseOrder            setRegionId()                 Sets the current record's "region_id" value
 * @method PurchaseOrder            setSubRegionId()              Sets the current record's "sub_region_id" value
 * @method PurchaseOrder            setProject()                  Sets the current record's "Project" value
 * @method PurchaseOrder            setRegion()                   Sets the current record's "Region" value
 * @method PurchaseOrder            setSubRegion()                Sets the current record's "SubRegion" value
 * @method PurchaseOrder            setPurchaseOrderProject()     Sets the current record's "PurchaseOrderProject" value
 * @method PurchaseOrder            setPurchaseOrderSupplier()    Sets the current record's "PurchaseOrderSupplier" value
 * @method PurchaseOrder            setPurchaseOrderItems()       Sets the current record's "PurchaseOrderItems" collection
 * @method PurchaseOrder            setPurchaseOrderInformation() Sets the current record's "PurchaseOrderInformation" value
 * @method PurchaseOrder            setStockInInvoices()          Sets the current record's "StockInInvoices" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePurchaseOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_orders');
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('prefix', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('po_count', 'integer', 2, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('sub_region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('po_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'region_id',
              2 => 'sub_region_id',
              3 => 'deleted_at',
             ),
             ));
        $this->index('po_prefix_po_count_uniq_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'prefix',
              2 => 'po_count',
             ),
             'type' => 'unique',
             ));
        $this->index('po_region_idx', array(
             'fields' => 
             array(
              0 => 'region_id',
              1 => 'sub_region_id',
              2 => 'deleted_at',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure as Project', array(
             'local' => 'project_structure_id',
             'foreign' => 'id'));

        $this->hasOne('Regions as Region', array(
             'local' => 'region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Subregions as SubRegion', array(
             'local' => 'sub_region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PurchaseOrderProject', array(
             'local' => 'id',
             'foreign' => 'purchase_order_id'));

        $this->hasOne('PurchaseOrderSupplier', array(
             'local' => 'id',
             'foreign' => 'purchase_order_id'));

        $this->hasMany('PurchaseOrderItem as PurchaseOrderItems', array(
             'local' => 'id',
             'foreign' => 'purchase_order_id'));

        $this->hasOne('PurchaseOrderInformation', array(
             'local' => 'id',
             'foreign' => 'purchase_order_id'));

        $this->hasMany('StockInInvoice as StockInInvoices', array(
             'local' => 'id',
             'foreign' => 'purchase_order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}