<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContractRemeasurementBuildUpQuantitySummary', 'main_conn');

/**
 * BasePostContractRemeasurementBuildUpQuantitySummary
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_contract_bill_item_rate_id
 * @property integer $bill_column_setting_id
 * @property decimal $total_quantity
 * @property decimal $final_quantity
 * @property boolean $apply_conversion_factor
 * @property decimal $conversion_factor_amount
 * @property varchar $conversion_factor_operator
 * @property integer $rounding_type
 * @property integer $type
 * @property PostContractBillItemRate $PostContractBillItemRate
 * @property BillColumnSetting $BillColumnSetting
 * 
 * @method integer                                         getId()                              Returns the current record's "id" value
 * @method integer                                         getPostContractBillItemRateId()      Returns the current record's "post_contract_bill_item_rate_id" value
 * @method integer                                         getBillColumnSettingId()             Returns the current record's "bill_column_setting_id" value
 * @method decimal                                         getTotalQuantity()                   Returns the current record's "total_quantity" value
 * @method decimal                                         getFinalQuantity()                   Returns the current record's "final_quantity" value
 * @method boolean                                         getApplyConversionFactor()           Returns the current record's "apply_conversion_factor" value
 * @method decimal                                         getConversionFactorAmount()          Returns the current record's "conversion_factor_amount" value
 * @method varchar                                         getConversionFactorOperator()        Returns the current record's "conversion_factor_operator" value
 * @method integer                                         getRoundingType()                    Returns the current record's "rounding_type" value
 * @method integer                                         getType()                            Returns the current record's "type" value
 * @method PostContractBillItemRate                        getPostContractBillItemRate()        Returns the current record's "PostContractBillItemRate" value
 * @method BillColumnSetting                               getBillColumnSetting()               Returns the current record's "BillColumnSetting" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setId()                              Sets the current record's "id" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setPostContractBillItemRateId()      Sets the current record's "post_contract_bill_item_rate_id" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setBillColumnSettingId()             Sets the current record's "bill_column_setting_id" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setTotalQuantity()                   Sets the current record's "total_quantity" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setFinalQuantity()                   Sets the current record's "final_quantity" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setApplyConversionFactor()           Sets the current record's "apply_conversion_factor" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setConversionFactorAmount()          Sets the current record's "conversion_factor_amount" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setConversionFactorOperator()        Sets the current record's "conversion_factor_operator" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setRoundingType()                    Sets the current record's "rounding_type" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setType()                            Sets the current record's "type" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setPostContractBillItemRate()        Sets the current record's "PostContractBillItemRate" value
 * @method PostContractRemeasurementBuildUpQuantitySummary setBillColumnSetting()               Sets the current record's "BillColumnSetting" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContractRemeasurementBuildUpQuantitySummary extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contract_rm_build_up_quantity_summaries');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_contract_bill_item_rate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bill_column_setting_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('final_quantity', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('apply_conversion_factor', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('conversion_factor_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('conversion_factor_operator', 'varchar', 1, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('rounding_type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));


        $this->index('pcrm_buq_summary_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'post_contract_bill_item_rate_id',
              2 => 'bill_column_setting_id',
              3 => 'type',
              4 => 'deleted_at',
             ),
             ));
        $this->index('pcrm_buq_unique_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_bill_item_rate_id',
              1 => 'bill_column_setting_id',
              2 => 'type',
              3 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractBillItemRate', array(
             'local' => 'post_contract_bill_item_rate_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillColumnSetting', array(
             'local' => 'bill_column_setting_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}