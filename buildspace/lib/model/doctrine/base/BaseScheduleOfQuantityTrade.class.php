<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ScheduleOfQuantityTrade', 'main_conn');

/**
 * BaseScheduleOfQuantityTrade
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $schedule_of_quantity_id
 * @property varchar $third_party_identifier
 * @property integer $identifier_type
 * @property string $description
 * @property integer $priority
 * @property ScheduleOfQuantity $ScheduleOfQuantity
 * @property Doctrine_Collection $Items
 * 
 * @method integer                 getId()                      Returns the current record's "id" value
 * @method integer                 getScheduleOfQuantityId()    Returns the current record's "schedule_of_quantity_id" value
 * @method varchar                 getThirdPartyIdentifier()    Returns the current record's "third_party_identifier" value
 * @method integer                 getIdentifierType()          Returns the current record's "identifier_type" value
 * @method string                  getDescription()             Returns the current record's "description" value
 * @method integer                 getPriority()                Returns the current record's "priority" value
 * @method ScheduleOfQuantity      getScheduleOfQuantity()      Returns the current record's "ScheduleOfQuantity" value
 * @method Doctrine_Collection     getItems()                   Returns the current record's "Items" collection
 * @method ScheduleOfQuantityTrade setId()                      Sets the current record's "id" value
 * @method ScheduleOfQuantityTrade setScheduleOfQuantityId()    Sets the current record's "schedule_of_quantity_id" value
 * @method ScheduleOfQuantityTrade setThirdPartyIdentifier()    Sets the current record's "third_party_identifier" value
 * @method ScheduleOfQuantityTrade setIdentifierType()          Sets the current record's "identifier_type" value
 * @method ScheduleOfQuantityTrade setDescription()             Sets the current record's "description" value
 * @method ScheduleOfQuantityTrade setPriority()                Sets the current record's "priority" value
 * @method ScheduleOfQuantityTrade setScheduleOfQuantity()      Sets the current record's "ScheduleOfQuantity" value
 * @method ScheduleOfQuantityTrade setItems()                   Sets the current record's "Items" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScheduleOfQuantityTrade extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('soq_trades');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('schedule_of_quantity_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('third_party_identifier', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('identifier_type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('soq_trade_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'schedule_of_quantity_id',
              2 => 'identifier_type',
             ),
             ));
        $this->index('soq_trade_identifier_id_idx', array(
             'fields' => 
             array(
              0 => 'third_party_identifier',
             ),
             ));
        $this->index('soq_trade_unique_idx', array(
             'fields' => 
             array(
              0 => 'schedule_of_quantity_id',
              1 => 'priority',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ScheduleOfQuantity', array(
             'local' => 'schedule_of_quantity_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ScheduleOfQuantityItem as Items', array(
             'local' => 'id',
             'foreign' => 'schedule_of_quantity_trade_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}