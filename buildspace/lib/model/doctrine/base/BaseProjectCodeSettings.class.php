<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectCodeSettings', 'main_conn');

/**
 * BaseProjectCodeSettings
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $eproject_subsidiary_id
 * @property integer $project_structure_id
 * @property string $subsidiary_code
 * @property smallint $type
 * @property ProjectStructure $ProjectStructure
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method integer             getEprojectSubsidiaryId()   Returns the current record's "eproject_subsidiary_id" value
 * @method integer             getProjectStructureId()     Returns the current record's "project_structure_id" value
 * @method string              getSubsidiaryCode()         Returns the current record's "subsidiary_code" value
 * @method smallint            getType()                   Returns the current record's "type" value
 * @method ProjectStructure    getProjectStructure()       Returns the current record's "ProjectStructure" value
 * @method ProjectCodeSettings setId()                     Sets the current record's "id" value
 * @method ProjectCodeSettings setEprojectSubsidiaryId()   Sets the current record's "eproject_subsidiary_id" value
 * @method ProjectCodeSettings setProjectStructureId()     Sets the current record's "project_structure_id" value
 * @method ProjectCodeSettings setSubsidiaryCode()         Sets the current record's "subsidiary_code" value
 * @method ProjectCodeSettings setType()                   Sets the current record's "type" value
 * @method ProjectCodeSettings setProjectStructure()       Sets the current record's "ProjectStructure" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectCodeSettings extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_code_settings');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('eproject_subsidiary_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('subsidiary_code', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('type', 'smallint', null, array(
             'type' => 'smallint',
             'notnull' => true,
             ));


        $this->index('project_code_settings_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'eproject_subsidiary_id',
              2 => 'project_structure_id',
             ),
             ));
        $this->index('project_code_settings_fx_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}