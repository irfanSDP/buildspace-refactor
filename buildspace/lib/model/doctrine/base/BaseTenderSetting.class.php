<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TenderSetting', 'main_conn');

/**
 * BaseTenderSetting
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $project_structure_id
 * @property integer $priority
 * @property integer $contractor_sort_by
 * @property integer $awarded_company_id
 * @property decimal $original_tender_value
 * @property boolean $locked
 * @property ProjectStructure $ProjectStructure
 * @property Company $AwardedCompany
 * 
 * @method integer          getId()                    Returns the current record's "id" value
 * @method integer          getProjectStructureId()    Returns the current record's "project_structure_id" value
 * @method integer          getPriority()              Returns the current record's "priority" value
 * @method integer          getContractorSortBy()      Returns the current record's "contractor_sort_by" value
 * @method integer          getAwardedCompanyId()      Returns the current record's "awarded_company_id" value
 * @method decimal          getOriginalTenderValue()   Returns the current record's "original_tender_value" value
 * @method boolean          getLocked()                Returns the current record's "locked" value
 * @method ProjectStructure getProjectStructure()      Returns the current record's "ProjectStructure" value
 * @method Company          getAwardedCompany()        Returns the current record's "AwardedCompany" value
 * @method TenderSetting    setId()                    Sets the current record's "id" value
 * @method TenderSetting    setProjectStructureId()    Sets the current record's "project_structure_id" value
 * @method TenderSetting    setPriority()              Sets the current record's "priority" value
 * @method TenderSetting    setContractorSortBy()      Sets the current record's "contractor_sort_by" value
 * @method TenderSetting    setAwardedCompanyId()      Sets the current record's "awarded_company_id" value
 * @method TenderSetting    setOriginalTenderValue()   Sets the current record's "original_tender_value" value
 * @method TenderSetting    setLocked()                Sets the current record's "locked" value
 * @method TenderSetting    setProjectStructure()      Sets the current record's "ProjectStructure" value
 * @method TenderSetting    setAwardedCompany()        Sets the current record's "AwardedCompany" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTenderSetting extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tender_settings');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('contractor_sort_by', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 2,
             ));
        $this->hasColumn('awarded_company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('original_tender_value', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('locked', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));


        $this->index('tender_settings_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_structure_id',
             ),
             ));
        $this->index('tender_settings_priority_unique_idx', array(
             'fields' => 
             array(
              0 => 'priority',
              1 => 'project_structure_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Company as AwardedCompany', array(
             'local' => 'awarded_company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}