<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BQLibraryBuildUpRateItem', 'main_conn');

/**
 * BaseBQLibraryBuildUpRateItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bq_item_id
 * @property integer $build_up_rate_resource_id
 * @property integer $resource_trade_library_id
 * @property integer $resource_item_library_id
 * @property string $description
 * @property decimal $total
 * @property decimal $line_total
 * @property integer $uom_id
 * @property integer $priority
 * @property BQItem $BQItem
 * @property BQLibraryBuildUpRateResource $BQLibraryBuildUpRateResource
 * @property ResourceTrade $ResourceTradeLibrary
 * @property ResourceItem $ResourceItemLibrary
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property Doctrine_Collection $FormulatedColumns
 * 
 * @method integer                      getId()                           Returns the current record's "id" value
 * @method integer                      getBqItemId()                     Returns the current record's "bq_item_id" value
 * @method integer                      getBuildUpRateResourceId()        Returns the current record's "build_up_rate_resource_id" value
 * @method integer                      getResourceTradeLibraryId()       Returns the current record's "resource_trade_library_id" value
 * @method integer                      getResourceItemLibraryId()        Returns the current record's "resource_item_library_id" value
 * @method string                       getDescription()                  Returns the current record's "description" value
 * @method decimal                      getTotal()                        Returns the current record's "total" value
 * @method decimal                      getLineTotal()                    Returns the current record's "line_total" value
 * @method integer                      getUomId()                        Returns the current record's "uom_id" value
 * @method integer                      getPriority()                     Returns the current record's "priority" value
 * @method BQItem                       getBQItem()                       Returns the current record's "BQItem" value
 * @method BQLibraryBuildUpRateResource getBQLibraryBuildUpRateResource() Returns the current record's "BQLibraryBuildUpRateResource" value
 * @method ResourceTrade                getResourceTradeLibrary()         Returns the current record's "ResourceTradeLibrary" value
 * @method ResourceItem                 getResourceItemLibrary()          Returns the current record's "ResourceItemLibrary" value
 * @method UnitOfMeasurement            getUnitOfMeasurement()            Returns the current record's "UnitOfMeasurement" value
 * @method Doctrine_Collection          getFormulatedColumns()            Returns the current record's "FormulatedColumns" collection
 * @method BQLibraryBuildUpRateItem     setId()                           Sets the current record's "id" value
 * @method BQLibraryBuildUpRateItem     setBqItemId()                     Sets the current record's "bq_item_id" value
 * @method BQLibraryBuildUpRateItem     setBuildUpRateResourceId()        Sets the current record's "build_up_rate_resource_id" value
 * @method BQLibraryBuildUpRateItem     setResourceTradeLibraryId()       Sets the current record's "resource_trade_library_id" value
 * @method BQLibraryBuildUpRateItem     setResourceItemLibraryId()        Sets the current record's "resource_item_library_id" value
 * @method BQLibraryBuildUpRateItem     setDescription()                  Sets the current record's "description" value
 * @method BQLibraryBuildUpRateItem     setTotal()                        Sets the current record's "total" value
 * @method BQLibraryBuildUpRateItem     setLineTotal()                    Sets the current record's "line_total" value
 * @method BQLibraryBuildUpRateItem     setUomId()                        Sets the current record's "uom_id" value
 * @method BQLibraryBuildUpRateItem     setPriority()                     Sets the current record's "priority" value
 * @method BQLibraryBuildUpRateItem     setBQItem()                       Sets the current record's "BQItem" value
 * @method BQLibraryBuildUpRateItem     setBQLibraryBuildUpRateResource() Sets the current record's "BQLibraryBuildUpRateResource" value
 * @method BQLibraryBuildUpRateItem     setResourceTradeLibrary()         Sets the current record's "ResourceTradeLibrary" value
 * @method BQLibraryBuildUpRateItem     setResourceItemLibrary()          Sets the current record's "ResourceItemLibrary" value
 * @method BQLibraryBuildUpRateItem     setUnitOfMeasurement()            Sets the current record's "UnitOfMeasurement" value
 * @method BQLibraryBuildUpRateItem     setFormulatedColumns()            Sets the current record's "FormulatedColumns" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBQLibraryBuildUpRateItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bq_library_build_up_rate_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('bq_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('build_up_rate_resource_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('resource_trade_library_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('resource_item_library_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('line_total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('bq_lib_br_item_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'bq_item_id',
              2 => 'build_up_rate_resource_id',
              3 => 'resource_item_library_id',
              4 => 'deleted_at',
             ),
             ));
        $this->index('bq_lib_br_fk_idx', array(
             'fields' => 
             array(
              0 => 'bq_item_id',
              1 => 'build_up_rate_resource_id',
              2 => 'resource_item_library_id',
              3 => 'uom_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BQItem', array(
             'local' => 'bq_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BQLibraryBuildUpRateResource', array(
             'local' => 'build_up_rate_resource_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ResourceTrade as ResourceTradeLibrary', array(
             'local' => 'resource_trade_library_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ResourceItem as ResourceItemLibrary', array(
             'local' => 'resource_item_library_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BQLibraryBuildUpRateFormulatedColumn as FormulatedColumns', array(
             'local' => 'id',
             'foreign' => 'relation_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}