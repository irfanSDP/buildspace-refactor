<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UnitOfMeasurementType', 'main_conn');

/**
 * BaseUnitOfMeasurementType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $BillSettings
 * @property Doctrine_Collection $ScheduleOfRateBills
 * @property Doctrine_Collection $UnitOfMeasurements
 * @property Doctrine_Collection $SupplyOfMaterials
 * 
 * @method integer               getId()                  Returns the current record's "id" value
 * @method string                getName()                Returns the current record's "name" value
 * @method Doctrine_Collection   getBillSettings()        Returns the current record's "BillSettings" collection
 * @method Doctrine_Collection   getScheduleOfRateBills() Returns the current record's "ScheduleOfRateBills" collection
 * @method Doctrine_Collection   getUnitOfMeasurements()  Returns the current record's "UnitOfMeasurements" collection
 * @method Doctrine_Collection   getSupplyOfMaterials()   Returns the current record's "SupplyOfMaterials" collection
 * @method UnitOfMeasurementType setId()                  Sets the current record's "id" value
 * @method UnitOfMeasurementType setName()                Sets the current record's "name" value
 * @method UnitOfMeasurementType setBillSettings()        Sets the current record's "BillSettings" collection
 * @method UnitOfMeasurementType setScheduleOfRateBills() Sets the current record's "ScheduleOfRateBills" collection
 * @method UnitOfMeasurementType setUnitOfMeasurements()  Sets the current record's "UnitOfMeasurements" collection
 * @method UnitOfMeasurementType setSupplyOfMaterials()   Sets the current record's "SupplyOfMaterials" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUnitOfMeasurementType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('units_of_measurement_type');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));


        $this->index('uomt_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('uomt_name_unique_idx', array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BillSetting as BillSettings', array(
             'local' => 'id',
             'foreign' => 'unit_type'));

        $this->hasMany('ScheduleOfRateBill as ScheduleOfRateBills', array(
             'local' => 'id',
             'foreign' => 'unit_type'));

        $this->hasMany('UnitOfMeasurement as UnitOfMeasurements', array(
             'local' => 'id',
             'foreign' => 'type'));

        $this->hasMany('SupplyOfMaterial as SupplyOfMaterials', array(
             'local' => 'id',
             'foreign' => 'unit_type'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}