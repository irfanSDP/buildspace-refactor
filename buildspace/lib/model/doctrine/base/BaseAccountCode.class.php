<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AccountCode', 'main_conn');

/**
 * BaseAccountCode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $account_group_id
 * @property string $code
 * @property string $description
 * @property string $tax_code
 * @property integer $priority
 * @property integer $type
 * @property AccountGroup $AccountGroup
 * @property Doctrine_Collection $DebitCreditNoteClaimItem
 * @property Doctrine_Collection $ItemCodeSetting
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getAccountGroupId()           Returns the current record's "account_group_id" value
 * @method string              getCode()                     Returns the current record's "code" value
 * @method string              getDescription()              Returns the current record's "description" value
 * @method string              getTaxCode()                  Returns the current record's "tax_code" value
 * @method integer             getPriority()                 Returns the current record's "priority" value
 * @method integer             getType()                     Returns the current record's "type" value
 * @method AccountGroup        getAccountGroup()             Returns the current record's "AccountGroup" value
 * @method Doctrine_Collection getDebitCreditNoteClaimItem() Returns the current record's "DebitCreditNoteClaimItem" collection
 * @method Doctrine_Collection getItemCodeSetting()          Returns the current record's "ItemCodeSetting" collection
 * @method AccountCode         setId()                       Sets the current record's "id" value
 * @method AccountCode         setAccountGroupId()           Sets the current record's "account_group_id" value
 * @method AccountCode         setCode()                     Sets the current record's "code" value
 * @method AccountCode         setDescription()              Sets the current record's "description" value
 * @method AccountCode         setTaxCode()                  Sets the current record's "tax_code" value
 * @method AccountCode         setPriority()                 Sets the current record's "priority" value
 * @method AccountCode         setType()                     Sets the current record's "type" value
 * @method AccountCode         setAccountGroup()             Sets the current record's "AccountGroup" value
 * @method AccountCode         setDebitCreditNoteClaimItem() Sets the current record's "DebitCreditNoteClaimItem" collection
 * @method AccountCode         setItemCodeSetting()          Sets the current record's "ItemCodeSetting" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAccountCode extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('account_codes');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('account_group_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('tax_code', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('type', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));


        $this->index('account_code_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AccountGroup', array(
             'local' => 'account_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('DebitCreditNoteClaimItem', array(
             'local' => 'id',
             'foreign' => 'account_code_id'));

        $this->hasMany('ItemCodeSetting', array(
             'local' => 'id',
             'foreign' => 'account_code_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}