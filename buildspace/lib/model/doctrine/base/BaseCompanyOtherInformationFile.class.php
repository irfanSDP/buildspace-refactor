<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CompanyOtherInformationFile', 'main_conn');

/**
 * BaseCompanyOtherInformationFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $company_other_information_id
 * @property string $original_file_name
 * @property string $uploaded_file_name
 * @property CompanyOtherInformation $CompanyOtherInformation
 * 
 * @method integer                     getCompanyOtherInformationId()    Returns the current record's "company_other_information_id" value
 * @method string                      getOriginalFileName()             Returns the current record's "original_file_name" value
 * @method string                      getUploadedFileName()             Returns the current record's "uploaded_file_name" value
 * @method CompanyOtherInformation     getCompanyOtherInformation()      Returns the current record's "CompanyOtherInformation" value
 * @method CompanyOtherInformationFile setCompanyOtherInformationId()    Sets the current record's "company_other_information_id" value
 * @method CompanyOtherInformationFile setOriginalFileName()             Sets the current record's "original_file_name" value
 * @method CompanyOtherInformationFile setUploadedFileName()             Sets the current record's "uploaded_file_name" value
 * @method CompanyOtherInformationFile setCompanyOtherInformation()      Sets the current record's "CompanyOtherInformation" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompanyOtherInformationFile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company_other_information_files');
        $this->hasColumn('company_other_information_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('original_file_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('uploaded_file_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));


        $this->index('company_other_information_id_idx', array(
             'fields' => 
             array(
              0 => 'company_other_information_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CompanyOtherInformation', array(
             'local' => 'company_other_information_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}