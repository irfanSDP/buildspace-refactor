<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClaimCertificate', 'main_conn');

/**
 * BaseClaimCertificate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_contract_claim_revision_id
 * @property date $contractor_submitted_date
 * @property date $site_verified_date
 * @property date $qs_received_date
 * @property decimal $release_retention_amount
 * @property decimal $release_retention_percentage
 * @property decimal $retention_tax_percentage
 * @property decimal $amount_certified
 * @property string $person_in_charge
 * @property date $valuation_date
 * @property date $due_date
 * @property decimal $budget_amount
 * @property date $budget_due_date
 * @property decimal $tax_percentage
 * @property string $acc_remarks
 * @property string $qs_remarks
 * @property smallint $status
 * @property PostContractClaimRevision $PostContractClaimRevision
 * @property Doctrine_Collection $ItemCodeSettingObjectBreakdowns
 * @property Doctrine_Collection $ApprovalLogs
 * @property Doctrine_Collection $PaymentLogs
 * @property ClaimCertificateInvoice $Invoice
 * @property ClaimCertificateNote $Note
 * @property ClaimCertificateInformation $Information
 * @property Doctrine_Collection $PostContractClaim
 * @property Doctrine_Collection $PostContractClaimClaim
 * @property Doctrine_Collection $VariationOrderItems
 * @property Doctrine_Collection $VariationOrders
 * @property Doctrine_Collection $VariationOrderClaims
 * 
 * @method integer                     getId()                              Returns the current record's "id" value
 * @method integer                     getPostContractClaimRevisionId()     Returns the current record's "post_contract_claim_revision_id" value
 * @method date                        getContractorSubmittedDate()         Returns the current record's "contractor_submitted_date" value
 * @method date                        getSiteVerifiedDate()                Returns the current record's "site_verified_date" value
 * @method date                        getQsReceivedDate()                  Returns the current record's "qs_received_date" value
 * @method decimal                     getReleaseRetentionAmount()          Returns the current record's "release_retention_amount" value
 * @method decimal                     getReleaseRetentionPercentage()      Returns the current record's "release_retention_percentage" value
 * @method decimal                     getRetentionTaxPercentage()          Returns the current record's "retention_tax_percentage" value
 * @method decimal                     getAmountCertified()                 Returns the current record's "amount_certified" value
 * @method string                      getPersonInCharge()                  Returns the current record's "person_in_charge" value
 * @method date                        getValuationDate()                   Returns the current record's "valuation_date" value
 * @method date                        getDueDate()                         Returns the current record's "due_date" value
 * @method decimal                     getBudgetAmount()                    Returns the current record's "budget_amount" value
 * @method date                        getBudgetDueDate()                   Returns the current record's "budget_due_date" value
 * @method decimal                     getTaxPercentage()                   Returns the current record's "tax_percentage" value
 * @method string                      getAccRemarks()                      Returns the current record's "acc_remarks" value
 * @method string                      getQsRemarks()                       Returns the current record's "qs_remarks" value
 * @method smallint                    getStatus()                          Returns the current record's "status" value
 * @method PostContractClaimRevision   getPostContractClaimRevision()       Returns the current record's "PostContractClaimRevision" value
 * @method Doctrine_Collection         getItemCodeSettingObjectBreakdowns() Returns the current record's "ItemCodeSettingObjectBreakdowns" collection
 * @method Doctrine_Collection         getApprovalLogs()                    Returns the current record's "ApprovalLogs" collection
 * @method Doctrine_Collection         getPaymentLogs()                     Returns the current record's "PaymentLogs" collection
 * @method ClaimCertificateInvoice     getInvoice()                         Returns the current record's "Invoice" value
 * @method ClaimCertificateNote        getNote()                            Returns the current record's "Note" value
 * @method ClaimCertificateInformation getInformation()                     Returns the current record's "Information" value
 * @method Doctrine_Collection         getPostContractClaim()               Returns the current record's "PostContractClaim" collection
 * @method Doctrine_Collection         getPostContractClaimClaim()          Returns the current record's "PostContractClaimClaim" collection
 * @method Doctrine_Collection         getVariationOrderItems()             Returns the current record's "VariationOrderItems" collection
 * @method Doctrine_Collection         getVariationOrders()                 Returns the current record's "VariationOrders" collection
 * @method Doctrine_Collection         getVariationOrderClaims()            Returns the current record's "VariationOrderClaims" collection
 * @method ClaimCertificate            setId()                              Sets the current record's "id" value
 * @method ClaimCertificate            setPostContractClaimRevisionId()     Sets the current record's "post_contract_claim_revision_id" value
 * @method ClaimCertificate            setContractorSubmittedDate()         Sets the current record's "contractor_submitted_date" value
 * @method ClaimCertificate            setSiteVerifiedDate()                Sets the current record's "site_verified_date" value
 * @method ClaimCertificate            setQsReceivedDate()                  Sets the current record's "qs_received_date" value
 * @method ClaimCertificate            setReleaseRetentionAmount()          Sets the current record's "release_retention_amount" value
 * @method ClaimCertificate            setReleaseRetentionPercentage()      Sets the current record's "release_retention_percentage" value
 * @method ClaimCertificate            setRetentionTaxPercentage()          Sets the current record's "retention_tax_percentage" value
 * @method ClaimCertificate            setAmountCertified()                 Sets the current record's "amount_certified" value
 * @method ClaimCertificate            setPersonInCharge()                  Sets the current record's "person_in_charge" value
 * @method ClaimCertificate            setValuationDate()                   Sets the current record's "valuation_date" value
 * @method ClaimCertificate            setDueDate()                         Sets the current record's "due_date" value
 * @method ClaimCertificate            setBudgetAmount()                    Sets the current record's "budget_amount" value
 * @method ClaimCertificate            setBudgetDueDate()                   Sets the current record's "budget_due_date" value
 * @method ClaimCertificate            setTaxPercentage()                   Sets the current record's "tax_percentage" value
 * @method ClaimCertificate            setAccRemarks()                      Sets the current record's "acc_remarks" value
 * @method ClaimCertificate            setQsRemarks()                       Sets the current record's "qs_remarks" value
 * @method ClaimCertificate            setStatus()                          Sets the current record's "status" value
 * @method ClaimCertificate            setPostContractClaimRevision()       Sets the current record's "PostContractClaimRevision" value
 * @method ClaimCertificate            setItemCodeSettingObjectBreakdowns() Sets the current record's "ItemCodeSettingObjectBreakdowns" collection
 * @method ClaimCertificate            setApprovalLogs()                    Sets the current record's "ApprovalLogs" collection
 * @method ClaimCertificate            setPaymentLogs()                     Sets the current record's "PaymentLogs" collection
 * @method ClaimCertificate            setInvoice()                         Sets the current record's "Invoice" value
 * @method ClaimCertificate            setNote()                            Sets the current record's "Note" value
 * @method ClaimCertificate            setInformation()                     Sets the current record's "Information" value
 * @method ClaimCertificate            setPostContractClaim()               Sets the current record's "PostContractClaim" collection
 * @method ClaimCertificate            setPostContractClaimClaim()          Sets the current record's "PostContractClaimClaim" collection
 * @method ClaimCertificate            setVariationOrderItems()             Sets the current record's "VariationOrderItems" collection
 * @method ClaimCertificate            setVariationOrders()                 Sets the current record's "VariationOrders" collection
 * @method ClaimCertificate            setVariationOrderClaims()            Sets the current record's "VariationOrderClaims" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimCertificate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claim_certificates');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_contract_claim_revision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('contractor_submitted_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('site_verified_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('qs_received_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('release_retention_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('release_retention_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('retention_tax_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('amount_certified', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('person_in_charge', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('valuation_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('due_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('budget_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('budget_due_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('tax_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             ));
        $this->hasColumn('acc_remarks', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('qs_remarks', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('status', 'smallint', null, array(
             'type' => 'smallint',
             'notnull' => true,
             ));


        $this->index('claim_certificates_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'status',
             ),
             ));
        $this->index('claim_certificates_foreign_keys_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_claim_revision_id',
             ),
             ));
        $this->index('claim_certificates_unique_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_claim_revision_id',
             ),
             'type' => 'unique',
             ));
        $this->option('orderBy', 'id');
        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractClaimRevision', array(
             'local' => 'post_contract_claim_revision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ItemCodeSettingObjectBreakdown as ItemCodeSettingObjectBreakdowns', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('ClaimCertificateApprovalLog as ApprovalLogs', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('ClaimCertificatePaymentLog as PaymentLogs', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasOne('ClaimCertificateInvoice as Invoice', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasOne('ClaimCertificateNote as Note', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasOne('ClaimCertificateInformation as Information', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('PostContractClaim', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('PostContractClaimClaim', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('RequestForVariationItemClaimCertificate as VariationOrderItems', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('VariationOrderClaimCertificate as VariationOrders', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $this->hasMany('VariationOrderClaimClaimCertificate as VariationOrderClaims', array(
             'local' => 'id',
             'foreign' => 'claim_certificate_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}