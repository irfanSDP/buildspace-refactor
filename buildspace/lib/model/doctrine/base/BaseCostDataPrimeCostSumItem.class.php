<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CostDataPrimeCostSumItem', 'main_conn');

/**
 * BaseCostDataPrimeCostSumItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cost_data_id
 * @property integer $master_cost_data_prime_cost_sum_item_id
 * @property boolean $show
 * @property decimal $approved_cost
 * @property decimal $awarded_cost
 * @property decimal $conversion_factor
 * @property string $awarded_nominated_sub_contractor
 * @property date $awarded_date
 * @property CostData $CostData
 * @property MasterCostDataPrimeCostSumItem $MasterCostDataPrimeCostSumItem
 * 
 * @method integer                        getId()                                      Returns the current record's "id" value
 * @method integer                        getCostDataId()                              Returns the current record's "cost_data_id" value
 * @method integer                        getMasterCostDataPrimeCostSumItemId()        Returns the current record's "master_cost_data_prime_cost_sum_item_id" value
 * @method boolean                        getShow()                                    Returns the current record's "show" value
 * @method decimal                        getApprovedCost()                            Returns the current record's "approved_cost" value
 * @method decimal                        getAwardedCost()                             Returns the current record's "awarded_cost" value
 * @method decimal                        getConversionFactor()                        Returns the current record's "conversion_factor" value
 * @method string                         getAwardedNominatedSubContractor()           Returns the current record's "awarded_nominated_sub_contractor" value
 * @method date                           getAwardedDate()                             Returns the current record's "awarded_date" value
 * @method CostData                       getCostData()                                Returns the current record's "CostData" value
 * @method MasterCostDataPrimeCostSumItem getMasterCostDataPrimeCostSumItem()          Returns the current record's "MasterCostDataPrimeCostSumItem" value
 * @method CostDataPrimeCostSumItem       setId()                                      Sets the current record's "id" value
 * @method CostDataPrimeCostSumItem       setCostDataId()                              Sets the current record's "cost_data_id" value
 * @method CostDataPrimeCostSumItem       setMasterCostDataPrimeCostSumItemId()        Sets the current record's "master_cost_data_prime_cost_sum_item_id" value
 * @method CostDataPrimeCostSumItem       setShow()                                    Sets the current record's "show" value
 * @method CostDataPrimeCostSumItem       setApprovedCost()                            Sets the current record's "approved_cost" value
 * @method CostDataPrimeCostSumItem       setAwardedCost()                             Sets the current record's "awarded_cost" value
 * @method CostDataPrimeCostSumItem       setConversionFactor()                        Sets the current record's "conversion_factor" value
 * @method CostDataPrimeCostSumItem       setAwardedNominatedSubContractor()           Sets the current record's "awarded_nominated_sub_contractor" value
 * @method CostDataPrimeCostSumItem       setAwardedDate()                             Sets the current record's "awarded_date" value
 * @method CostDataPrimeCostSumItem       setCostData()                                Sets the current record's "CostData" value
 * @method CostDataPrimeCostSumItem       setMasterCostDataPrimeCostSumItem()          Sets the current record's "MasterCostDataPrimeCostSumItem" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostDataPrimeCostSumItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_data_prime_cost_sum_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('cost_data_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('master_cost_data_prime_cost_sum_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('show', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('approved_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('awarded_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('conversion_factor', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 1,
             ));
        $this->hasColumn('awarded_nominated_sub_contractor', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('awarded_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));


        $this->index('cost_data_item_prime_cost_sum_item_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('cost_data_item_prime_cost_sum_item_fk_idx', array(
             'fields' => 
             array(
              0 => 'cost_data_id',
              1 => 'master_cost_data_prime_cost_sum_item_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CostData', array(
             'local' => 'cost_data_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MasterCostDataPrimeCostSumItem', array(
             'local' => 'master_cost_data_prime_cost_sum_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}