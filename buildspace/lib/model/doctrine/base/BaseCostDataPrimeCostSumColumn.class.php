<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CostDataPrimeCostSumColumn', 'main_conn');

/**
 * BaseCostDataPrimeCostSumColumn
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $master_cost_data_prime_cost_sum_item_id
 * @property integer $cost_data_prime_cost_sum_column_definition_id
 * @property decimal $amount
 * @property decimal $conversion_factor
 * @property MasterCostDataPrimeCostSumItem $MasterCostDataPrimeCostSumItem
 * @property CostDataPrimeCostSumColumnDefinition $CostDataPrimeCostSumColumnDefinition
 * @property Doctrine_Collection $BillItemCostDataPrimeCostSumColumn
 * 
 * @method integer                              getId()                                            Returns the current record's "id" value
 * @method integer                              getMasterCostDataPrimeCostSumItemId()              Returns the current record's "master_cost_data_prime_cost_sum_item_id" value
 * @method integer                              getCostDataPrimeCostSumColumnDefinitionId()        Returns the current record's "cost_data_prime_cost_sum_column_definition_id" value
 * @method decimal                              getAmount()                                        Returns the current record's "amount" value
 * @method decimal                              getConversionFactor()                              Returns the current record's "conversion_factor" value
 * @method MasterCostDataPrimeCostSumItem       getMasterCostDataPrimeCostSumItem()                Returns the current record's "MasterCostDataPrimeCostSumItem" value
 * @method CostDataPrimeCostSumColumnDefinition getCostDataPrimeCostSumColumnDefinition()          Returns the current record's "CostDataPrimeCostSumColumnDefinition" value
 * @method Doctrine_Collection                  getBillItemCostDataPrimeCostSumColumn()            Returns the current record's "BillItemCostDataPrimeCostSumColumn" collection
 * @method CostDataPrimeCostSumColumn           setId()                                            Sets the current record's "id" value
 * @method CostDataPrimeCostSumColumn           setMasterCostDataPrimeCostSumItemId()              Sets the current record's "master_cost_data_prime_cost_sum_item_id" value
 * @method CostDataPrimeCostSumColumn           setCostDataPrimeCostSumColumnDefinitionId()        Sets the current record's "cost_data_prime_cost_sum_column_definition_id" value
 * @method CostDataPrimeCostSumColumn           setAmount()                                        Sets the current record's "amount" value
 * @method CostDataPrimeCostSumColumn           setConversionFactor()                              Sets the current record's "conversion_factor" value
 * @method CostDataPrimeCostSumColumn           setMasterCostDataPrimeCostSumItem()                Sets the current record's "MasterCostDataPrimeCostSumItem" value
 * @method CostDataPrimeCostSumColumn           setCostDataPrimeCostSumColumnDefinition()          Sets the current record's "CostDataPrimeCostSumColumnDefinition" value
 * @method CostDataPrimeCostSumColumn           setBillItemCostDataPrimeCostSumColumn()            Sets the current record's "BillItemCostDataPrimeCostSumColumn" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostDataPrimeCostSumColumn extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_data_prime_cost_sum_columns');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('master_cost_data_prime_cost_sum_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('cost_data_prime_cost_sum_column_definition_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('conversion_factor', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 1,
             ));


        $this->index('cost_data_prime_cost_sum_column_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('cost_data_prime_cost_sum_column_unique_idx', array(
             'fields' => 
             array(
              0 => 'master_cost_data_prime_cost_sum_item_id',
              1 => 'cost_data_prime_cost_sum_column_definition_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MasterCostDataPrimeCostSumItem', array(
             'local' => 'master_cost_data_prime_cost_sum_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('CostDataPrimeCostSumColumnDefinition', array(
             'local' => 'cost_data_prime_cost_sum_column_definition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillItemCostDataPrimeCostSumColumn', array(
             'local' => 'id',
             'foreign' => 'cost_data_prime_cost_sum_column_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}