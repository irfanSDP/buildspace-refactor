<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectRevision', 'main_conn');

/**
 * BaseProjectRevision
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_structure_id
 * @property varchar $revision
 * @property integer $version
 * @property boolean $current_selected_revision
 * @property boolean $locked_status
 * @property string $tender_origin_id
 * @property ProjectStructure $ProjectStructure
 * @property Doctrine_Collection $BillItem
 * @property Doctrine_Collection $BillItemRateLogs
 * @property Doctrine_Collection $EditorProjectInfo
 * @property Doctrine_Collection $UnlockClaimSubmissionLogs
 * @property Doctrine_Collection $RevisionCollectionPages
 * @property Doctrine_Collection $OldRevisionBillPages
 * @property Doctrine_Collection $NewRevisionBillPages
 * @property Doctrine_Collection $TenderAlternatives
 * @property Doctrine_Collection $TenderCompanyRateLogs
 * 
 * @method integer             getProjectStructureId()        Returns the current record's "project_structure_id" value
 * @method varchar             getRevision()                  Returns the current record's "revision" value
 * @method integer             getVersion()                   Returns the current record's "version" value
 * @method boolean             getCurrentSelectedRevision()   Returns the current record's "current_selected_revision" value
 * @method boolean             getLockedStatus()              Returns the current record's "locked_status" value
 * @method string              getTenderOriginId()            Returns the current record's "tender_origin_id" value
 * @method ProjectStructure    getProjectStructure()          Returns the current record's "ProjectStructure" value
 * @method Doctrine_Collection getBillItem()                  Returns the current record's "BillItem" collection
 * @method Doctrine_Collection getBillItemRateLogs()          Returns the current record's "BillItemRateLogs" collection
 * @method Doctrine_Collection getEditorProjectInfo()         Returns the current record's "EditorProjectInfo" collection
 * @method Doctrine_Collection getUnlockClaimSubmissionLogs() Returns the current record's "UnlockClaimSubmissionLogs" collection
 * @method Doctrine_Collection getRevisionCollectionPages()   Returns the current record's "RevisionCollectionPages" collection
 * @method Doctrine_Collection getOldRevisionBillPages()      Returns the current record's "OldRevisionBillPages" collection
 * @method Doctrine_Collection getNewRevisionBillPages()      Returns the current record's "NewRevisionBillPages" collection
 * @method Doctrine_Collection getTenderAlternatives()        Returns the current record's "TenderAlternatives" collection
 * @method Doctrine_Collection getTenderCompanyRateLogs()     Returns the current record's "TenderCompanyRateLogs" collection
 * @method ProjectRevision     setProjectStructureId()        Sets the current record's "project_structure_id" value
 * @method ProjectRevision     setRevision()                  Sets the current record's "revision" value
 * @method ProjectRevision     setVersion()                   Sets the current record's "version" value
 * @method ProjectRevision     setCurrentSelectedRevision()   Sets the current record's "current_selected_revision" value
 * @method ProjectRevision     setLockedStatus()              Sets the current record's "locked_status" value
 * @method ProjectRevision     setTenderOriginId()            Sets the current record's "tender_origin_id" value
 * @method ProjectRevision     setProjectStructure()          Sets the current record's "ProjectStructure" value
 * @method ProjectRevision     setBillItem()                  Sets the current record's "BillItem" collection
 * @method ProjectRevision     setBillItemRateLogs()          Sets the current record's "BillItemRateLogs" collection
 * @method ProjectRevision     setEditorProjectInfo()         Sets the current record's "EditorProjectInfo" collection
 * @method ProjectRevision     setUnlockClaimSubmissionLogs() Sets the current record's "UnlockClaimSubmissionLogs" collection
 * @method ProjectRevision     setRevisionCollectionPages()   Sets the current record's "RevisionCollectionPages" collection
 * @method ProjectRevision     setOldRevisionBillPages()      Sets the current record's "OldRevisionBillPages" collection
 * @method ProjectRevision     setNewRevisionBillPages()      Sets the current record's "NewRevisionBillPages" collection
 * @method ProjectRevision     setTenderAlternatives()        Sets the current record's "TenderAlternatives" collection
 * @method ProjectRevision     setTenderCompanyRateLogs()     Sets the current record's "TenderCompanyRateLogs" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectRevision extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_revisions');
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('revision', 'varchar', 100, array(
             'type' => 'varchar',
             'default' => 'Original Bill',
             'length' => 100,
             ));
        $this->hasColumn('version', 'integer', 2, array(
             'type' => 'integer',
             'default' => 0,
             'unsigned' => true,
             'length' => 2,
             ));
        $this->hasColumn('current_selected_revision', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('locked_status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('tender_origin_id', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));


        $this->index('project_revision_version_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'version',
              2 => 'current_selected_revision',
             ),
             'type' => 'unique',
             ));
        $this->option('orderBy', 'id');
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillItem', array(
             'local' => 'id',
             'foreign' => 'project_revision_id'));

        $this->hasMany('BillItemRateLog as BillItemRateLogs', array(
             'local' => 'id',
             'foreign' => 'project_revision_id'));

        $this->hasMany('EditorProjectInformation as EditorProjectInfo', array(
             'local' => 'id',
             'foreign' => 'printing_revision_id'));

        $this->hasMany('UnlockClaimSubmissionLog as UnlockClaimSubmissionLogs', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('BillCollectionPage as RevisionCollectionPages', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('BillPage as OldRevisionBillPages', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('BillPage as NewRevisionBillPages', array(
             'local' => 'id',
             'foreign' => 'new_revision_id'));

        $this->hasMany('TenderAlternative as TenderAlternatives', array(
             'local' => 'id',
             'foreign' => 'project_revision_id'));

        $this->hasMany('TenderBillItemRateLog as TenderCompanyRateLogs', array(
             'local' => 'id',
             'foreign' => 'project_revision_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($signable0);
    }
}