<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ResourceTrade', 'main_conn');

/**
 * BaseResourceTrade
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property integer $resource_id
 * @property integer $priority
 * @property Resource $Resource
 * @property Doctrine_Collection $BillBuildUpRateResourceTrades
 * @property Doctrine_Collection $BQLibraryBuildUpRateItems
 * @property Doctrine_Collection $Items
 * @property Doctrine_Collection $ScheduleOfRateBuildUpRateItems
 * 
 * @method integer             getId()                             Returns the current record's "id" value
 * @method string              getDescription()                    Returns the current record's "description" value
 * @method integer             getResourceId()                     Returns the current record's "resource_id" value
 * @method integer             getPriority()                       Returns the current record's "priority" value
 * @method Resource            getResource()                       Returns the current record's "Resource" value
 * @method Doctrine_Collection getBillBuildUpRateResourceTrades()  Returns the current record's "BillBuildUpRateResourceTrades" collection
 * @method Doctrine_Collection getBQLibraryBuildUpRateItems()      Returns the current record's "BQLibraryBuildUpRateItems" collection
 * @method Doctrine_Collection getItems()                          Returns the current record's "Items" collection
 * @method Doctrine_Collection getScheduleOfRateBuildUpRateItems() Returns the current record's "ScheduleOfRateBuildUpRateItems" collection
 * @method ResourceTrade       setId()                             Sets the current record's "id" value
 * @method ResourceTrade       setDescription()                    Sets the current record's "description" value
 * @method ResourceTrade       setResourceId()                     Sets the current record's "resource_id" value
 * @method ResourceTrade       setPriority()                       Sets the current record's "priority" value
 * @method ResourceTrade       setResource()                       Sets the current record's "Resource" value
 * @method ResourceTrade       setBillBuildUpRateResourceTrades()  Sets the current record's "BillBuildUpRateResourceTrades" collection
 * @method ResourceTrade       setBQLibraryBuildUpRateItems()      Sets the current record's "BQLibraryBuildUpRateItems" collection
 * @method ResourceTrade       setItems()                          Sets the current record's "Items" collection
 * @method ResourceTrade       setScheduleOfRateBuildUpRateItems() Sets the current record's "ScheduleOfRateBuildUpRateItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseResourceTrade extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('resource_trades');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('resource_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('resource_trade_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'resource_id',
             ),
             ));
        $this->index('resource_trade_priority_unique_idx', array(
             'fields' => 
             array(
              0 => 'priority',
              1 => 'resource_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Resource', array(
             'local' => 'resource_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillBuildUpRateResourceTrade as BillBuildUpRateResourceTrades', array(
             'local' => 'id',
             'foreign' => 'resource_trade_library_id'));

        $this->hasMany('BQLibraryBuildUpRateItem as BQLibraryBuildUpRateItems', array(
             'local' => 'id',
             'foreign' => 'resource_trade_library_id'));

        $this->hasMany('ResourceItem as Items', array(
             'local' => 'id',
             'foreign' => 'resource_trade_id'));

        $this->hasMany('ScheduleOfRateBuildUpRateItem as ScheduleOfRateBuildUpRateItems', array(
             'local' => 'id',
             'foreign' => 'resource_trade_library_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}