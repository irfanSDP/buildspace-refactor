<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CostDataItem', 'main_conn');

/**
 * BaseCostDataItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cost_data_id
 * @property integer $master_cost_data_item_id
 * @property boolean $show
 * @property decimal $approved_cost
 * @property decimal $awarded_cost
 * @property decimal $conversion_factor
 * @property string $remarks
 * @property decimal $variation_order_cost
 * @property CostData $CostData
 * @property MasterCostDataItem $MasterCostDataItem
 * @property Doctrine_Collection $BillItemCostDataItem
 * @property Doctrine_Collection $VariationOrderItemCostDataItem
 * @property Doctrine_Collection $BillItemCostDataPrimeCostSumItem
 * 
 * @method integer             getId()                               Returns the current record's "id" value
 * @method integer             getCostDataId()                       Returns the current record's "cost_data_id" value
 * @method integer             getMasterCostDataItemId()             Returns the current record's "master_cost_data_item_id" value
 * @method boolean             getShow()                             Returns the current record's "show" value
 * @method decimal             getApprovedCost()                     Returns the current record's "approved_cost" value
 * @method decimal             getAwardedCost()                      Returns the current record's "awarded_cost" value
 * @method decimal             getConversionFactor()                 Returns the current record's "conversion_factor" value
 * @method string              getRemarks()                          Returns the current record's "remarks" value
 * @method decimal             getVariationOrderCost()               Returns the current record's "variation_order_cost" value
 * @method CostData            getCostData()                         Returns the current record's "CostData" value
 * @method MasterCostDataItem  getMasterCostDataItem()               Returns the current record's "MasterCostDataItem" value
 * @method Doctrine_Collection getBillItemCostDataItem()             Returns the current record's "BillItemCostDataItem" collection
 * @method Doctrine_Collection getVariationOrderItemCostDataItem()   Returns the current record's "VariationOrderItemCostDataItem" collection
 * @method Doctrine_Collection getBillItemCostDataPrimeCostSumItem() Returns the current record's "BillItemCostDataPrimeCostSumItem" collection
 * @method CostDataItem        setId()                               Sets the current record's "id" value
 * @method CostDataItem        setCostDataId()                       Sets the current record's "cost_data_id" value
 * @method CostDataItem        setMasterCostDataItemId()             Sets the current record's "master_cost_data_item_id" value
 * @method CostDataItem        setShow()                             Sets the current record's "show" value
 * @method CostDataItem        setApprovedCost()                     Sets the current record's "approved_cost" value
 * @method CostDataItem        setAwardedCost()                      Sets the current record's "awarded_cost" value
 * @method CostDataItem        setConversionFactor()                 Sets the current record's "conversion_factor" value
 * @method CostDataItem        setRemarks()                          Sets the current record's "remarks" value
 * @method CostDataItem        setVariationOrderCost()               Sets the current record's "variation_order_cost" value
 * @method CostDataItem        setCostData()                         Sets the current record's "CostData" value
 * @method CostDataItem        setMasterCostDataItem()               Sets the current record's "MasterCostDataItem" value
 * @method CostDataItem        setBillItemCostDataItem()             Sets the current record's "BillItemCostDataItem" collection
 * @method CostDataItem        setVariationOrderItemCostDataItem()   Sets the current record's "VariationOrderItemCostDataItem" collection
 * @method CostDataItem        setBillItemCostDataPrimeCostSumItem() Sets the current record's "BillItemCostDataPrimeCostSumItem" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostDataItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_data_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('cost_data_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('master_cost_data_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('show', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('approved_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('awarded_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('conversion_factor', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 1,
             ));
        $this->hasColumn('remarks', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('variation_order_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('cost_data_item_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('cost_data_item_fk_idx', array(
             'fields' => 
             array(
              0 => 'cost_data_id',
              1 => 'master_cost_data_item_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CostData', array(
             'local' => 'cost_data_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MasterCostDataItem', array(
             'local' => 'master_cost_data_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillItemCostDataItem', array(
             'local' => 'id',
             'foreign' => 'cost_data_item_id'));

        $this->hasMany('VariationOrderItemCostDataItem', array(
             'local' => 'id',
             'foreign' => 'cost_data_item_id'));

        $this->hasMany('BillItemCostDataPrimeCostSumItem', array(
             'local' => 'id',
             'foreign' => 'cost_data_prime_cost_sum_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}