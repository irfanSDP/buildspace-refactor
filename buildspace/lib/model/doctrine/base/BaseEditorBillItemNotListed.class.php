<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EditorBillItemNotListed', 'main_conn');

/**
 * BaseEditorBillItemNotListed
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $company_id
 * @property integer $bill_item_id
 * @property string $description
 * @property integer $uom_id
 * @property Company $Company
 * @property BillItem $BillItem
 * @property UnitOfMeasurement $UnitOfMeasurement
 * 
 * @method integer                 getId()                Returns the current record's "id" value
 * @method integer                 getCompanyId()         Returns the current record's "company_id" value
 * @method integer                 getBillItemId()        Returns the current record's "bill_item_id" value
 * @method string                  getDescription()       Returns the current record's "description" value
 * @method integer                 getUomId()             Returns the current record's "uom_id" value
 * @method Company                 getCompany()           Returns the current record's "Company" value
 * @method BillItem                getBillItem()          Returns the current record's "BillItem" value
 * @method UnitOfMeasurement       getUnitOfMeasurement() Returns the current record's "UnitOfMeasurement" value
 * @method EditorBillItemNotListed setId()                Sets the current record's "id" value
 * @method EditorBillItemNotListed setCompanyId()         Sets the current record's "company_id" value
 * @method EditorBillItemNotListed setBillItemId()        Sets the current record's "bill_item_id" value
 * @method EditorBillItemNotListed setDescription()       Sets the current record's "description" value
 * @method EditorBillItemNotListed setUomId()             Sets the current record's "uom_id" value
 * @method EditorBillItemNotListed setCompany()           Sets the current record's "Company" value
 * @method EditorBillItemNotListed setBillItem()          Sets the current record's "BillItem" value
 * @method EditorBillItemNotListed setUnitOfMeasurement() Sets the current record's "UnitOfMeasurement" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEditorBillItemNotListed extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('editor_bill_item_not_listed');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bill_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('editor_bill_item_not_listed_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('editor_bill_item_not_listed_fk_idx', array(
             'fields' => 
             array(
              0 => 'company_id',
              1 => 'bill_item_id',
             ),
             ));
        $this->index('editor_bill_item_not_listed_unique_idx', array(
             'fields' => 
             array(
              0 => 'company_id',
              1 => 'bill_item_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillItem', array(
             'local' => 'bill_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}