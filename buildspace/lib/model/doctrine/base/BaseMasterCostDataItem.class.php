<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MasterCostDataItem', 'main_conn');

/**
 * BaseMasterCostDataItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $master_cost_data_id
 * @property integer $parent_id
 * @property string $description
 * @property integer $priority
 * @property integer $level
 * @property MasterCostData $MasterCostData
 * @property MasterCostDataItem $Parent
 * @property Doctrine_Collection $CostDataItem
 * @property Doctrine_Collection $Children
 * @property Doctrine_Collection $Column
 * @property Doctrine_Collection $MasterCostDataParticularMasterCostDataItem
 * @property Doctrine_Collection $MasterCostDataItemParticular
 * 
 * @method integer             getId()                                         Returns the current record's "id" value
 * @method integer             getMasterCostDataId()                           Returns the current record's "master_cost_data_id" value
 * @method integer             getParentId()                                   Returns the current record's "parent_id" value
 * @method string              getDescription()                                Returns the current record's "description" value
 * @method integer             getPriority()                                   Returns the current record's "priority" value
 * @method integer             getLevel()                                      Returns the current record's "level" value
 * @method MasterCostData      getMasterCostData()                             Returns the current record's "MasterCostData" value
 * @method MasterCostDataItem  getParent()                                     Returns the current record's "Parent" value
 * @method Doctrine_Collection getCostDataItem()                               Returns the current record's "CostDataItem" collection
 * @method Doctrine_Collection getChildren()                                   Returns the current record's "Children" collection
 * @method Doctrine_Collection getColumn()                                     Returns the current record's "Column" collection
 * @method Doctrine_Collection getMasterCostDataParticularMasterCostDataItem() Returns the current record's "MasterCostDataParticularMasterCostDataItem" collection
 * @method Doctrine_Collection getMasterCostDataItemParticular()               Returns the current record's "MasterCostDataItemParticular" collection
 * @method MasterCostDataItem  setId()                                         Sets the current record's "id" value
 * @method MasterCostDataItem  setMasterCostDataId()                           Sets the current record's "master_cost_data_id" value
 * @method MasterCostDataItem  setParentId()                                   Sets the current record's "parent_id" value
 * @method MasterCostDataItem  setDescription()                                Sets the current record's "description" value
 * @method MasterCostDataItem  setPriority()                                   Sets the current record's "priority" value
 * @method MasterCostDataItem  setLevel()                                      Sets the current record's "level" value
 * @method MasterCostDataItem  setMasterCostData()                             Sets the current record's "MasterCostData" value
 * @method MasterCostDataItem  setParent()                                     Sets the current record's "Parent" value
 * @method MasterCostDataItem  setCostDataItem()                               Sets the current record's "CostDataItem" collection
 * @method MasterCostDataItem  setChildren()                                   Sets the current record's "Children" collection
 * @method MasterCostDataItem  setColumn()                                     Sets the current record's "Column" collection
 * @method MasterCostDataItem  setMasterCostDataParticularMasterCostDataItem() Sets the current record's "MasterCostDataParticularMasterCostDataItem" collection
 * @method MasterCostDataItem  setMasterCostDataItemParticular()               Sets the current record's "MasterCostDataItemParticular" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMasterCostDataItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('master_cost_data_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('master_cost_data_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('level', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('master_cost_data_item_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('master_cost_data_item_idx', array(
             'fields' => 
             array(
              0 => 'master_cost_data_id',
              1 => 'parent_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MasterCostData', array(
             'local' => 'master_cost_data_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MasterCostDataItem as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CostDataItem', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_item_id'));

        $this->hasMany('MasterCostDataItem as Children', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasMany('MasterCostDataItemColumn as Column', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_item_id'));

        $this->hasMany('MasterCostDataParticularMasterCostDataItem', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_item_id'));

        $this->hasMany('MasterCostDataItemParticular', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}