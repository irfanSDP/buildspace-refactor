<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SubPackageMaterialOnSiteItem', 'main_conn');

/**
 * BaseSubPackageMaterialOnSiteItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $sp_material_on_site_id
 * @property integer $import_resource_item_id
 * @property string $description
 * @property integer $type
 * @property integer $uom_id
 * @property decimal $delivered_qty
 * @property decimal $used_qty
 * @property decimal $balance_qty
 * @property decimal $rate
 * @property decimal $amount
 * @property integer $priority
 * @property SubPackageMaterialOnSite $SubPackageMaterialOnSite
 * @property UnitOfMeasurement $UnitOfMeasurement
 * 
 * @method integer                      getSpMaterialOnSiteId()       Returns the current record's "sp_material_on_site_id" value
 * @method integer                      getImportResourceItemId()     Returns the current record's "import_resource_item_id" value
 * @method string                       getDescription()              Returns the current record's "description" value
 * @method integer                      getType()                     Returns the current record's "type" value
 * @method integer                      getUomId()                    Returns the current record's "uom_id" value
 * @method decimal                      getDeliveredQty()             Returns the current record's "delivered_qty" value
 * @method decimal                      getUsedQty()                  Returns the current record's "used_qty" value
 * @method decimal                      getBalanceQty()               Returns the current record's "balance_qty" value
 * @method decimal                      getRate()                     Returns the current record's "rate" value
 * @method decimal                      getAmount()                   Returns the current record's "amount" value
 * @method integer                      getPriority()                 Returns the current record's "priority" value
 * @method SubPackageMaterialOnSite     getSubPackageMaterialOnSite() Returns the current record's "SubPackageMaterialOnSite" value
 * @method UnitOfMeasurement            getUnitOfMeasurement()        Returns the current record's "UnitOfMeasurement" value
 * @method SubPackageMaterialOnSiteItem setSpMaterialOnSiteId()       Sets the current record's "sp_material_on_site_id" value
 * @method SubPackageMaterialOnSiteItem setImportResourceItemId()     Sets the current record's "import_resource_item_id" value
 * @method SubPackageMaterialOnSiteItem setDescription()              Sets the current record's "description" value
 * @method SubPackageMaterialOnSiteItem setType()                     Sets the current record's "type" value
 * @method SubPackageMaterialOnSiteItem setUomId()                    Sets the current record's "uom_id" value
 * @method SubPackageMaterialOnSiteItem setDeliveredQty()             Sets the current record's "delivered_qty" value
 * @method SubPackageMaterialOnSiteItem setUsedQty()                  Sets the current record's "used_qty" value
 * @method SubPackageMaterialOnSiteItem setBalanceQty()               Sets the current record's "balance_qty" value
 * @method SubPackageMaterialOnSiteItem setRate()                     Sets the current record's "rate" value
 * @method SubPackageMaterialOnSiteItem setAmount()                   Sets the current record's "amount" value
 * @method SubPackageMaterialOnSiteItem setPriority()                 Sets the current record's "priority" value
 * @method SubPackageMaterialOnSiteItem setSubPackageMaterialOnSite() Sets the current record's "SubPackageMaterialOnSite" value
 * @method SubPackageMaterialOnSiteItem setUnitOfMeasurement()        Sets the current record's "UnitOfMeasurement" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubPackageMaterialOnSiteItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sp_material_on_site_items');
        $this->hasColumn('sp_material_on_site_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('import_resource_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('delivered_qty', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('used_qty', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('balance_qty', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('sp_mos_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'root_id',
              2 => 'lft',
              3 => 'rgt',
             ),
             ));
        $this->index('sp_mos_items_type_idx', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('sp_mos_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'sp_material_on_site_id',
              1 => 'root_id',
              2 => 'uom_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SubPackageMaterialOnSite', array(
             'local' => 'sp_material_on_site_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'levelColumnName' => 'level',
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}