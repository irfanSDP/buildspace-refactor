<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UnitOfMeasurement', 'main_conn');

/**
 * BaseUnitOfMeasurement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property varchar $symbol
 * @property boolean $display
 * @property integer $type
 * @property Doctrine_Collection $Dimensions
 * @property UnitOfMeasurementType $UnitOfMeasurementType
 * @property Doctrine_Collection $BillBuilUpRateItems
 * @property Doctrine_Collection $BillBuilUpRateSummaries
 * @property Doctrine_Collection $BillItems
 * @property Doctrine_Collection $BQItems
 * @property Doctrine_Collection $BQLibraryBuilUpRateItems
 * @property Doctrine_Collection $BQLibraryBuilUpRateSummaries
 * @property Doctrine_Collection $EditorBillItemNotListed
 * @property Doctrine_Collection $MasterCostDataItems
 * @property Doctrine_Collection $MasterCostDataPrimeCostRate
 * @property Doctrine_Collection $MaterialOnSiteItems
 * @property Doctrine_Collection $PostContractClaimItems
 * @property Doctrine_Collection $ResourceItems
 * @property Doctrine_Collection $ScheduleOfQuantityItems
 * @property Doctrine_Collection $ScheduleOfRateItems
 * @property Doctrine_Collection $ScheduleOfRateBuilUpRateItems
 * @property Doctrine_Collection $ScheduleOfRateBuilUpRateSummaries
 * @property Doctrine_Collection $ScheduleOfRateBillItems
 * @property Doctrine_Collection $UnitOfMeasurementDimensions
 * @property Doctrine_Collection $SubPackageMaterialOnSiteItems
 * @property Doctrine_Collection $SupplyOfMaterialItems
 * @property Doctrine_Collection $VariationOrderItems
 * @property Doctrine_Collection $SubPackageVariationOrderItems
 * 
 * @method integer               getId()                                Returns the current record's "id" value
 * @method string                getName()                              Returns the current record's "name" value
 * @method varchar               getSymbol()                            Returns the current record's "symbol" value
 * @method boolean               getDisplay()                           Returns the current record's "display" value
 * @method integer               getType()                              Returns the current record's "type" value
 * @method Doctrine_Collection   getDimensions()                        Returns the current record's "Dimensions" collection
 * @method UnitOfMeasurementType getUnitOfMeasurementType()             Returns the current record's "UnitOfMeasurementType" value
 * @method Doctrine_Collection   getBillBuilUpRateItems()               Returns the current record's "BillBuilUpRateItems" collection
 * @method Doctrine_Collection   getBillBuilUpRateSummaries()           Returns the current record's "BillBuilUpRateSummaries" collection
 * @method Doctrine_Collection   getBillItems()                         Returns the current record's "BillItems" collection
 * @method Doctrine_Collection   getBQItems()                           Returns the current record's "BQItems" collection
 * @method Doctrine_Collection   getBQLibraryBuilUpRateItems()          Returns the current record's "BQLibraryBuilUpRateItems" collection
 * @method Doctrine_Collection   getBQLibraryBuilUpRateSummaries()      Returns the current record's "BQLibraryBuilUpRateSummaries" collection
 * @method Doctrine_Collection   getEditorBillItemNotListed()           Returns the current record's "EditorBillItemNotListed" collection
 * @method Doctrine_Collection   getMasterCostDataItems()               Returns the current record's "MasterCostDataItems" collection
 * @method Doctrine_Collection   getMasterCostDataPrimeCostRate()       Returns the current record's "MasterCostDataPrimeCostRate" collection
 * @method Doctrine_Collection   getMaterialOnSiteItems()               Returns the current record's "MaterialOnSiteItems" collection
 * @method Doctrine_Collection   getPostContractClaimItems()            Returns the current record's "PostContractClaimItems" collection
 * @method Doctrine_Collection   getResourceItems()                     Returns the current record's "ResourceItems" collection
 * @method Doctrine_Collection   getScheduleOfQuantityItems()           Returns the current record's "ScheduleOfQuantityItems" collection
 * @method Doctrine_Collection   getScheduleOfRateItems()               Returns the current record's "ScheduleOfRateItems" collection
 * @method Doctrine_Collection   getScheduleOfRateBuilUpRateItems()     Returns the current record's "ScheduleOfRateBuilUpRateItems" collection
 * @method Doctrine_Collection   getScheduleOfRateBuilUpRateSummaries() Returns the current record's "ScheduleOfRateBuilUpRateSummaries" collection
 * @method Doctrine_Collection   getScheduleOfRateBillItems()           Returns the current record's "ScheduleOfRateBillItems" collection
 * @method Doctrine_Collection   getUnitOfMeasurementDimensions()       Returns the current record's "UnitOfMeasurementDimensions" collection
 * @method Doctrine_Collection   getSubPackageMaterialOnSiteItems()     Returns the current record's "SubPackageMaterialOnSiteItems" collection
 * @method Doctrine_Collection   getSupplyOfMaterialItems()             Returns the current record's "SupplyOfMaterialItems" collection
 * @method Doctrine_Collection   getVariationOrderItems()               Returns the current record's "VariationOrderItems" collection
 * @method Doctrine_Collection   getSubPackageVariationOrderItems()     Returns the current record's "SubPackageVariationOrderItems" collection
 * @method UnitOfMeasurement     setId()                                Sets the current record's "id" value
 * @method UnitOfMeasurement     setName()                              Sets the current record's "name" value
 * @method UnitOfMeasurement     setSymbol()                            Sets the current record's "symbol" value
 * @method UnitOfMeasurement     setDisplay()                           Sets the current record's "display" value
 * @method UnitOfMeasurement     setType()                              Sets the current record's "type" value
 * @method UnitOfMeasurement     setDimensions()                        Sets the current record's "Dimensions" collection
 * @method UnitOfMeasurement     setUnitOfMeasurementType()             Sets the current record's "UnitOfMeasurementType" value
 * @method UnitOfMeasurement     setBillBuilUpRateItems()               Sets the current record's "BillBuilUpRateItems" collection
 * @method UnitOfMeasurement     setBillBuilUpRateSummaries()           Sets the current record's "BillBuilUpRateSummaries" collection
 * @method UnitOfMeasurement     setBillItems()                         Sets the current record's "BillItems" collection
 * @method UnitOfMeasurement     setBQItems()                           Sets the current record's "BQItems" collection
 * @method UnitOfMeasurement     setBQLibraryBuilUpRateItems()          Sets the current record's "BQLibraryBuilUpRateItems" collection
 * @method UnitOfMeasurement     setBQLibraryBuilUpRateSummaries()      Sets the current record's "BQLibraryBuilUpRateSummaries" collection
 * @method UnitOfMeasurement     setEditorBillItemNotListed()           Sets the current record's "EditorBillItemNotListed" collection
 * @method UnitOfMeasurement     setMasterCostDataItems()               Sets the current record's "MasterCostDataItems" collection
 * @method UnitOfMeasurement     setMasterCostDataPrimeCostRate()       Sets the current record's "MasterCostDataPrimeCostRate" collection
 * @method UnitOfMeasurement     setMaterialOnSiteItems()               Sets the current record's "MaterialOnSiteItems" collection
 * @method UnitOfMeasurement     setPostContractClaimItems()            Sets the current record's "PostContractClaimItems" collection
 * @method UnitOfMeasurement     setResourceItems()                     Sets the current record's "ResourceItems" collection
 * @method UnitOfMeasurement     setScheduleOfQuantityItems()           Sets the current record's "ScheduleOfQuantityItems" collection
 * @method UnitOfMeasurement     setScheduleOfRateItems()               Sets the current record's "ScheduleOfRateItems" collection
 * @method UnitOfMeasurement     setScheduleOfRateBuilUpRateItems()     Sets the current record's "ScheduleOfRateBuilUpRateItems" collection
 * @method UnitOfMeasurement     setScheduleOfRateBuilUpRateSummaries() Sets the current record's "ScheduleOfRateBuilUpRateSummaries" collection
 * @method UnitOfMeasurement     setScheduleOfRateBillItems()           Sets the current record's "ScheduleOfRateBillItems" collection
 * @method UnitOfMeasurement     setUnitOfMeasurementDimensions()       Sets the current record's "UnitOfMeasurementDimensions" collection
 * @method UnitOfMeasurement     setSubPackageMaterialOnSiteItems()     Sets the current record's "SubPackageMaterialOnSiteItems" collection
 * @method UnitOfMeasurement     setSupplyOfMaterialItems()             Sets the current record's "SupplyOfMaterialItems" collection
 * @method UnitOfMeasurement     setVariationOrderItems()               Sets the current record's "VariationOrderItems" collection
 * @method UnitOfMeasurement     setSubPackageVariationOrderItems()     Sets the current record's "SubPackageVariationOrderItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUnitOfMeasurement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('unit_of_measurements');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('symbol', 'varchar', 10, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('display', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('type', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('uom_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('uom_sym_unique_idx', array(
             'fields' => 
             array(
              0 => 'symbol',
              1 => 'type',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Dimension as Dimensions', array(
             'refClass' => 'UnitOfMeasurementDimensions',
             'local' => 'unit_of_measurement_id',
             'foreign' => 'dimension_id'));

        $this->hasOne('UnitOfMeasurementType', array(
             'local' => 'type',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillBuildUpRateItem as BillBuilUpRateItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('BillBuildUpRateSummary as BillBuilUpRateSummaries', array(
             'local' => 'id',
             'foreign' => 'conversion_factor_uom_id'));

        $this->hasMany('BillItem as BillItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('BQItem as BQItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('BQLibraryBuildUpRateItem as BQLibraryBuilUpRateItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('BQLibraryBuildUpRateSummary as BQLibraryBuilUpRateSummaries', array(
             'local' => 'id',
             'foreign' => 'conversion_factor_uom_id'));

        $this->hasMany('EditorBillItemNotListed', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('MasterCostDataParticular as MasterCostDataItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('MasterCostDataPrimeCostRate', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('MaterialOnSiteItem as MaterialOnSiteItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('PostContractClaimItem as PostContractClaimItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('ResourceItem as ResourceItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('ScheduleOfQuantityItem as ScheduleOfQuantityItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('ScheduleOfRateItem as ScheduleOfRateItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('ScheduleOfRateBuildUpRateItem as ScheduleOfRateBuilUpRateItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('ScheduleOfRateBuildUpRateSummary as ScheduleOfRateBuilUpRateSummaries', array(
             'local' => 'id',
             'foreign' => 'conversion_factor_uom_id'));

        $this->hasMany('ScheduleOfRateBillItem as ScheduleOfRateBillItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('UnitOfMeasurementDimensions', array(
             'local' => 'id',
             'foreign' => 'unit_of_measurement_id'));

        $this->hasMany('SubPackageMaterialOnSiteItem as SubPackageMaterialOnSiteItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('SupplyOfMaterialItem as SupplyOfMaterialItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('VariationOrderItem as VariationOrderItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $this->hasMany('SubPackageVariationOrderItem as SubPackageVariationOrderItems', array(
             'local' => 'id',
             'foreign' => 'uom_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}