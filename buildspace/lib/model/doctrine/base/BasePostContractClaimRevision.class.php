<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContractClaimRevision', 'main_conn');

/**
 * BasePostContractClaimRevision
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_contract_id
 * @property integer $version
 * @property boolean $current_selected_revision
 * @property boolean $locked_status
 * @property boolean $claim_submission_locked
 * @property PostContract $PostContract
 * @property Doctrine_Collection $PostContractStandardClaims
 * @property Doctrine_Collection $PostContractPreliminaryClaims
 * @property Doctrine_Collection $ImportedVariationOrders
 * @property Doctrine_Collection $ImportedMaterialsOnSite
 * @property Doctrine_Collection $ClaimImportLogs
 * @property Doctrine_Collection $LocationProgressClaims
 * @property ClaimCertificate $ClaimCertificate
 * @property PreliminariesClaim $PreliminariesClaim
 * @property PreliminariesInitialClaim $PreliminariesInitialClaimRate
 * @property PreliminariesTimeBasedClaim $PreliminariesTimeBasedClaimRate
 * @property PreliminariesWorkBasedClaim $PreliminariesWorkBasedClaimRate
 * @property PreliminariesFinalClaim $PreliminariesFinalClaimRate
 * @property Doctrine_Collection $SubProjectLatestApprovedClaimRevision
 * @property SubProjectLatestApprovedClaimRevision $MainProjectLatestApprovedClaimRevision
 * 
 * @method integer                               getPostContractId()                         Returns the current record's "post_contract_id" value
 * @method integer                               getVersion()                                Returns the current record's "version" value
 * @method boolean                               getCurrentSelectedRevision()                Returns the current record's "current_selected_revision" value
 * @method boolean                               getLockedStatus()                           Returns the current record's "locked_status" value
 * @method boolean                               getClaimSubmissionLocked()                  Returns the current record's "claim_submission_locked" value
 * @method PostContract                          getPostContract()                           Returns the current record's "PostContract" value
 * @method Doctrine_Collection                   getPostContractStandardClaims()             Returns the current record's "PostContractStandardClaims" collection
 * @method Doctrine_Collection                   getPostContractPreliminaryClaims()          Returns the current record's "PostContractPreliminaryClaims" collection
 * @method Doctrine_Collection                   getImportedVariationOrders()                Returns the current record's "ImportedVariationOrders" collection
 * @method Doctrine_Collection                   getImportedMaterialsOnSite()                Returns the current record's "ImportedMaterialsOnSite" collection
 * @method Doctrine_Collection                   getClaimImportLogs()                        Returns the current record's "ClaimImportLogs" collection
 * @method Doctrine_Collection                   getLocationProgressClaims()                 Returns the current record's "LocationProgressClaims" collection
 * @method ClaimCertificate                      getClaimCertificate()                       Returns the current record's "ClaimCertificate" value
 * @method PreliminariesClaim                    getPreliminariesClaim()                     Returns the current record's "PreliminariesClaim" value
 * @method PreliminariesInitialClaim             getPreliminariesInitialClaimRate()          Returns the current record's "PreliminariesInitialClaimRate" value
 * @method PreliminariesTimeBasedClaim           getPreliminariesTimeBasedClaimRate()        Returns the current record's "PreliminariesTimeBasedClaimRate" value
 * @method PreliminariesWorkBasedClaim           getPreliminariesWorkBasedClaimRate()        Returns the current record's "PreliminariesWorkBasedClaimRate" value
 * @method PreliminariesFinalClaim               getPreliminariesFinalClaimRate()            Returns the current record's "PreliminariesFinalClaimRate" value
 * @method Doctrine_Collection                   getSubProjectLatestApprovedClaimRevision()  Returns the current record's "SubProjectLatestApprovedClaimRevision" collection
 * @method SubProjectLatestApprovedClaimRevision getMainProjectLatestApprovedClaimRevision() Returns the current record's "MainProjectLatestApprovedClaimRevision" value
 * @method PostContractClaimRevision             setPostContractId()                         Sets the current record's "post_contract_id" value
 * @method PostContractClaimRevision             setVersion()                                Sets the current record's "version" value
 * @method PostContractClaimRevision             setCurrentSelectedRevision()                Sets the current record's "current_selected_revision" value
 * @method PostContractClaimRevision             setLockedStatus()                           Sets the current record's "locked_status" value
 * @method PostContractClaimRevision             setClaimSubmissionLocked()                  Sets the current record's "claim_submission_locked" value
 * @method PostContractClaimRevision             setPostContract()                           Sets the current record's "PostContract" value
 * @method PostContractClaimRevision             setPostContractStandardClaims()             Sets the current record's "PostContractStandardClaims" collection
 * @method PostContractClaimRevision             setPostContractPreliminaryClaims()          Sets the current record's "PostContractPreliminaryClaims" collection
 * @method PostContractClaimRevision             setImportedVariationOrders()                Sets the current record's "ImportedVariationOrders" collection
 * @method PostContractClaimRevision             setImportedMaterialsOnSite()                Sets the current record's "ImportedMaterialsOnSite" collection
 * @method PostContractClaimRevision             setClaimImportLogs()                        Sets the current record's "ClaimImportLogs" collection
 * @method PostContractClaimRevision             setLocationProgressClaims()                 Sets the current record's "LocationProgressClaims" collection
 * @method PostContractClaimRevision             setClaimCertificate()                       Sets the current record's "ClaimCertificate" value
 * @method PostContractClaimRevision             setPreliminariesClaim()                     Sets the current record's "PreliminariesClaim" value
 * @method PostContractClaimRevision             setPreliminariesInitialClaimRate()          Sets the current record's "PreliminariesInitialClaimRate" value
 * @method PostContractClaimRevision             setPreliminariesTimeBasedClaimRate()        Sets the current record's "PreliminariesTimeBasedClaimRate" value
 * @method PostContractClaimRevision             setPreliminariesWorkBasedClaimRate()        Sets the current record's "PreliminariesWorkBasedClaimRate" value
 * @method PostContractClaimRevision             setPreliminariesFinalClaimRate()            Sets the current record's "PreliminariesFinalClaimRate" value
 * @method PostContractClaimRevision             setSubProjectLatestApprovedClaimRevision()  Sets the current record's "SubProjectLatestApprovedClaimRevision" collection
 * @method PostContractClaimRevision             setMainProjectLatestApprovedClaimRevision() Sets the current record's "MainProjectLatestApprovedClaimRevision" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContractClaimRevision extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contract_claim_revisions');
        $this->hasColumn('post_contract_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('version', 'integer', 2, array(
             'type' => 'integer',
             'default' => 0,
             'unsigned' => true,
             'length' => 2,
             ));
        $this->hasColumn('current_selected_revision', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('locked_status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('claim_submission_locked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));


        $this->index('post_contract_revision_version_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_id',
              1 => 'version',
              2 => 'current_selected_revision',
             ),
             'type' => 'unique',
             ));
        $this->option('orderBy', 'id');
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContract', array(
             'local' => 'post_contract_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PostContractImportedStandardClaim as PostContractStandardClaims', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('PostContractImportedPreliminaryClaim as PostContractPreliminaryClaims', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('ImportedVariationOrder as ImportedVariationOrders', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('ImportedMaterialOnSite as ImportedMaterialsOnSite', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('ClaimImportLog as ClaimImportLogs', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('LocationProgressClaim as LocationProgressClaims', array(
             'local' => 'id',
             'foreign' => 'post_contract_claim_revision_id'));

        $this->hasOne('ClaimCertificate', array(
             'local' => 'id',
             'foreign' => 'post_contract_claim_revision_id'));

        $this->hasOne('PreliminariesClaim', array(
             'local' => 'id',
             'foreign' => 'claim_at_revision_id'));

        $this->hasOne('PreliminariesInitialClaim as PreliminariesInitialClaimRate', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasOne('PreliminariesTimeBasedClaim as PreliminariesTimeBasedClaimRate', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasOne('PreliminariesWorkBasedClaim as PreliminariesWorkBasedClaimRate', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasOne('PreliminariesFinalClaim as PreliminariesFinalClaimRate', array(
             'local' => 'id',
             'foreign' => 'revision_id'));

        $this->hasMany('SubProjectLatestApprovedClaimRevision', array(
             'local' => 'id',
             'foreign' => 'main_project_claim_revision_id'));

        $this->hasOne('SubProjectLatestApprovedClaimRevision as MainProjectLatestApprovedClaimRevision', array(
             'local' => 'id',
             'foreign' => 'sub_project_claim_revision_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($signable0);
    }
}