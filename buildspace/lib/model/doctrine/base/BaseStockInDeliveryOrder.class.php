<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StockInDeliveryOrder', 'main_conn');

/**
 * BaseStockInDeliveryOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $stock_in_invoice_id
 * @property string $delivery_order_no
 * @property timestamp $delivery_order_date
 * @property string $delivery_order_upload
 * @property StockInInvoice $Invoice
 * @property Doctrine_Collection $StockInDeliveryOrderItemQuantities
 * 
 * @method integer              getStockInInvoiceId()                   Returns the current record's "stock_in_invoice_id" value
 * @method string               getDeliveryOrderNo()                    Returns the current record's "delivery_order_no" value
 * @method timestamp            getDeliveryOrderDate()                  Returns the current record's "delivery_order_date" value
 * @method string               getDeliveryOrderUpload()                Returns the current record's "delivery_order_upload" value
 * @method StockInInvoice       getInvoice()                            Returns the current record's "Invoice" value
 * @method Doctrine_Collection  getStockInDeliveryOrderItemQuantities() Returns the current record's "StockInDeliveryOrderItemQuantities" collection
 * @method StockInDeliveryOrder setStockInInvoiceId()                   Sets the current record's "stock_in_invoice_id" value
 * @method StockInDeliveryOrder setDeliveryOrderNo()                    Sets the current record's "delivery_order_no" value
 * @method StockInDeliveryOrder setDeliveryOrderDate()                  Sets the current record's "delivery_order_date" value
 * @method StockInDeliveryOrder setDeliveryOrderUpload()                Sets the current record's "delivery_order_upload" value
 * @method StockInDeliveryOrder setInvoice()                            Sets the current record's "Invoice" value
 * @method StockInDeliveryOrder setStockInDeliveryOrderItemQuantities() Sets the current record's "StockInDeliveryOrderItemQuantities" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStockInDeliveryOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stock_in_delivery_orders');
        $this->hasColumn('stock_in_invoice_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('delivery_order_no', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('delivery_order_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('delivery_order_upload', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));


        $this->index('stock_in_delivery_order_idx', array(
             'fields' => 
             array(
              0 => 'stock_in_invoice_id',
              1 => 'deleted_at',
             ),
             ));
        $this->index('stock_in_delivery_order_no_uniq_idx', array(
             'fields' => 
             array(
              0 => 'stock_in_invoice_id',
              1 => 'delivery_order_no',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StockInInvoice as Invoice', array(
             'local' => 'stock_in_invoice_id',
             'foreign' => 'id'));

        $this->hasMany('StockInDeliveryOrderItemQuantity as StockInDeliveryOrderItemQuantities', array(
             'local' => 'id',
             'foreign' => 'stock_in_delivery_order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}