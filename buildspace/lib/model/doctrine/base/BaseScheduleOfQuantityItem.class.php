<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ScheduleOfQuantityItem', 'main_conn');

/**
 * BaseScheduleOfQuantityItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $third_party_identifier
 * @property integer $identifier_type
 * @property string $description
 * @property integer $type
 * @property integer $schedule_of_quantity_trade_id
 * @property integer $uom_id
 * @property integer $priority
 * @property ScheduleOfQuantityTrade $Trade
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property Doctrine_Collection $FormulatedColumns
 * @property Doctrine_Collection $BuildUpQuantities
 * @property Doctrine_Collection $BillItems
 * @property Doctrine_Collection $VariationOrderItems
 * @property Doctrine_Collection $SubPackageVariationOrderItems
 * 
 * @method integer                 getId()                            Returns the current record's "id" value
 * @method varchar                 getThirdPartyIdentifier()          Returns the current record's "third_party_identifier" value
 * @method integer                 getIdentifierType()                Returns the current record's "identifier_type" value
 * @method string                  getDescription()                   Returns the current record's "description" value
 * @method integer                 getType()                          Returns the current record's "type" value
 * @method integer                 getScheduleOfQuantityTradeId()     Returns the current record's "schedule_of_quantity_trade_id" value
 * @method integer                 getUomId()                         Returns the current record's "uom_id" value
 * @method integer                 getPriority()                      Returns the current record's "priority" value
 * @method ScheduleOfQuantityTrade getTrade()                         Returns the current record's "Trade" value
 * @method UnitOfMeasurement       getUnitOfMeasurement()             Returns the current record's "UnitOfMeasurement" value
 * @method Doctrine_Collection     getFormulatedColumns()             Returns the current record's "FormulatedColumns" collection
 * @method Doctrine_Collection     getBuildUpQuantities()             Returns the current record's "BuildUpQuantities" collection
 * @method Doctrine_Collection     getBillItems()                     Returns the current record's "BillItems" collection
 * @method Doctrine_Collection     getVariationOrderItems()           Returns the current record's "VariationOrderItems" collection
 * @method Doctrine_Collection     getSubPackageVariationOrderItems() Returns the current record's "SubPackageVariationOrderItems" collection
 * @method ScheduleOfQuantityItem  setId()                            Sets the current record's "id" value
 * @method ScheduleOfQuantityItem  setThirdPartyIdentifier()          Sets the current record's "third_party_identifier" value
 * @method ScheduleOfQuantityItem  setIdentifierType()                Sets the current record's "identifier_type" value
 * @method ScheduleOfQuantityItem  setDescription()                   Sets the current record's "description" value
 * @method ScheduleOfQuantityItem  setType()                          Sets the current record's "type" value
 * @method ScheduleOfQuantityItem  setScheduleOfQuantityTradeId()     Sets the current record's "schedule_of_quantity_trade_id" value
 * @method ScheduleOfQuantityItem  setUomId()                         Sets the current record's "uom_id" value
 * @method ScheduleOfQuantityItem  setPriority()                      Sets the current record's "priority" value
 * @method ScheduleOfQuantityItem  setTrade()                         Sets the current record's "Trade" value
 * @method ScheduleOfQuantityItem  setUnitOfMeasurement()             Sets the current record's "UnitOfMeasurement" value
 * @method ScheduleOfQuantityItem  setFormulatedColumns()             Sets the current record's "FormulatedColumns" collection
 * @method ScheduleOfQuantityItem  setBuildUpQuantities()             Sets the current record's "BuildUpQuantities" collection
 * @method ScheduleOfQuantityItem  setBillItems()                     Sets the current record's "BillItems" collection
 * @method ScheduleOfQuantityItem  setVariationOrderItems()           Sets the current record's "VariationOrderItems" collection
 * @method ScheduleOfQuantityItem  setSubPackageVariationOrderItems() Sets the current record's "SubPackageVariationOrderItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScheduleOfQuantityItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('soq_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('third_party_identifier', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('identifier_type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('schedule_of_quantity_trade_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('soq_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'root_id',
              2 => 'lft',
              3 => 'rgt',
              4 => 'identifier_type',
             ),
             ));
        $this->index('soq_items_identifier_id_idx', array(
             'fields' => 
             array(
              0 => 'third_party_identifier',
             ),
             ));
        $this->index('soq_items_type_idx', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('soq_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'schedule_of_quantity_trade_id',
              1 => 'root_id',
              2 => 'uom_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ScheduleOfQuantityTrade as Trade', array(
             'local' => 'schedule_of_quantity_trade_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ScheduleOfQuantityItemFormulatedColumn as FormulatedColumns', array(
             'local' => 'id',
             'foreign' => 'relation_id'));

        $this->hasMany('ScheduleOfQuantityBuildUpItem as BuildUpQuantities', array(
             'local' => 'id',
             'foreign' => 'schedule_of_quantity_item_id'));

        $this->hasMany('ScheduleOfQuantityBillItemXref as BillItems', array(
             'local' => 'id',
             'foreign' => 'schedule_of_quantity_item_id'));

        $this->hasMany('ScheduleOfQuantityVariationOrderItemXref as VariationOrderItems', array(
             'local' => 'id',
             'foreign' => 'schedule_of_quantity_item_id'));

        $this->hasMany('ScheduleOfQuantitySubPackageVOItemXref as SubPackageVariationOrderItems', array(
             'local' => 'id',
             'foreign' => 'schedule_of_quantity_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'levelColumnName' => 'level',
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}