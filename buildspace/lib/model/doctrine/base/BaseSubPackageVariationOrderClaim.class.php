<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SubPackageVariationOrderClaim', 'main_conn');

/**
 * BaseSubPackageVariationOrderClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $sub_package_variation_order_id
 * @property integer $status
 * @property integer $revision
 * @property boolean $is_viewing
 * @property SubPackageVariationOrder $SubPackageVariationOrder
 * @property Doctrine_Collection $Items
 * 
 * @method integer                       getId()                             Returns the current record's "id" value
 * @method integer                       getSubPackageVariationOrderId()     Returns the current record's "sub_package_variation_order_id" value
 * @method integer                       getStatus()                         Returns the current record's "status" value
 * @method integer                       getRevision()                       Returns the current record's "revision" value
 * @method boolean                       getIsViewing()                      Returns the current record's "is_viewing" value
 * @method SubPackageVariationOrder      getSubPackageVariationOrder()       Returns the current record's "SubPackageVariationOrder" value
 * @method Doctrine_Collection           getItems()                          Returns the current record's "Items" collection
 * @method SubPackageVariationOrderClaim setId()                             Sets the current record's "id" value
 * @method SubPackageVariationOrderClaim setSubPackageVariationOrderId()     Sets the current record's "sub_package_variation_order_id" value
 * @method SubPackageVariationOrderClaim setStatus()                         Sets the current record's "status" value
 * @method SubPackageVariationOrderClaim setRevision()                       Sets the current record's "revision" value
 * @method SubPackageVariationOrderClaim setIsViewing()                      Sets the current record's "is_viewing" value
 * @method SubPackageVariationOrderClaim setSubPackageVariationOrder()       Sets the current record's "SubPackageVariationOrder" value
 * @method SubPackageVariationOrderClaim setItems()                          Sets the current record's "Items" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubPackageVariationOrderClaim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sub_package_vo_claims');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('sub_package_variation_order_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('revision', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('is_viewing', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));


        $this->index('sp_vo_claims_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'sub_package_variation_order_id',
             ),
             ));
        $this->index('sp_vo_claims_revision_unique_idx', array(
             'fields' => 
             array(
              0 => 'revision',
              1 => 'sub_package_variation_order_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SubPackageVariationOrder', array(
             'local' => 'sub_package_variation_order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('SubPackageVariationOrderClaimItem as Items', array(
             'local' => 'id',
             'foreign' => 'sub_package_variation_order_claim_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}