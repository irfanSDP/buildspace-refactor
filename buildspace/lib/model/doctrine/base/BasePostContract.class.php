<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContract', 'main_conn');

/**
 * BasePostContract
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $project_structure_id
 * @property integer $selected_type_rate
 * @property integer $published_type
 * @property timestamp $published_at
 * @property ProjectStructure $ProjectStructure
 * @property Doctrine_Collection $BillItemRates
 * @property Doctrine_Collection $BillItemTypes
 * @property Doctrine_Collection $ClaimRevisions
 * @property ClaimCertificatePrintSetting $ClaimCertificatePrintSetting
 * @property Doctrine_Collection $StandardClaimTypesReference
 * 
 * @method integer                      getId()                           Returns the current record's "id" value
 * @method integer                      getProjectStructureId()           Returns the current record's "project_structure_id" value
 * @method integer                      getSelectedTypeRate()             Returns the current record's "selected_type_rate" value
 * @method integer                      getPublishedType()                Returns the current record's "published_type" value
 * @method timestamp                    getPublishedAt()                  Returns the current record's "published_at" value
 * @method ProjectStructure             getProjectStructure()             Returns the current record's "ProjectStructure" value
 * @method Doctrine_Collection          getBillItemRates()                Returns the current record's "BillItemRates" collection
 * @method Doctrine_Collection          getBillItemTypes()                Returns the current record's "BillItemTypes" collection
 * @method Doctrine_Collection          getClaimRevisions()               Returns the current record's "ClaimRevisions" collection
 * @method ClaimCertificatePrintSetting getClaimCertificatePrintSetting() Returns the current record's "ClaimCertificatePrintSetting" value
 * @method Doctrine_Collection          getStandardClaimTypesReference()  Returns the current record's "StandardClaimTypesReference" collection
 * @method PostContract                 setId()                           Sets the current record's "id" value
 * @method PostContract                 setProjectStructureId()           Sets the current record's "project_structure_id" value
 * @method PostContract                 setSelectedTypeRate()             Sets the current record's "selected_type_rate" value
 * @method PostContract                 setPublishedType()                Sets the current record's "published_type" value
 * @method PostContract                 setPublishedAt()                  Sets the current record's "published_at" value
 * @method PostContract                 setProjectStructure()             Sets the current record's "ProjectStructure" value
 * @method PostContract                 setBillItemRates()                Sets the current record's "BillItemRates" collection
 * @method PostContract                 setBillItemTypes()                Sets the current record's "BillItemTypes" collection
 * @method PostContract                 setClaimRevisions()               Sets the current record's "ClaimRevisions" collection
 * @method PostContract                 setClaimCertificatePrintSetting() Sets the current record's "ClaimCertificatePrintSetting" value
 * @method PostContract                 setStandardClaimTypesReference()  Sets the current record's "StandardClaimTypesReference" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContract extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contracts');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('selected_type_rate', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('published_type', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('published_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('post_contracts_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_structure_id',
              2 => 'published_type',
             ),
             ));
        $this->index('post_contracts_unique_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PostContractBillItemRate as BillItemRates', array(
             'local' => 'id',
             'foreign' => 'post_contract_id'));

        $this->hasMany('PostContractBillItemType as BillItemTypes', array(
             'local' => 'id',
             'foreign' => 'post_contract_id'));

        $this->hasMany('PostContractClaimRevision as ClaimRevisions', array(
             'local' => 'id',
             'foreign' => 'post_contract_id'));

        $this->hasOne('ClaimCertificatePrintSetting', array(
             'local' => 'id',
             'foreign' => 'post_contract_id'));

        $this->hasMany('PostContractStandardClaimTypeReference as StandardClaimTypesReference', array(
             'local' => 'id',
             'foreign' => 'post_contract_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}