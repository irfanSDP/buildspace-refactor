<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Currency', 'main_conn');

/**
 * BaseCurrency
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $currency_name
 * @property string $currency_code
 * @property Doctrine_Collection $CostData
 * @property Doctrine_Collection $ProjectsInformation
 * @property Doctrine_Collection $PurchaseOrderInformation
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method string              getCurrencyName()             Returns the current record's "currency_name" value
 * @method string              getCurrencyCode()             Returns the current record's "currency_code" value
 * @method Doctrine_Collection getCostData()                 Returns the current record's "CostData" collection
 * @method Doctrine_Collection getProjectsInformation()      Returns the current record's "ProjectsInformation" collection
 * @method Doctrine_Collection getPurchaseOrderInformation() Returns the current record's "PurchaseOrderInformation" collection
 * @method Currency            setId()                       Sets the current record's "id" value
 * @method Currency            setCurrencyName()             Sets the current record's "currency_name" value
 * @method Currency            setCurrencyCode()             Sets the current record's "currency_code" value
 * @method Currency            setCostData()                 Sets the current record's "CostData" collection
 * @method Currency            setProjectsInformation()      Sets the current record's "ProjectsInformation" collection
 * @method Currency            setPurchaseOrderInformation() Sets the current record's "PurchaseOrderInformation" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCurrency extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('currency');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('currency_name', 'string', 60, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'NULL',
             'length' => 60,
             ));
        $this->hasColumn('currency_code', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'notnull' => false,
             'default' => 'NULL',
             'length' => 3,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CostData', array(
             'local' => 'id',
             'foreign' => 'currency_id'));

        $this->hasMany('ProjectMainInformation as ProjectsInformation', array(
             'local' => 'id',
             'foreign' => 'currency_id'));

        $this->hasMany('PurchaseOrderInformation', array(
             'local' => 'id',
             'foreign' => 'currency_id'));
    }
}