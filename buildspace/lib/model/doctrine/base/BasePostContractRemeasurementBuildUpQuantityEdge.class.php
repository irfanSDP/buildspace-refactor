<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContractRemeasurementBuildUpQuantityEdge', 'main_conn');

/**
 * BasePostContractRemeasurementBuildUpQuantityEdge
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $node_from
 * @property integer $node_to
 * @property string $column_name
 * @property PostContractRemeasurementBuildUpQuantityFormulatedColumn $NodeFrom
 * @property PostContractRemeasurementBuildUpQuantityFormulatedColumn $NodeTo
 * 
 * @method integer                                                  getId()          Returns the current record's "id" value
 * @method integer                                                  getNodeFrom()    Returns the current record's "node_from" value
 * @method integer                                                  getNodeTo()      Returns the current record's "node_to" value
 * @method string                                                   getColumnName()  Returns the current record's "column_name" value
 * @method PostContractRemeasurementBuildUpQuantityFormulatedColumn getNodeFrom()    Returns the current record's "NodeFrom" value
 * @method PostContractRemeasurementBuildUpQuantityFormulatedColumn getNodeTo()      Returns the current record's "NodeTo" value
 * @method PostContractRemeasurementBuildUpQuantityEdge             setId()          Sets the current record's "id" value
 * @method PostContractRemeasurementBuildUpQuantityEdge             setNodeFrom()    Sets the current record's "node_from" value
 * @method PostContractRemeasurementBuildUpQuantityEdge             setNodeTo()      Sets the current record's "node_to" value
 * @method PostContractRemeasurementBuildUpQuantityEdge             setColumnName()  Sets the current record's "column_name" value
 * @method PostContractRemeasurementBuildUpQuantityEdge             setNodeFrom()    Sets the current record's "NodeFrom" value
 * @method PostContractRemeasurementBuildUpQuantityEdge             setNodeTo()      Sets the current record's "NodeTo" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContractRemeasurementBuildUpQuantityEdge extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contract_rm_build_up_quantity_edges');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('node_from', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('node_to', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('column_name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));


        $this->index('pcrm_buqe_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'node_from',
              2 => 'node_to',
              3 => 'column_name',
              4 => 'deleted_at',
             ),
             ));
        $this->index('pcrm_buqe_fk_idx', array(
             'fields' => 
             array(
              0 => 'node_from',
              1 => 'node_to',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractRemeasurementBuildUpQuantityFormulatedColumn as NodeFrom', array(
             'local' => 'node_from',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PostContractRemeasurementBuildUpQuantityFormulatedColumn as NodeTo', array(
             'local' => 'node_to',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}