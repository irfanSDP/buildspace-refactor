<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostContractRemeasurementClaim', 'main_conn');

/**
 * BasePostContractRemeasurementClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_contract_bill_item_rate_id
 * @property integer $bill_column_setting_id
 * @property decimal $qty_per_unit
 * @property decimal $total_per_unit
 * @property boolean $has_build_up
 * @property PostContractBillItemRate $ItemRate
 * @property BillColumnSetting $BillColumnSetting
 * 
 * @method integer                        getPostContractBillItemRateId()      Returns the current record's "post_contract_bill_item_rate_id" value
 * @method integer                        getBillColumnSettingId()             Returns the current record's "bill_column_setting_id" value
 * @method decimal                        getQtyPerUnit()                      Returns the current record's "qty_per_unit" value
 * @method decimal                        getTotalPerUnit()                    Returns the current record's "total_per_unit" value
 * @method boolean                        getHasBuildUp()                      Returns the current record's "has_build_up" value
 * @method PostContractBillItemRate       getItemRate()                        Returns the current record's "ItemRate" value
 * @method BillColumnSetting              getBillColumnSetting()               Returns the current record's "BillColumnSetting" value
 * @method PostContractRemeasurementClaim setPostContractBillItemRateId()      Sets the current record's "post_contract_bill_item_rate_id" value
 * @method PostContractRemeasurementClaim setBillColumnSettingId()             Sets the current record's "bill_column_setting_id" value
 * @method PostContractRemeasurementClaim setQtyPerUnit()                      Sets the current record's "qty_per_unit" value
 * @method PostContractRemeasurementClaim setTotalPerUnit()                    Sets the current record's "total_per_unit" value
 * @method PostContractRemeasurementClaim setHasBuildUp()                      Sets the current record's "has_build_up" value
 * @method PostContractRemeasurementClaim setItemRate()                        Sets the current record's "ItemRate" value
 * @method PostContractRemeasurementClaim setBillColumnSetting()               Sets the current record's "BillColumnSetting" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostContractRemeasurementClaim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_contract_remeasurement_claims');
        $this->hasColumn('post_contract_bill_item_rate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bill_column_setting_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('qty_per_unit', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total_per_unit', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('has_build_up', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));


        $this->index('post_contract_remeasurement_claim_uniq_idx', array(
             'fields' => 
             array(
              0 => 'post_contract_bill_item_rate_id',
              1 => 'bill_column_setting_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PostContractBillItemRate as ItemRate', array(
             'local' => 'post_contract_bill_item_rate_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillColumnSetting', array(
             'local' => 'bill_column_setting_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}