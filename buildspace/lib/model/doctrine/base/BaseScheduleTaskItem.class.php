<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ScheduleTaskItem', 'main_conn');

/**
 * BaseScheduleTaskItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $title
 * @property string $description
 * @property varchar $code
 * @property integer $status
 * @property date $start_date
 * @property date $end_date
 * @property date $completed_date
 * @property decimal $progress
 * @property integer $duration
 * @property decimal $total_cost
 * @property boolean $start_is_milestone
 * @property boolean $end_is_milestone
 * @property string $depends
 * @property decimal $hours_per_day
 * @property integer $priority
 * @property integer $project_schedule_id
 * @property boolean $temp_deleted
 * @property ProjectSchedule $ProjectSchedule
 * @property Doctrine_Collection $BillItems
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method varchar             getTitle()               Returns the current record's "title" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method varchar             getCode()                Returns the current record's "code" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method date                getStartDate()           Returns the current record's "start_date" value
 * @method date                getEndDate()             Returns the current record's "end_date" value
 * @method date                getCompletedDate()       Returns the current record's "completed_date" value
 * @method decimal             getProgress()            Returns the current record's "progress" value
 * @method integer             getDuration()            Returns the current record's "duration" value
 * @method decimal             getTotalCost()           Returns the current record's "total_cost" value
 * @method boolean             getStartIsMilestone()    Returns the current record's "start_is_milestone" value
 * @method boolean             getEndIsMilestone()      Returns the current record's "end_is_milestone" value
 * @method string              getDepends()             Returns the current record's "depends" value
 * @method decimal             getHoursPerDay()         Returns the current record's "hours_per_day" value
 * @method integer             getPriority()            Returns the current record's "priority" value
 * @method integer             getProjectScheduleId()   Returns the current record's "project_schedule_id" value
 * @method boolean             getTempDeleted()         Returns the current record's "temp_deleted" value
 * @method ProjectSchedule     getProjectSchedule()     Returns the current record's "ProjectSchedule" value
 * @method Doctrine_Collection getBillItems()           Returns the current record's "BillItems" collection
 * @method ScheduleTaskItem    setId()                  Sets the current record's "id" value
 * @method ScheduleTaskItem    setTitle()               Sets the current record's "title" value
 * @method ScheduleTaskItem    setDescription()         Sets the current record's "description" value
 * @method ScheduleTaskItem    setCode()                Sets the current record's "code" value
 * @method ScheduleTaskItem    setStatus()              Sets the current record's "status" value
 * @method ScheduleTaskItem    setStartDate()           Sets the current record's "start_date" value
 * @method ScheduleTaskItem    setEndDate()             Sets the current record's "end_date" value
 * @method ScheduleTaskItem    setCompletedDate()       Sets the current record's "completed_date" value
 * @method ScheduleTaskItem    setProgress()            Sets the current record's "progress" value
 * @method ScheduleTaskItem    setDuration()            Sets the current record's "duration" value
 * @method ScheduleTaskItem    setTotalCost()           Sets the current record's "total_cost" value
 * @method ScheduleTaskItem    setStartIsMilestone()    Sets the current record's "start_is_milestone" value
 * @method ScheduleTaskItem    setEndIsMilestone()      Sets the current record's "end_is_milestone" value
 * @method ScheduleTaskItem    setDepends()             Sets the current record's "depends" value
 * @method ScheduleTaskItem    setHoursPerDay()         Sets the current record's "hours_per_day" value
 * @method ScheduleTaskItem    setPriority()            Sets the current record's "priority" value
 * @method ScheduleTaskItem    setProjectScheduleId()   Sets the current record's "project_schedule_id" value
 * @method ScheduleTaskItem    setTempDeleted()         Sets the current record's "temp_deleted" value
 * @method ScheduleTaskItem    setProjectSchedule()     Sets the current record's "ProjectSchedule" value
 * @method ScheduleTaskItem    setBillItems()           Sets the current record's "BillItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScheduleTaskItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_schedule_task_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('code', 'varchar', 100, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('completed_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('progress', 'decimal', 5, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 5,
             ));
        $this->hasColumn('duration', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('total_cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('start_is_milestone', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('end_is_milestone', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('depends', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('hours_per_day', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 8,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('project_schedule_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('temp_deleted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));


        $this->index('pst_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'root_id',
              2 => 'lft',
              3 => 'rgt',
             ),
             ));
        $this->index('pst_items_status_idx', array(
             'fields' => 
             array(
              0 => 'status',
             ),
             ));
        $this->index('pst_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_schedule_id',
              1 => 'root_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectSchedule', array(
             'local' => 'project_schedule_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ScheduleTaskItemBillItem as BillItems', array(
             'local' => 'id',
             'foreign' => 'schedule_task_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'levelColumnName' => 'level',
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($nestedset0);
    }
}