<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StockInInvoice', 'main_conn');

/**
 * BaseStockInInvoice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_structure_id
 * @property integer $purchase_order_id
 * @property string $invoice_no
 * @property timestamp $invoice_date
 * @property integer $term_type
 * @property string $invoice_upload
 * @property ProjectStructure $Project
 * @property PurchaseOrder $PurchaseOrder
 * @property Doctrine_Collection $StockInInvoiceItems
 * @property Doctrine_Collection $StockInDeliveryOrders
 * 
 * @method integer             getProjectStructureId()    Returns the current record's "project_structure_id" value
 * @method integer             getPurchaseOrderId()       Returns the current record's "purchase_order_id" value
 * @method string              getInvoiceNo()             Returns the current record's "invoice_no" value
 * @method timestamp           getInvoiceDate()           Returns the current record's "invoice_date" value
 * @method integer             getTermType()              Returns the current record's "term_type" value
 * @method string              getInvoiceUpload()         Returns the current record's "invoice_upload" value
 * @method ProjectStructure    getProject()               Returns the current record's "Project" value
 * @method PurchaseOrder       getPurchaseOrder()         Returns the current record's "PurchaseOrder" value
 * @method Doctrine_Collection getStockInInvoiceItems()   Returns the current record's "StockInInvoiceItems" collection
 * @method Doctrine_Collection getStockInDeliveryOrders() Returns the current record's "StockInDeliveryOrders" collection
 * @method StockInInvoice      setProjectStructureId()    Sets the current record's "project_structure_id" value
 * @method StockInInvoice      setPurchaseOrderId()       Sets the current record's "purchase_order_id" value
 * @method StockInInvoice      setInvoiceNo()             Sets the current record's "invoice_no" value
 * @method StockInInvoice      setInvoiceDate()           Sets the current record's "invoice_date" value
 * @method StockInInvoice      setTermType()              Sets the current record's "term_type" value
 * @method StockInInvoice      setInvoiceUpload()         Sets the current record's "invoice_upload" value
 * @method StockInInvoice      setProject()               Sets the current record's "Project" value
 * @method StockInInvoice      setPurchaseOrder()         Sets the current record's "PurchaseOrder" value
 * @method StockInInvoice      setStockInInvoiceItems()   Sets the current record's "StockInInvoiceItems" collection
 * @method StockInInvoice      setStockInDeliveryOrders() Sets the current record's "StockInDeliveryOrders" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStockInInvoice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stock_in_invoices');
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('purchase_order_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('invoice_no', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('invoice_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('term_type', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('invoice_upload', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));


        $this->index('stock_in_index_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'purchase_order_id',
              2 => 'deleted_at',
             ),
             ));
        $this->index('stock_in_uniq_index_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'invoice_no',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure as Project', array(
             'local' => 'project_structure_id',
             'foreign' => 'id'));

        $this->hasOne('PurchaseOrder', array(
             'local' => 'purchase_order_id',
             'foreign' => 'id'));

        $this->hasMany('StockInInvoiceItem as StockInInvoiceItems', array(
             'local' => 'id',
             'foreign' => 'stock_in_invoice_id'));

        $this->hasMany('StockInDeliveryOrder as StockInDeliveryOrders', array(
             'local' => 'id',
             'foreign' => 'stock_in_invoice_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}