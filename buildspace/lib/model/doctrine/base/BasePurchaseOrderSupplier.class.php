<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PurchaseOrderSupplier', 'main_conn');

/**
 * BasePurchaseOrderSupplier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $purchase_order_id
 * @property integer $company_id
 * @property PurchaseOrder $PurchaseOrder
 * @property Company $Company
 * 
 * @method integer               getPurchaseOrderId()   Returns the current record's "purchase_order_id" value
 * @method integer               getCompanyId()         Returns the current record's "company_id" value
 * @method PurchaseOrder         getPurchaseOrder()     Returns the current record's "PurchaseOrder" value
 * @method Company               getCompany()           Returns the current record's "Company" value
 * @method PurchaseOrderSupplier setPurchaseOrderId()   Sets the current record's "purchase_order_id" value
 * @method PurchaseOrderSupplier setCompanyId()         Sets the current record's "company_id" value
 * @method PurchaseOrderSupplier setPurchaseOrder()     Sets the current record's "PurchaseOrder" value
 * @method PurchaseOrderSupplier setCompany()           Sets the current record's "Company" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePurchaseOrderSupplier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_order_suppliers');
        $this->hasColumn('purchase_order_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('po_supplier_uniq_idx', array(
             'fields' => 
             array(
              0 => 'purchase_order_id',
              1 => 'company_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PurchaseOrder', array(
             'local' => 'purchase_order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}