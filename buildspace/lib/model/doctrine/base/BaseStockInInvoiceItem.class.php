<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StockInInvoiceItem', 'main_conn');

/**
 * BaseStockInInvoiceItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $stock_in_invoice_id
 * @property integer $resource_item_id
 * @property decimal $quantity
 * @property decimal $rates
 * @property decimal $discount_percentage
 * @property decimal $tax_percentage
 * @property decimal $total
 * @property decimal $total_without_tax
 * @property integer $remark_id
 * @property StockInInvoice $Invoice
 * @property ResourceItem $ResourceItem
 * @property RFQItemRemark $Remark
 * @property Doctrine_Collection $StockInDeliveryOrderItemQuantities
 * 
 * @method integer             getStockInInvoiceId()                   Returns the current record's "stock_in_invoice_id" value
 * @method integer             getResourceItemId()                     Returns the current record's "resource_item_id" value
 * @method decimal             getQuantity()                           Returns the current record's "quantity" value
 * @method decimal             getRates()                              Returns the current record's "rates" value
 * @method decimal             getDiscountPercentage()                 Returns the current record's "discount_percentage" value
 * @method decimal             getTaxPercentage()                      Returns the current record's "tax_percentage" value
 * @method decimal             getTotal()                              Returns the current record's "total" value
 * @method decimal             getTotalWithoutTax()                    Returns the current record's "total_without_tax" value
 * @method integer             getRemarkId()                           Returns the current record's "remark_id" value
 * @method StockInInvoice      getInvoice()                            Returns the current record's "Invoice" value
 * @method ResourceItem        getResourceItem()                       Returns the current record's "ResourceItem" value
 * @method RFQItemRemark       getRemark()                             Returns the current record's "Remark" value
 * @method Doctrine_Collection getStockInDeliveryOrderItemQuantities() Returns the current record's "StockInDeliveryOrderItemQuantities" collection
 * @method StockInInvoiceItem  setStockInInvoiceId()                   Sets the current record's "stock_in_invoice_id" value
 * @method StockInInvoiceItem  setResourceItemId()                     Sets the current record's "resource_item_id" value
 * @method StockInInvoiceItem  setQuantity()                           Sets the current record's "quantity" value
 * @method StockInInvoiceItem  setRates()                              Sets the current record's "rates" value
 * @method StockInInvoiceItem  setDiscountPercentage()                 Sets the current record's "discount_percentage" value
 * @method StockInInvoiceItem  setTaxPercentage()                      Sets the current record's "tax_percentage" value
 * @method StockInInvoiceItem  setTotal()                              Sets the current record's "total" value
 * @method StockInInvoiceItem  setTotalWithoutTax()                    Sets the current record's "total_without_tax" value
 * @method StockInInvoiceItem  setRemarkId()                           Sets the current record's "remark_id" value
 * @method StockInInvoiceItem  setInvoice()                            Sets the current record's "Invoice" value
 * @method StockInInvoiceItem  setResourceItem()                       Sets the current record's "ResourceItem" value
 * @method StockInInvoiceItem  setRemark()                             Sets the current record's "Remark" value
 * @method StockInInvoiceItem  setStockInDeliveryOrderItemQuantities() Sets the current record's "StockInDeliveryOrderItemQuantities" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStockInInvoiceItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stock_in_invoice_items');
        $this->hasColumn('stock_in_invoice_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('resource_item_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('quantity', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('rates', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('discount_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('tax_percentage', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('total_without_tax', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('remark_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('stock_in_invoice_item_uniq_idx', array(
             'fields' => 
             array(
              0 => 'stock_in_invoice_id',
              1 => 'resource_item_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->index('stock_in_invoice_remark_idx', array(
             'fields' => 
             array(
              0 => 'remark_id',
              1 => 'deleted_at',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StockInInvoice as Invoice', array(
             'local' => 'stock_in_invoice_id',
             'foreign' => 'id'));

        $this->hasOne('ResourceItem', array(
             'local' => 'resource_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('RFQItemRemark as Remark', array(
             'local' => 'remark_id',
             'foreign' => 'id'));

        $this->hasMany('StockInDeliveryOrderItemQuantity as StockInDeliveryOrderItemQuantities', array(
             'local' => 'id',
             'foreign' => 'stock_in_invoice_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}