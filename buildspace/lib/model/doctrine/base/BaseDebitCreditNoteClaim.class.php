<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DebitCreditNoteClaim', 'main_conn');

/**
 * BaseDebitCreditNoteClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $project_structure_id
 * @property integer $account_group_id
 * @property integer $claim_certificate_id
 * @property string $description
 * @property integer $priority
 * @property ProjectStructure $ProjectStructure
 * @property AccountGroup $AccountGroup
 * @property Doctrine_Collection $DebitCreditNoteClaimItem
 * 
 * @method integer              getId()                       Returns the current record's "id" value
 * @method integer              getProjectStructureId()       Returns the current record's "project_structure_id" value
 * @method integer              getAccountGroupId()           Returns the current record's "account_group_id" value
 * @method integer              getClaimCertificateId()       Returns the current record's "claim_certificate_id" value
 * @method string               getDescription()              Returns the current record's "description" value
 * @method integer              getPriority()                 Returns the current record's "priority" value
 * @method ProjectStructure     getProjectStructure()         Returns the current record's "ProjectStructure" value
 * @method AccountGroup         getAccountGroup()             Returns the current record's "AccountGroup" value
 * @method Doctrine_Collection  getDebitCreditNoteClaimItem() Returns the current record's "DebitCreditNoteClaimItem" collection
 * @method DebitCreditNoteClaim setId()                       Sets the current record's "id" value
 * @method DebitCreditNoteClaim setProjectStructureId()       Sets the current record's "project_structure_id" value
 * @method DebitCreditNoteClaim setAccountGroupId()           Sets the current record's "account_group_id" value
 * @method DebitCreditNoteClaim setClaimCertificateId()       Sets the current record's "claim_certificate_id" value
 * @method DebitCreditNoteClaim setDescription()              Sets the current record's "description" value
 * @method DebitCreditNoteClaim setPriority()                 Sets the current record's "priority" value
 * @method DebitCreditNoteClaim setProjectStructure()         Sets the current record's "ProjectStructure" value
 * @method DebitCreditNoteClaim setAccountGroup()             Sets the current record's "AccountGroup" value
 * @method DebitCreditNoteClaim setDebitCreditNoteClaimItem() Sets the current record's "DebitCreditNoteClaimItem" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDebitCreditNoteClaim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('debit_credit_note_claims');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('account_group_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('claim_certificate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('debit_credit_note_claim_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_structure_id',
              2 => 'account_group_id',
             ),
             ));
        $this->index('debit_credit_note_claim_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
              1 => 'account_group_id',
             ),
             ));
        $this->index('debit_credit_note_claim_certs_idx', array(
             'fields' => 
             array(
              0 => 'claim_certificate_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('AccountGroup', array(
             'local' => 'account_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('DebitCreditNoteClaimItem', array(
             'local' => 'id',
             'foreign' => 'debit_credit_note_claim_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}