<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MasterCostDataProjectInformation', 'main_conn');

/**
 * BaseMasterCostDataProjectInformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $master_cost_data_id
 * @property integer $parent_id
 * @property string $description
 * @property integer $priority
 * @property integer $level
 * @property MasterCostData $MasterCostData
 * @property MasterCostDataProjectInformation $Parent
 * @property Doctrine_Collection $CostDataProjectInformation
 * @property Doctrine_Collection $Children
 * 
 * @method integer                          getId()                         Returns the current record's "id" value
 * @method integer                          getMasterCostDataId()           Returns the current record's "master_cost_data_id" value
 * @method integer                          getParentId()                   Returns the current record's "parent_id" value
 * @method string                           getDescription()                Returns the current record's "description" value
 * @method integer                          getPriority()                   Returns the current record's "priority" value
 * @method integer                          getLevel()                      Returns the current record's "level" value
 * @method MasterCostData                   getMasterCostData()             Returns the current record's "MasterCostData" value
 * @method MasterCostDataProjectInformation getParent()                     Returns the current record's "Parent" value
 * @method Doctrine_Collection              getCostDataProjectInformation() Returns the current record's "CostDataProjectInformation" collection
 * @method Doctrine_Collection              getChildren()                   Returns the current record's "Children" collection
 * @method MasterCostDataProjectInformation setId()                         Sets the current record's "id" value
 * @method MasterCostDataProjectInformation setMasterCostDataId()           Sets the current record's "master_cost_data_id" value
 * @method MasterCostDataProjectInformation setParentId()                   Sets the current record's "parent_id" value
 * @method MasterCostDataProjectInformation setDescription()                Sets the current record's "description" value
 * @method MasterCostDataProjectInformation setPriority()                   Sets the current record's "priority" value
 * @method MasterCostDataProjectInformation setLevel()                      Sets the current record's "level" value
 * @method MasterCostDataProjectInformation setMasterCostData()             Sets the current record's "MasterCostData" value
 * @method MasterCostDataProjectInformation setParent()                     Sets the current record's "Parent" value
 * @method MasterCostDataProjectInformation setCostDataProjectInformation() Sets the current record's "CostDataProjectInformation" collection
 * @method MasterCostDataProjectInformation setChildren()                   Sets the current record's "Children" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMasterCostDataProjectInformation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('master_cost_data_project_information');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('master_cost_data_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('level', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('master_cost_data_project_information_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('master_cost_data_project_information_idx', array(
             'fields' => 
             array(
              0 => 'master_cost_data_id',
              1 => 'parent_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MasterCostData', array(
             'local' => 'master_cost_data_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MasterCostDataProjectInformation as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CostDataProjectInformation', array(
             'local' => 'id',
             'foreign' => 'master_cost_data_project_information_id'));

        $this->hasMany('MasterCostDataProjectInformation as Children', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}