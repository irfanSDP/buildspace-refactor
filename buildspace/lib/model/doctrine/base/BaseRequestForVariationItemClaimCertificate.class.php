<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RequestForVariationItemClaimCertificate', 'main_conn');

/**
 * BaseRequestForVariationItemClaimCertificate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $variation_order_item_id
 * @property integer $claim_certificate_id
 * @property VariationOrderItem $VariationOrderItem
 * @property ClaimCertificate $ClaimCertificate
 * 
 * @method integer                                 getId()                      Returns the current record's "id" value
 * @method integer                                 getVariationOrderItemId()    Returns the current record's "variation_order_item_id" value
 * @method integer                                 getClaimCertificateId()      Returns the current record's "claim_certificate_id" value
 * @method VariationOrderItem                      getVariationOrderItem()      Returns the current record's "VariationOrderItem" value
 * @method ClaimCertificate                        getClaimCertificate()        Returns the current record's "ClaimCertificate" value
 * @method RequestForVariationItemClaimCertificate setId()                      Sets the current record's "id" value
 * @method RequestForVariationItemClaimCertificate setVariationOrderItemId()    Sets the current record's "variation_order_item_id" value
 * @method RequestForVariationItemClaimCertificate setClaimCertificateId()      Sets the current record's "claim_certificate_id" value
 * @method RequestForVariationItemClaimCertificate setVariationOrderItem()      Sets the current record's "VariationOrderItem" value
 * @method RequestForVariationItemClaimCertificate setClaimCertificate()        Sets the current record's "ClaimCertificate" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRequestForVariationItemClaimCertificate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('request_for_variation_items_claim_certificates');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('variation_order_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('claim_certificate_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('rfv_items_claim_certs_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'variation_order_item_id',
              2 => 'claim_certificate_id',
             ),
             ));
        $this->index('rfv_items_claim_certs_fk_idx', array(
             'fields' => 
             array(
              0 => 'variation_order_item_id',
              1 => 'claim_certificate_id',
             ),
             ));
        $this->index('rfv_items_claim_certs_unique_idx', array(
             'fields' => 
             array(
              0 => 'variation_order_item_id',
              1 => 'claim_certificate_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('VariationOrderItem', array(
             'local' => 'variation_order_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ClaimCertificate', array(
             'local' => 'claim_certificate_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}