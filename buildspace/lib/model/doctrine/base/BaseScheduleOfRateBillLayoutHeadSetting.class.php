<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ScheduleOfRateBillLayoutHeadSetting', 'main_conn');

/**
 * BaseScheduleOfRateBillLayoutHeadSetting
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $schedule_of_rate_bill_layout_setting_id
 * @property integer $head
 * @property boolean $bold
 * @property boolean $underline
 * @property boolean $italic
 * @property ScheduleOfRateBillLayoutSetting $ScheduleOfRateBillLayoutSetting
 * 
 * @method integer                             getScheduleOfRateBillLayoutSettingId()       Returns the current record's "schedule_of_rate_bill_layout_setting_id" value
 * @method integer                             getHead()                                    Returns the current record's "head" value
 * @method boolean                             getBold()                                    Returns the current record's "bold" value
 * @method boolean                             getUnderline()                               Returns the current record's "underline" value
 * @method boolean                             getItalic()                                  Returns the current record's "italic" value
 * @method ScheduleOfRateBillLayoutSetting     getScheduleOfRateBillLayoutSetting()         Returns the current record's "ScheduleOfRateBillLayoutSetting" value
 * @method ScheduleOfRateBillLayoutHeadSetting setScheduleOfRateBillLayoutSettingId()       Sets the current record's "schedule_of_rate_bill_layout_setting_id" value
 * @method ScheduleOfRateBillLayoutHeadSetting setHead()                                    Sets the current record's "head" value
 * @method ScheduleOfRateBillLayoutHeadSetting setBold()                                    Sets the current record's "bold" value
 * @method ScheduleOfRateBillLayoutHeadSetting setUnderline()                               Sets the current record's "underline" value
 * @method ScheduleOfRateBillLayoutHeadSetting setItalic()                                  Sets the current record's "italic" value
 * @method ScheduleOfRateBillLayoutHeadSetting setScheduleOfRateBillLayoutSetting()         Sets the current record's "ScheduleOfRateBillLayoutSetting" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScheduleOfRateBillLayoutHeadSetting extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('schedule_of_rate_bill_layout_head_settings');
        $this->hasColumn('schedule_of_rate_bill_layout_setting_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('head', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bold', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('underline', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('italic', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));


        $this->index('sorb_layout_hset_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'schedule_of_rate_bill_layout_setting_id',
              2 => 'deleted_at',
             ),
             ));
        $this->index('sorb_layout_hset_fk_idx', array(
             'fields' => 
             array(
              0 => 'schedule_of_rate_bill_layout_setting_id',
             ),
             ));
        $this->option('orderBy', 'head');
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ScheduleOfRateBillLayoutSetting', array(
             'local' => 'schedule_of_rate_bill_layout_setting_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}