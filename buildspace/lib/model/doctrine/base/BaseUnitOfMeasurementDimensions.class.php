<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UnitOfMeasurementDimensions', 'main_conn');

/**
 * BaseUnitOfMeasurementDimensions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $unit_of_measurement_id
 * @property integer $dimension_id
 * @property integer $priority
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property Dimension $Dimension
 * 
 * @method integer                     getUnitOfMeasurementId()    Returns the current record's "unit_of_measurement_id" value
 * @method integer                     getDimensionId()            Returns the current record's "dimension_id" value
 * @method integer                     getPriority()               Returns the current record's "priority" value
 * @method UnitOfMeasurement           getUnitOfMeasurement()      Returns the current record's "UnitOfMeasurement" value
 * @method Dimension                   getDimension()              Returns the current record's "Dimension" value
 * @method UnitOfMeasurementDimensions setUnitOfMeasurementId()    Sets the current record's "unit_of_measurement_id" value
 * @method UnitOfMeasurementDimensions setDimensionId()            Sets the current record's "dimension_id" value
 * @method UnitOfMeasurementDimensions setPriority()               Sets the current record's "priority" value
 * @method UnitOfMeasurementDimensions setUnitOfMeasurement()      Sets the current record's "UnitOfMeasurement" value
 * @method UnitOfMeasurementDimensions setDimension()              Sets the current record's "Dimension" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUnitOfMeasurementDimensions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('unit_of_measurement_dimensions');
        $this->hasColumn('unit_of_measurement_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('dimension_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('uom_dim_priority_unique_idx', array(
             'fields' => 
             array(
              0 => 'unit_of_measurement_id',
              1 => 'priority',
             ),
             'type' => 'unique',
             ));
        $this->index('uom_dim_unique_idx', array(
             'fields' => 
             array(
              0 => 'unit_of_measurement_id',
              1 => 'dimension_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'unit_of_measurement_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Dimension', array(
             'local' => 'dimension_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}