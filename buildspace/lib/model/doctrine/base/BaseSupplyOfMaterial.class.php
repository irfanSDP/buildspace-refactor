<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SupplyOfMaterial', 'main_conn');

/**
 * BaseSupplyOfMaterial
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property integer $project_structure_id
 * @property integer $unit_type
 * @property ProjectStructure $ProjectStructure
 * @property UnitOfMeasurementType $UnitOfMeasurementType
 * 
 * @method integer               getId()                    Returns the current record's "id" value
 * @method string                getTitle()                 Returns the current record's "title" value
 * @method string                getDescription()           Returns the current record's "description" value
 * @method integer               getProjectStructureId()    Returns the current record's "project_structure_id" value
 * @method integer               getUnitType()              Returns the current record's "unit_type" value
 * @method ProjectStructure      getProjectStructure()      Returns the current record's "ProjectStructure" value
 * @method UnitOfMeasurementType getUnitOfMeasurementType() Returns the current record's "UnitOfMeasurementType" value
 * @method SupplyOfMaterial      setId()                    Sets the current record's "id" value
 * @method SupplyOfMaterial      setTitle()                 Sets the current record's "title" value
 * @method SupplyOfMaterial      setDescription()           Sets the current record's "description" value
 * @method SupplyOfMaterial      setProjectStructureId()    Sets the current record's "project_structure_id" value
 * @method SupplyOfMaterial      setUnitType()              Sets the current record's "unit_type" value
 * @method SupplyOfMaterial      setProjectStructure()      Sets the current record's "ProjectStructure" value
 * @method SupplyOfMaterial      setUnitOfMeasurementType() Sets the current record's "UnitOfMeasurementType" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSupplyOfMaterial extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('supply_of_materials');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('project_structure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('unit_type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('supply_of_material_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'project_structure_id',
              2 => 'deleted_at',
             ),
             ));
        $this->index('supply_of_material_fk_idx', array(
             'fields' => 
             array(
              0 => 'project_structure_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectStructure', array(
             'local' => 'project_structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurementType', array(
             'local' => 'unit_type',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}