<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StockInDeliveryOrderItemQuantity', 'main_conn');

/**
 * BaseStockInDeliveryOrderItemQuantity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $stock_in_delivery_order_id
 * @property integer $stock_in_invoice_item_id
 * @property decimal $quantity
 * @property StockInDeliveryOrder $StockInDeliveryOrder
 * @property StockInInvoiceItem $StockInInvoiceItem
 * 
 * @method integer                          getStockInDeliveryOrderId()     Returns the current record's "stock_in_delivery_order_id" value
 * @method integer                          getStockInInvoiceItemId()       Returns the current record's "stock_in_invoice_item_id" value
 * @method decimal                          getQuantity()                   Returns the current record's "quantity" value
 * @method StockInDeliveryOrder             getStockInDeliveryOrder()       Returns the current record's "StockInDeliveryOrder" value
 * @method StockInInvoiceItem               getStockInInvoiceItem()         Returns the current record's "StockInInvoiceItem" value
 * @method StockInDeliveryOrderItemQuantity setStockInDeliveryOrderId()     Sets the current record's "stock_in_delivery_order_id" value
 * @method StockInDeliveryOrderItemQuantity setStockInInvoiceItemId()       Sets the current record's "stock_in_invoice_item_id" value
 * @method StockInDeliveryOrderItemQuantity setQuantity()                   Sets the current record's "quantity" value
 * @method StockInDeliveryOrderItemQuantity setStockInDeliveryOrder()       Sets the current record's "StockInDeliveryOrder" value
 * @method StockInDeliveryOrderItemQuantity setStockInInvoiceItem()         Sets the current record's "StockInInvoiceItem" value
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStockInDeliveryOrderItemQuantity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stock_in_delivery_order_item_quantities');
        $this->hasColumn('stock_in_delivery_order_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('stock_in_invoice_item_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('quantity', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));


        $this->index('stock_in_delivery_order_item_idx', array(
             'fields' => 
             array(
              0 => 'stock_in_delivery_order_id',
              1 => 'stock_in_invoice_item_id',
              2 => 'deleted_at',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StockInDeliveryOrder', array(
             'local' => 'stock_in_delivery_order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('StockInInvoiceItem', array(
             'local' => 'stock_in_invoice_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
    }
}