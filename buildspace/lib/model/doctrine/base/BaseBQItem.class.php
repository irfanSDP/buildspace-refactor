<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BQItem', 'main_conn');

/**
 * BaseBQItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property integer $type
 * @property integer $element_id
 * @property integer $uom_id
 * @property integer $priority
 * @property BQElement $Element
 * @property UnitOfMeasurement $UnitOfMeasurement
 * @property Doctrine_Collection $BillItems
 * @property Doctrine_Collection $FormulatedColumns
 * @property Doctrine_Collection $BuildUpRateResources
 * @property Doctrine_Collection $BuildUpRates
 * @property BQLibraryBuildUpRateSummary $BuildUpRateSummary
 * @property Doctrine_Collection $ResourceItems
 * 
 * @method integer                     getId()                   Returns the current record's "id" value
 * @method string                      getDescription()          Returns the current record's "description" value
 * @method integer                     getType()                 Returns the current record's "type" value
 * @method integer                     getElementId()            Returns the current record's "element_id" value
 * @method integer                     getUomId()                Returns the current record's "uom_id" value
 * @method integer                     getPriority()             Returns the current record's "priority" value
 * @method BQElement                   getElement()              Returns the current record's "Element" value
 * @method UnitOfMeasurement           getUnitOfMeasurement()    Returns the current record's "UnitOfMeasurement" value
 * @method Doctrine_Collection         getBillItems()            Returns the current record's "BillItems" collection
 * @method Doctrine_Collection         getFormulatedColumns()    Returns the current record's "FormulatedColumns" collection
 * @method Doctrine_Collection         getBuildUpRateResources() Returns the current record's "BuildUpRateResources" collection
 * @method Doctrine_Collection         getBuildUpRates()         Returns the current record's "BuildUpRates" collection
 * @method BQLibraryBuildUpRateSummary getBuildUpRateSummary()   Returns the current record's "BuildUpRateSummary" value
 * @method Doctrine_Collection         getResourceItems()        Returns the current record's "ResourceItems" collection
 * @method BQItem                      setId()                   Sets the current record's "id" value
 * @method BQItem                      setDescription()          Sets the current record's "description" value
 * @method BQItem                      setType()                 Sets the current record's "type" value
 * @method BQItem                      setElementId()            Sets the current record's "element_id" value
 * @method BQItem                      setUomId()                Sets the current record's "uom_id" value
 * @method BQItem                      setPriority()             Sets the current record's "priority" value
 * @method BQItem                      setElement()              Sets the current record's "Element" value
 * @method BQItem                      setUnitOfMeasurement()    Sets the current record's "UnitOfMeasurement" value
 * @method BQItem                      setBillItems()            Sets the current record's "BillItems" collection
 * @method BQItem                      setFormulatedColumns()    Sets the current record's "FormulatedColumns" collection
 * @method BQItem                      setBuildUpRateResources() Sets the current record's "BuildUpRateResources" collection
 * @method BQItem                      setBuildUpRates()         Sets the current record's "BuildUpRates" collection
 * @method BQItem                      setBuildUpRateSummary()   Sets the current record's "BuildUpRateSummary" value
 * @method BQItem                      setResourceItems()        Sets the current record's "ResourceItems" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBQItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bq_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('element_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('uom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('bq_items_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'root_id',
              2 => 'lft',
              3 => 'rgt',
             ),
             ));
        $this->index('bq_items_type_idx', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('bq_items_fk_idx', array(
             'fields' => 
             array(
              0 => 'element_id',
              1 => 'root_id',
              2 => 'uom_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BQElement as Element', array(
             'local' => 'element_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UnitOfMeasurement', array(
             'local' => 'uom_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('BillItem as BillItems', array(
             'local' => 'id',
             'foreign' => 'bq_library_item_id'));

        $this->hasMany('BQItemFormulatedColumn as FormulatedColumns', array(
             'local' => 'id',
             'foreign' => 'relation_id'));

        $this->hasMany('BQLibraryBuildUpRateResource as BuildUpRateResources', array(
             'local' => 'id',
             'foreign' => 'bq_item_id'));

        $this->hasMany('BQLibraryBuildUpRateItem as BuildUpRates', array(
             'local' => 'id',
             'foreign' => 'bq_item_id'));

        $this->hasOne('BQLibraryBuildUpRateSummary as BuildUpRateSummary', array(
             'local' => 'id',
             'foreign' => 'bq_item_id'));

        $this->hasMany('ResourceItem as ResourceItems', array(
             'local' => 'id',
             'foreign' => 'import_bq_item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'levelColumnName' => 'level',
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}