<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SubPackagePostContractBillItemRate', 'main_conn');

/**
 * BaseSubPackagePostContractBillItemRate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $sub_package_id
 * @property integer $bill_item_id
 * @property decimal $rate
 * @property decimal $single_unit_grand_total
 * @property decimal $grand_total
 * @property SubPackage $SubPackage
 * @property BillItem $BillItem
 * @property SubPackagePreliminariesClaim $SubPackagePreliminariesClaim
 * @property SubPackagePreliminariesInitialClaim $SubPackagePreliminariesInitialClaimRate
 * @property SubPackagePreliminariesTimeBasedClaim $SubPackagePreliminariesTimeBasedClaimRate
 * @property SubPackagePreliminariesWorkBasedClaim $SubPackagePreliminariesWorkBasedClaimRate
 * @property SubPackagePreliminariesFinalClaim $SubPackagePreliminariesFinalClaimRate
 * @property Doctrine_Collection $PostContractSubPackageRemeasurementClaims
 * @property Doctrine_Collection $PostContractSubPackageRemeasurementBuildUpQuantities
 * @property Doctrine_Collection $PostContractBuildUpQuantitySummaries
 * @property Doctrine_Collection $PostContractSubPackageRemeasurementItemTypeReferences
 * 
 * @method integer                               getId()                                                    Returns the current record's "id" value
 * @method integer                               getSubPackageId()                                          Returns the current record's "sub_package_id" value
 * @method integer                               getBillItemId()                                            Returns the current record's "bill_item_id" value
 * @method decimal                               getRate()                                                  Returns the current record's "rate" value
 * @method decimal                               getSingleUnitGrandTotal()                                  Returns the current record's "single_unit_grand_total" value
 * @method decimal                               getGrandTotal()                                            Returns the current record's "grand_total" value
 * @method SubPackage                            getSubPackage()                                            Returns the current record's "SubPackage" value
 * @method BillItem                              getBillItem()                                              Returns the current record's "BillItem" value
 * @method SubPackagePreliminariesClaim          getSubPackagePreliminariesClaim()                          Returns the current record's "SubPackagePreliminariesClaim" value
 * @method SubPackagePreliminariesInitialClaim   getSubPackagePreliminariesInitialClaimRate()               Returns the current record's "SubPackagePreliminariesInitialClaimRate" value
 * @method SubPackagePreliminariesTimeBasedClaim getSubPackagePreliminariesTimeBasedClaimRate()             Returns the current record's "SubPackagePreliminariesTimeBasedClaimRate" value
 * @method SubPackagePreliminariesWorkBasedClaim getSubPackagePreliminariesWorkBasedClaimRate()             Returns the current record's "SubPackagePreliminariesWorkBasedClaimRate" value
 * @method SubPackagePreliminariesFinalClaim     getSubPackagePreliminariesFinalClaimRate()                 Returns the current record's "SubPackagePreliminariesFinalClaimRate" value
 * @method Doctrine_Collection                   getPostContractSubPackageRemeasurementClaims()             Returns the current record's "PostContractSubPackageRemeasurementClaims" collection
 * @method Doctrine_Collection                   getPostContractSubPackageRemeasurementBuildUpQuantities()  Returns the current record's "PostContractSubPackageRemeasurementBuildUpQuantities" collection
 * @method Doctrine_Collection                   getPostContractBuildUpQuantitySummaries()                  Returns the current record's "PostContractBuildUpQuantitySummaries" collection
 * @method Doctrine_Collection                   getPostContractSubPackageRemeasurementItemTypeReferences() Returns the current record's "PostContractSubPackageRemeasurementItemTypeReferences" collection
 * @method SubPackagePostContractBillItemRate    setId()                                                    Sets the current record's "id" value
 * @method SubPackagePostContractBillItemRate    setSubPackageId()                                          Sets the current record's "sub_package_id" value
 * @method SubPackagePostContractBillItemRate    setBillItemId()                                            Sets the current record's "bill_item_id" value
 * @method SubPackagePostContractBillItemRate    setRate()                                                  Sets the current record's "rate" value
 * @method SubPackagePostContractBillItemRate    setSingleUnitGrandTotal()                                  Sets the current record's "single_unit_grand_total" value
 * @method SubPackagePostContractBillItemRate    setGrandTotal()                                            Sets the current record's "grand_total" value
 * @method SubPackagePostContractBillItemRate    setSubPackage()                                            Sets the current record's "SubPackage" value
 * @method SubPackagePostContractBillItemRate    setBillItem()                                              Sets the current record's "BillItem" value
 * @method SubPackagePostContractBillItemRate    setSubPackagePreliminariesClaim()                          Sets the current record's "SubPackagePreliminariesClaim" value
 * @method SubPackagePostContractBillItemRate    setSubPackagePreliminariesInitialClaimRate()               Sets the current record's "SubPackagePreliminariesInitialClaimRate" value
 * @method SubPackagePostContractBillItemRate    setSubPackagePreliminariesTimeBasedClaimRate()             Sets the current record's "SubPackagePreliminariesTimeBasedClaimRate" value
 * @method SubPackagePostContractBillItemRate    setSubPackagePreliminariesWorkBasedClaimRate()             Sets the current record's "SubPackagePreliminariesWorkBasedClaimRate" value
 * @method SubPackagePostContractBillItemRate    setSubPackagePreliminariesFinalClaimRate()                 Sets the current record's "SubPackagePreliminariesFinalClaimRate" value
 * @method SubPackagePostContractBillItemRate    setPostContractSubPackageRemeasurementClaims()             Sets the current record's "PostContractSubPackageRemeasurementClaims" collection
 * @method SubPackagePostContractBillItemRate    setPostContractSubPackageRemeasurementBuildUpQuantities()  Sets the current record's "PostContractSubPackageRemeasurementBuildUpQuantities" collection
 * @method SubPackagePostContractBillItemRate    setPostContractBuildUpQuantitySummaries()                  Sets the current record's "PostContractBuildUpQuantitySummaries" collection
 * @method SubPackagePostContractBillItemRate    setPostContractSubPackageRemeasurementItemTypeReferences() Sets the current record's "PostContractSubPackageRemeasurementItemTypeReferences" collection
 * 
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubPackagePostContractBillItemRate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sub_package_post_contract_bill_item_rate');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('sub_package_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bill_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('single_unit_grand_total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));
        $this->hasColumn('grand_total', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 5,
             'default' => 0,
             ));


        $this->index('sub_package_post_contract_bill_item_rate_id_idx', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->index('sub_package_post_contract_bill_item_rate_fk_idx', array(
             'fields' => 
             array(
              0 => 'sub_package_id',
              1 => 'bill_item_id',
             ),
             ));
        $this->index('sub_package_post_contract_bill_item_rate_unique_idx', array(
             'fields' => 
             array(
              0 => 'sub_package_id',
              1 => 'bill_item_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SubPackage', array(
             'local' => 'sub_package_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BillItem', array(
             'local' => 'bill_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('SubPackagePreliminariesClaim', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasOne('SubPackagePreliminariesInitialClaim as SubPackagePreliminariesInitialClaimRate', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasOne('SubPackagePreliminariesTimeBasedClaim as SubPackagePreliminariesTimeBasedClaimRate', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasOne('SubPackagePreliminariesWorkBasedClaim as SubPackagePreliminariesWorkBasedClaimRate', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasOne('SubPackagePreliminariesFinalClaim as SubPackagePreliminariesFinalClaimRate', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasMany('PostContractSubPackageRemeasurementClaim as PostContractSubPackageRemeasurementClaims', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasMany('PostContractSubPackageRemeasurementBuildUpQuantityItem as PostContractSubPackageRemeasurementBuildUpQuantities', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasMany('PostContractSubPackageRemeasurementBuildUpQuantitySummary as PostContractBuildUpQuantitySummaries', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));

        $this->hasMany('PostContractSubPackageRemeasurementItemTypeReference as PostContractSubPackageRemeasurementItemTypeReferences', array(
             'local' => 'id',
             'foreign' => 'sub_package_post_contract_bill_item_rate_id'));
    }
}