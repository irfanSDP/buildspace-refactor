<?php

/**
 * ScheduleOfRateTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScheduleOfRateTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ScheduleOfRateTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ScheduleOfRate');
    }

    public static function getParentNode($id)
    {
        $library = self::getInstance()->find($id);

        $parent = $library->node->hasParent() ? $library->node->getParent() : $library;

        return $parent;
    }

    public static function calculateTotalCostForAnalysis($id, $projectId)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $sql = "SELECT COALESCE(SUM(bi.grand_total), 0) FROM ".ScheduleOfRateTradeTable::getInstance()->getTableName()." AS t JOIN
        ".ScheduleOfRateItemTable::getInstance()->getTableName()." AS i ON t.id = i.trade_id JOIN
        ".ScheduleOfRateItemFormulatedColumnTable::getInstance()->getTableName()." AS ifc ON i.id = ifc.relation_id JOIN
        ".BillItemFormulatedColumnTable::getInstance()->getTableName()." AS bifc ON ifc.id = bifc.schedule_of_rate_item_formulated_column_id JOIN
        ".BillItemTable::getInstance()->getTableName()." AS bi ON bifc.relation_id = bi.id JOIN
        ".BillElementTable::getInstance()->getTableName()." AS be ON bi.element_id = be.id JOIN
        ".ProjectStructureTable::getInstance()->getTableName()." AS s ON be.project_structure_id = s.id
        WHERE t.schedule_of_rate_id = ".$id." AND s.root_id = ".$projectId." AND bifc.column_name = '".BillItem::FORMULATED_COLUMN_RATE."'
        AND bifc.final_value <> 0 AND bifc.schedule_of_rate_item_formulated_column_id IS NOT NULL
        AND i.deleted_at IS NULL AND t.deleted_at IS NULL
        AND ifc.deleted_at IS NULL AND bifc.deleted_at IS NULL AND bi.deleted_at IS NULL AND bi.project_revision_deleted_at IS NULL
        AND be.deleted_at IS NULL AND s.deleted_at IS NULL";

        $stmt = $pdo->prepare($sql);

        $stmt->execute();

        $total = $stmt->fetchColumn();

        return $total;
    }

    public static function getRecordsAssociatedWithResource(Resource $resource)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $stmt = $pdo->prepare('SELECT DISTINCT sor.id, sor.name FROM '.ScheduleOfRateBuildUpRateResourceTable::getInstance()->getTableName().' sorburr
        JOIN '.ScheduleOfRateItemTable::getInstance()->getTableName().' sori ON (sorburr.schedule_of_rate_item_id = sori.id AND sorburr.deleted_at IS NULL)
        JOIN '.ScheduleOfRateTradeTable::getInstance()->getTableName().' sort ON (sori.trade_id = sort.id AND sort.deleted_at IS NULL)
        JOIN '.ScheduleOfRateTable::getInstance()->getTableName().' sor ON (sort.schedule_of_rate_id = sor.id AND sort.deleted_at IS NULL)
        WHERE sorburr.resource_library_id = '.$resource->id.' AND sorburr.deleted_at IS NULL
        ORDER BY sor.id ASC');

        $stmt->execute();

        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }
}