<?php

/**
 * PostContractRemeasurementClaimTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PostContractRemeasurementClaimTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PostContractRemeasurementClaimTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PostContractRemeasurementClaim');
    }

    public static function updateBuildUpQty(PostContractRemeasurementBuildUpQuantitySummary $summary, Doctrine_Connection $conn = null)
    {
        $findFields           = 'post_contract_bill_item_rate_idAndbill_column_setting_id';
        $findValues           = array($summary->post_contract_bill_item_rate_id, $summary->bill_column_setting_id);
        $pcRemeasurementClaim = self::getInstance()->findOneBy($findFields, $findValues);
        $pcRemeasurementClaim = $pcRemeasurementClaim ?: new PostContractRemeasurementClaim();

        if ( $pcRemeasurementClaim->isNew() )
        {
            $pcRemeasurementClaim->post_contract_bill_item_rate_id = $summary->post_contract_bill_item_rate_id;
            $pcRemeasurementClaim->bill_column_setting_id          = $summary->bill_column_setting_id;
        }

        $postContractItemRate = Doctrine_Core::getTable('PostContractBillItemRate')->find($summary->post_contract_bill_item_rate_id);
        $totalPerUnit         = $summary->final_quantity * $postContractItemRate->rate;

        $pcRemeasurementClaim->qty_per_unit   = $summary->final_quantity;
        $pcRemeasurementClaim->total_per_unit = $totalPerUnit;
        $pcRemeasurementClaim->has_build_up   = true;
        $pcRemeasurementClaim->parentSave($conn);
    }
}