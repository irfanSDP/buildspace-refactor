<?php

/**
 * DebitCreditNoteClaim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 *  
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class DebitCreditNoteClaim extends BaseDebitCreditNoteClaim
{
    public function updatePriority($isOperationAdd)
    {
        $entries = DoctrineQuery::create()->select('c.id, c.priority')
            ->from('DebitCreditNoteClaim c')
            ->where('c.id != ?', $this->id)
            ->andWhere('c.project_structure_id = ?', $this->project_structure_id)
            ->andWhere('c.account_group_id = ?', $this->account_group_id)
            ->andWhere('c.priority >= ?', $this->priority)
            ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
            ->execute();
            
        $pdo = DebitCreditNoteClaimTable::getInstance()->getConnection()->getDbh();

        foreach($entries as $entry)
        {   
            $priority = $isOperationAdd ? ($entry['priority'] + 1) : ($entry['priority'] - 1);
            $stmt = $pdo->prepare("UPDATE " . DebitCreditNoteClaimTable::getInstance()->getTableName() . " SET priority=:priority WHERE id=:id;");
            $stmt->bindParam(':id', $entry['id'], PDO::PARAM_INT);
            $stmt->bindParam(':priority', $priority, PDO::PARAM_INT);
            $stmt->execute();
        }
    }

    public static function calculateDebitCreditClaimAmount($debitCreditClaimId)
    {
        $totalAmount = 0.0;
        $debitCreditNoteClaim = Doctrine_Core::getTable('DebitCreditNoteClaim')->find(intval($debitCreditClaimId));

        $creditDebitNoteClaimItems = $debitCreditNoteClaim->DebitCreditNoteClaimItem;

        foreach($creditDebitNoteClaimItems as $claimItem)
        {
            $totalAmount += round($claimItem->rate * $claimItem->quantity, 2);
        }
        
        return $totalAmount;
    }
}
