<?php

/**
 * ScheduleOfRateBillLayoutSettingTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ScheduleOfRateBillLayoutSettingTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ScheduleOfRateBillLayoutSettingTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ScheduleOfRateBillLayoutSetting');
    }

    // Return an array containing all the printing's setting that
    // will be required to generate Bill's Layout
    public function getPrintingLayoutSettings($printingSettingId, $printingMode = false)
    {
        $masterSetting = $this->find($printingSettingId);
        $headSettings  = $masterSetting->getScheduleOfRateBillLayoutHeadSettings();
        $phrase        = $masterSetting->getScheduleOfRateBillLayoutPhrase();

        $data['layoutSetting'] = array(
            'id'                         => $masterSetting->id,
            'fontTypeName'               => $masterSetting->font,
            'fontSize'                   => $masterSetting->size,
            'amtCommaRemove'             => $masterSetting->comma_total,
            'rateCommaRemove'            => $masterSetting->comma_rate,
            'priceFormat'                => $masterSetting->priceFormat,
            'includeIandO'               => $masterSetting->includeIAndOForBillRef,
            'printContdEndDesc'          => $masterSetting->add_cont,
            'printElementInGrid'         => $masterSetting->print_element_grid,
            'printElementInGridOnce'     => $masterSetting->print_element_grid_once,
            'contdPrefix'                => $masterSetting->contd,
            'pageNoPrefix'               => $masterSetting->page_no_prefix,
            'alignElementTitleToTheLeft' => $masterSetting->align_element_to_left,
        );

        if ($headSettings)
        {
            $counter = 1;

            foreach ($headSettings as $headSetting)
            {
                if (!$printingMode)
                {
                    $data['headSettings'][] = array(
                        "content[id][{$counter}]"        => $headSetting->id,
                        "content[head][{$counter}]"      => $headSetting->head,
                        "content[bold][{$counter}]"      => $headSetting->bold,
                        "content[underline][{$counter}]" => $headSetting->underline,
                        "content[italic][{$counter}]"    => $headSetting->italic,
                    );

                    $counter ++;
                }
                else
                {
                    $data['headSettings'][] = array(
                        'head'      => $headSetting->head,
                        'bold'      => $headSetting->bold,
                        'underline' => $headSetting->underline,
                        'italic'    => $headSetting->italic,
                    );
                }
            }
        }

        $data['phrase'] = array(
            'id'                     => $phrase->id,
            'toCollection'           => $phrase->to_collection,
            'currencyPrefix'         => $phrase->currency,
            'collectionInGridPrefix' => $phrase->collection_in_grid,
            'eleHeadBold'            => $phrase->element_header_bold,
            'eleHeadUnderline'       => $phrase->element_header_underline,
            'eleHeadItalic'          => $phrase->element_header_italic,
            'topLeftRow1'            => $phrase->element_note_top_left_row1,
            'topLeftRow2'            => $phrase->element_note_top_left_row2,
            'topRightRow1'           => $phrase->element_note_top_right_row1,
        );

        $form                = new BaseForm();
        $data['_csrf_token'] = $form->getCSRFToken();

        return $data;
    }

    public static function cloneExistingPrintingLayoutSettingsForBill(
        ScheduleOfRateBill $scheduleOfRateBill,
        $defaultSetting,
        $billPhraseSetting,
        $headSettings
    ) {
        // ====================================================================================================================================
        // ScheduleOfRateBillLayoutSetting
        // ====================================================================================================================================
        // strip off unnecessary information to be clone into the db
        unset( $defaultSetting['id'], $defaultSetting['created_at'], $defaultSetting['updated_at'], $defaultSetting['created_by'], $defaultSetting['updated_by'], $defaultSetting['deleted_at'] );

        $defaultSetting['project_structure_id'] = $scheduleOfRateBill->project_structure_id;
        $newPrintingSettingObject               = new ScheduleOfRateBillLayoutSetting();

        foreach ($defaultSetting as $field => $value)
        {
            $newPrintingSettingObject->{$field} = $value;
        }

        $newPrintingSettingObject->save();

        $newSORBillLayoutSettingId = $newPrintingSettingObject->id;
        // ====================================================================================================================================

        // ====================================================================================================================================
        // ScheduleOfRateBillLayoutPhraseSetting
        // ====================================================================================================================================
        // strip off unnecessary information to be clone into the db
        unset( $billPhraseSetting['id'], $billPhraseSetting['som_layout_setting_id'], $billPhraseSetting['created_at'], $billPhraseSetting['updated_at'], $billPhraseSetting['created_by'], $billPhraseSetting['updated_by'], $billPhraseSetting['deleted_at'] );

        $billPhraseSetting['schedule_of_rate_bill_layout_setting_id'] = $newSORBillLayoutSettingId;
        $newPrintingSettingObject                                     = new ScheduleOfRateBillLayoutPhraseSetting();

        foreach ($billPhraseSetting as $field => $value)
        {
            $newPrintingSettingObject->{$field} = $value;
        }

        $newPrintingSettingObject->save();
        // ====================================================================================================================================

        // ====================================================================================================================================
        // ScheduleOfRateBillLayoutHeadSetting
        // ====================================================================================================================================
        foreach ($headSettings as $newPrintingSetting)
        {
            $newPrintingSettingObject = new ScheduleOfRateBillLayoutHeadSetting();

            // strip off unnecessary information to be clone into the db
            unset( $newPrintingSetting['id'], $newPrintingSetting['som_layout_setting_id'], $newPrintingSetting['created_at'], $newPrintingSetting['updated_at'], $newPrintingSetting['created_by'], $newPrintingSetting['updated_by'], $newPrintingSetting['deleted_at'] );

            $newPrintingSetting['schedule_of_rate_bill_layout_setting_id'] = $newSORBillLayoutSettingId;

            foreach ($newPrintingSetting as $field => $value)
            {
                $newPrintingSettingObject->{$field} = $value;
            }

            $newPrintingSettingObject->save();
        }
        // ====================================================================================================================================
    }
}