<?php

/**
 * CompanyBusinessTypeTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CompanyBusinessTypeTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CompanyBusinessTypeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('CompanyBusinessType');
    }

    public static function getDropdownSelection()
    {
        $items = array();

        $selections = DoctrineQuery::create()->select('c.id, c.name')
        ->from('CompanyBusinessType c')
        ->fetchArray();

        foreach($selections as $selection)
        {
            array_push($items, array('id' => (string) $selection['id'], 'name' => $selection['name']));
        }

        return $items;
    }

    public static function canBeDeletedById($id)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $stmt = $pdo->prepare("SELECT r.table_name, r.column_name FROM information_schema.constraint_column_usage u
            INNER JOIN information_schema.referential_constraints fk ON u.constraint_catalog = fk.unique_constraint_catalog
            AND u.constraint_schema = fk.unique_constraint_schema
            AND u.constraint_name = fk.unique_constraint_name
            INNER JOIN information_schema.key_column_usage r
            ON r.constraint_catalog = fk.constraint_catalog
            AND r.constraint_schema = fk.constraint_schema
            AND r.constraint_name = fk.constraint_name
            WHERE u.column_name = 'id'
            AND u.table_name = '".strtolower(CompanyBusinessTypeTable::getInstance()->getTableName())."'");

        $stmt->execute();

        $tables = $stmt->fetchAll(PDO::FETCH_KEY_PAIR);

        foreach($tables as $tableName => $columnName)
        {
            $stmt = $pdo->prepare("SELECT COUNT(id) FROM ".$tableName." WHERE ".$columnName." = ".$id);

            $stmt->execute();

            $count = $stmt->fetchColumn();

            if($count > 0)
            {
                return false;
            }
        }

        return true;
    }
}