<?php

/**
 * CompanyTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CompanyTable extends Doctrine_Table {
	/**
	 * Returns an instance of this class.
	 *
	 * @return object CompanyTable
	 */
	public static function getInstance()
	{
		return Doctrine_Core::getTable('Company');
	}

	public static function getSubPackageTotalBySubPackageIdAndCompanyId($subPackageId, $companyId)
	{
		$pdo = self::getInstance()->getConnection()->getDbh();

		$stmt = $pdo->prepare("SELECT DISTINCT b.bill_item_id, COALESCE(b.grand_total, 0) AS total
        FROM " . CompanyTable::getInstance()->getTableName() . " c
        JOIN " . SubPackageCompanyTable::getInstance()->getTableName() . " xref ON xref.company_id = c.id
        JOIN " . SubPackageTable::getInstance()->getTableName() . " sp ON sp.id = xref.sub_package_id
        LEFT JOIN " . SubPackageBillItemRateTable::getInstance()->getTableName() . " b ON b.sub_package_company_id = xref.id
        LEFT JOIN " . ProjectStructureTable::getInstance()->getTableName() . " bill ON bill.root_id = sp.project_structure_id
        LEFT JOIN " . SubPackageResourceItemTable::getInstance()->getTableName() . " AS spri ON spri.sub_package_id = sp.id
        LEFT JOIN " . SubPackageScheduleOfRateItemTable::getInstance()->getTableName() . " AS spsori ON spsori.sub_package_id = sp.id
        JOIN " . BillElementTable::getInstance()->getTableName() . " e ON e.project_structure_id = bill.id
        JOIN " . BillItemTable::getInstance()->getTableName() . " i ON i.element_id = e.id
        LEFT JOIN " . BillBuildUpRateItemTable::getInstance()->getTableName() . " bur ON bur.bill_item_id = i.id AND bur.resource_item_library_id = spri.resource_item_id AND bur.deleted_at IS NULL
        LEFT JOIN " . ScheduleOfRateItemFormulatedColumnTable::getInstance()->getTableName() . " AS sifc ON sifc.relation_id = spsori.schedule_of_rate_item_id AND sifc.deleted_at IS NULL
        LEFT JOIN " . BillItemFormulatedColumnTable::getInstance()->getTableName() . " AS rate ON rate.relation_id = i.id
        LEFT JOIN " . SubPackageBillItemTable::getInstance()->getTableName() . " spbi ON spbi.bill_item_id = i.id AND spbi.sub_package_id = sp.id
        WHERE sp.id =" . $subPackageId . " AND sp.deleted_at IS NULL
        AND c.id = " . $companyId . " AND c.deleted_at IS NULL
        AND bill.deleted_at IS NULL AND b.bill_item_id = i.id AND b.grand_total <> 0
        AND NOT (spri.sub_package_id IS NULL AND spsori.sub_package_id IS NULL AND spbi.sub_package_id IS NULL)
        AND (rate.relation_id = bur.bill_item_id OR rate.schedule_of_rate_item_formulated_column_id = sifc.id OR rate.relation_id = spbi.bill_item_id)
        AND rate.column_name = '" . BillItem::FORMULATED_COLUMN_RATE . "' AND rate.final_value <> 0 AND rate.deleted_at IS NULL
        AND i.type <> " . BillItem::TYPE_ITEM_NOT_LISTED . " AND i.project_revision_deleted_at IS NULL AND i.deleted_at IS NULL
        AND e.deleted_at IS NULL ORDER BY b.bill_item_id");

		$stmt->execute();

		$records = $stmt->fetchAll(PDO::FETCH_ASSOC);

		$total = 0;

		foreach ( $records as $record )
		{
			$total += $record['total'];
		}

		return $total;
	}

	public static function formatCompanyName($company)
	{
		return ( strlen($company['shortname']) ) ? $company['shortname'] : ( ( strlen($company['name']) > 15 ) ? substr($company['name'], 0, 12) . '...' : $company['name'] );
	}
}