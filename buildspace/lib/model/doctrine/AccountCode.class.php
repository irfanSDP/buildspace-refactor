<?php

/**
 * AccountCode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 *  
 * @package    buildspace
 * @subpackage model
 * @author     1337 developers
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class AccountCode extends BaseAccountCode
{
    const ACCOUNT_TYPE_PIC = 1;
    const ACCOUNT_TYPE_PCN = 2;
    const ACCOUNT_TYPE_PDN = 4;

    public function updatePriority($isOperationAdd)
    {       
        $entries = DoctrineQuery::create()->select('ac.id, ac.priority')
            ->from('AccountCode ac')
            ->where('ac.id != ?', $this->id)
            ->andWhere('ac.account_group_id = ?', $this->account_group_id)
            ->andWhere('ac.priority >= ?', $this->priority)
            ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
            ->execute();

        $pdo = AccountCodeTable::getInstance()->getConnection()->getDbh();

        foreach($entries as $entry)
        {   
            $priority = $isOperationAdd ? ($entry['priority'] + 1) : ($entry['priority'] - 1);
            $stmt = $pdo->prepare("UPDATE " . AccountCodeTable::getInstance()->getTableName() . " SET priority=:priority WHERE id=:id;");
            $stmt->bindParam(':id', $entry['id'], PDO::PARAM_INT);
            $stmt->bindParam(':priority', $priority, PDO::PARAM_INT);
            $stmt->execute();
        }
    }

    public function canBeDeleted()
    {
        // check in item codes settings
        $itemCodeSettings = DoctrineQuery::create()->select('ics.id')
                            ->from('ItemCodeSetting ics')
                            ->where('ics.account_code_id = ?', $this->id)
                            ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                            ->execute();
        
        // check in debit credit note claim items
        $debitCreditNoteClaimItems = DoctrineQuery::create()->select('ci.id')
                                        ->from('DebitCreditNoteClaimItem ci')
                                        ->where('ci.account_code_id = ?', $this->id)
                                        ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                                        ->execute();

        return empty($itemCodeSettings) && empty($debitCreditNoteClaimItems);
    }
}
