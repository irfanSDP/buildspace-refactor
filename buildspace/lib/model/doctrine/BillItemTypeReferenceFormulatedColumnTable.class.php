<?php

/**
 * BillItemTypeReferenceFormulatedColumnTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BillItemTypeReferenceFormulatedColumnTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BillItemTypeReferenceFormulatedColumnTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BillItemTypeReferenceFormulatedColumn');
    }

    public static function getConvertedValue($value)
    {
        $pattern = '/r[\d{1,}]+/i';
        $matched = preg_match_all($pattern, $value, $matches, PREG_PATTERN_ORDER);

        if($matched)
        {
            foreach($matches[0] as $match)
            {
                $itemRefId = str_ireplace('r', '', $match);
                $result = DoctrineQuery::create()->select('r.bill_item_id')
                    ->from('BillItemTypeReference r')
                    ->where('r.id = ?', $itemRefId)
                    ->limit(1)
                    ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                    ->fetchOne();

                if($result)
                {
                    $value = str_replace($match, 'R'.$result['bill_item_id'], $value);
                }
            }
        }

        return $value;
    }

    public static function getQuantityPerType(array $records)
    {
        $pdo                  = self::getInstance()->getConnection()->getDbh();
        $quantityPerTypeWhere = array();

        foreach($records as &$record)
        {
            $quantityFieldName = $record['use_original_quantity'] ? BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT : BillItemTypeReference::FORMULATED_COLUMN_QTY_PER_UNIT_REMEASUREMENT;

            $quantityPerTypeWhere[] = "({$record['bill_item_id']}, {$record['bill_column_setting_id']}, '{$quantityFieldName}')";
        }

        $stmt = $pdo->prepare("SELECT r.bill_column_setting_id, r.bill_item_id, COALESCE(fc.final_value, 0) AS value
        FROM ".BillItemTypeReferenceFormulatedColumnTable::getInstance()->getTableName()." fc
        JOIN ".BillItemTypeReferenceTable::getInstance()->getTableName()." r ON fc.relation_id = r.id
        WHERE (r.bill_item_id, r.bill_column_setting_id, fc.column_name) IN (".implode(',', $quantityPerTypeWhere).")
        AND r.include IS TRUE AND fc.final_value <> 0
        AND r.deleted_at IS NULL AND fc.deleted_at IS NULL");

        $stmt->execute();

        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }
}