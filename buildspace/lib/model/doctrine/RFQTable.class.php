<?php

/**
 * RFQTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RFQTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object RFQTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('RFQ');
    }

    public static function getLatestRFQByProject(ProjectStructure $project)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $stmt = $pdo->prepare("SELECT b.id AS id, b.project_structure_id AS project_structure_id, b.prefix AS prefix,
        b.rfq_count AS rfq_count, b.type AS type, b.region_id AS region_id, b.sub_region_id AS sub_region_id,
        b.status AS status, b.created_at AS created_at, b.updated_at AS updated_at, b.created_by AS created_by,
        b.updated_by AS updated_by
        FROM ".self::getInstance()->getTableName()." b WHERE ( b.project_structure_id = :projectStructureId )
        ORDER BY b.id DESC LIMIT 1");

        $stmt->execute(array('projectStructureId' => $project->id));

        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    public static function getLatestRFQNoCountByTypeResource()
    {
        $pdo = self::getInstance()->getConnection()->getDbh();
        $sql = "SELECT COUNT(b.id) AS count FROM ".self::getInstance()->getTableName()." b WHERE ( b.type = :type )";
        $stmt = $pdo->prepare($sql);
        $stmt->execute(array('type' => RFQ::TYPE_RESOURCE));
        $count = $stmt->fetchColumn();

        return $count + 1;
    }

    public static function getStatusText($status)
    {
        switch($status)
        {
            case RFQ::STATUS_PENDING:
                return RFQ::STATUS_PENDING_TEXT;
            case RFQ::STATUS_SENT:
                return RFQ::STATUS_SENT_TEXT;
            case RFQ::STATUS_CLOSED:
                return RFQ::STATUS_CLOSED_TEXT;
        }
    }

    public static function getTypeText($type = NULL)
    {
        switch($type)
        {
            case RFQ::TYPE_PROJECT:
                return RFQ::TYPE_PROJECT_TEXT;
            case RFQ::TYPE_RESOURCE:
                return RFQ::TYPE_RESOURCE_TEXT;
            default:
                return false;
        }
    }

    public static function typeSelections()
    {
        $data[] = array(
            'id'   => RFQ::TYPE_PROJECT,
            'name' => RFQ::TYPE_PROJECT_TEXT,
        );

        $data[] = array(
            'id'   => RFQ::TYPE_RESOURCE,
            'name' => RFQ::TYPE_RESOURCE_TEXT,
        );

        return $data;
    }

    public static function statusSelections()
    {
        $data[] = array(
            'id'   => (string) RFQ::STATUS_PENDING,
            'name' => RFQ::STATUS_PENDING_TEXT,
        );

        $data[] = array(
            'id'   => (string) RFQ::STATUS_SENT,
            'name' => RFQ::STATUS_SENT_TEXT,
        );

        $data[] = array(
            'id'   => (string) RFQ::STATUS_CLOSED,
            'name' => RFQ::STATUS_CLOSED_TEXT,
        );

        return $data;
    }
}