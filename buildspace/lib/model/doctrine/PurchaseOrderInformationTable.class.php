<?php

/**
 * PurchaseOrderInformationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PurchaseOrderInformationTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PurchaseOrderInformationTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PurchaseOrderInformation');
    }

    public static function setCompanyAddress(PurchaseOrderInformation $poInformation, PurchaseOrderSupplier $poSupplier)
    {
        // reset existing supplier company address
        foreach (range(1, 3) as $range)
        {
            $poInformation->{"supplier_address_".$range} = null;
        }

        $counter = 1;

        // the system will strip all the html tags and assign the address by 3 following rows
        $occupiedRows = Utilities::justify(strip_tags($poSupplier->Company->address), sfBuildspacePurchaseOrderGenerator::ADDRESS_MAX_CHAR);

        foreach ( $occupiedRows as $occupiedRow )
        {
            if ( $counter > 3 )
            {
                break;
            }

            $poInformation->{"supplier_address_".$counter} = $occupiedRow;

            unset($occupiedRow);

            $counter++;
        }

        $poInformation->save();
    }

    public static function getStatusText($status)
    {
        switch($status)
        {
            case PurchaseOrderInformation::STATUS_PENDING:
                return PurchaseOrderInformation::STATUS_PENDING_TEXT;
            case PurchaseOrderInformation::STATUS_ISSUED:
                return PurchaseOrderInformation::STATUS_ISSUED_TEXT;
            case PurchaseOrderInformation::STATUS_CLOSED:
                return PurchaseOrderInformation::STATUS_CLOSED_TEXT;
            case PurchaseOrderInformation::STATUS_CANCEL:
                return PurchaseOrderInformation::STATUS_CANCEL_TEXT;
        }
    }

    public static function statusSelections()
    {
        $data[] = array(
            'id'   => (string) PurchaseOrderInformation::STATUS_PENDING,
            'name' => PurchaseOrderInformation::STATUS_PENDING_TEXT,
        );

        $data[] = array(
            'id'   => (string) PurchaseOrderInformation::STATUS_ISSUED,
            'name' => PurchaseOrderInformation::STATUS_ISSUED_TEXT,
        );

        $data[] = array(
            'id'   => (string) PurchaseOrderInformation::STATUS_CANCEL,
            'name' => PurchaseOrderInformation::STATUS_CANCEL_TEXT,
        );

        $data[] = array(
            'id'   => (string) PurchaseOrderInformation::STATUS_CLOSED,
            'name' => PurchaseOrderInformation::STATUS_CLOSED_TEXT,
        );

        return $data;
    }

    public static function getDefaultSignature()
    {
        return '..........................................................................................<blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><strong style="text-align: center;"><font size="2">SIGNATURE</font></strong></div></blockquote></blockquote></blockquote>';
    }
}