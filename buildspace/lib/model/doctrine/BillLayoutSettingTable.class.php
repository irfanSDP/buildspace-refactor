<?php

/**
 * BillLayoutSettingTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BillLayoutSettingTable extends Doctrine_Table
{
	/**
	 * Returns an instance of this class.
	 *
	 * @return object BillLayoutSettingTable
	 */
	public static function getInstance()
	{
		return Doctrine_Core::getTable('BillLayoutSetting');
	}

	// Return an array containing all the printing's setting that
	// will be required to generate Bill's Layout
	public function getPrintingLayoutSettings($printingSettingId, $printingMode = FALSE)
	{
		$masterSetting = $this->find($printingSettingId);
		$headSettings  = $masterSetting->getBillHeadSettings();
		$phrase        = $masterSetting->getBillPhrase();

		$data['layoutSetting'] = array(
			'id'                         => $masterSetting['id'],
			'fontTypeName'               => $masterSetting['font'],
			'roundingType'               => $masterSetting['rounding_type'],
			'fontSize'                   => $masterSetting['size'],
			'amtCommaRemove'             => $masterSetting['comma_total'],
			'rateCommaRemove'            => $masterSetting['comma_rate'],
			'qtyCommaRemove'             => $masterSetting['comma_qty'],
			'priceFormat'                => $masterSetting['priceFormat'],
			'printAmountOnly'            => $masterSetting['print_amt_col_only'],
			'printNoPrice'               => $masterSetting['print_without_price'],
			'printFullDecimal'           => $masterSetting['print_full_decimal'],
			'includePSUM'                => $masterSetting['add_psum_pcsum'],
			'printDollarCents'           => $masterSetting['print_dollar_cent'],
			'printNoCents'               => $masterSetting['print_without_cent'],
			'toggleArgment'              => $masterSetting['switch_qty_unit_rate'],
			'printElementTitle'          => $masterSetting['print_element_header'],
			'printElementInGrid'         => $masterSetting['print_element_grid'],
			'printElementInGridOnce'     => $masterSetting['print_element_grid_once'],
			'printContdEndDesc'          => $masterSetting['add_cont'],
			'indentItem'                 => $masterSetting['indent_item'],
			'includeIandO'               => $masterSetting['includeIAndOForBillRef'],
			'enableBindingAlignment'     => $masterSetting['apply_binding_alignment'],
			'contdPrefix'                => $masterSetting['contd'],
			'pageNumberingOption'        => $masterSetting['page_numbering_option'],
			'pageNoPrefix'               => $masterSetting['page_no_prefix'],
			'printDateOfPrinting'        => $masterSetting['print_date_of_printing'],
			'printGrandTotalQty'         => $masterSetting['print_grand_total_quantity'],
			'alignElementTitleToTheLeft' => $masterSetting['align_element_to_left'],
			'closeGrid'                  => $masterSetting['close_grid'],
		);

		if ( $headSettings )
		{
			$counter = 1;

			foreach ( $headSettings as $headSetting )
			{
				if ( ! $printingMode )
				{
					$data['headSettings'][] = array(
						"content[id][{$counter}]"        => $headSetting['id'],
						"content[head][{$counter}]"      => $headSetting['head'],
						"content[bold][{$counter}]"      => $headSetting['bold'],
						"content[underline][{$counter}]" => $headSetting['underline'],
						"content[italic][{$counter}]"    => $headSetting['italic'],
					);

					$counter++;
				}
				else
				{
					$data['headSettings'][] = array(
						'head'      => $headSetting['head'],
						'bold'      => $headSetting['bold'],
						'underline' => $headSetting['underline'],
						'italic'    => $headSetting['italic'],
					);
				}
			}
		}

		$data['phrase'] = array(
			'id'                      => $phrase['id'],
			'toCollection'            => $phrase['to_collection'],
			'descHeader'              => $phrase['table_header_description'],
			'unitHeader'              => $phrase['table_header_unit'],
			'qtyHeader'               => $phrase['table_header_qty'],
			'rateHeader'              => $phrase['table_header_rate'],
			'amtHeader'               => $phrase['table_header_amt'],
			'currencyPrefix'          => $phrase['currency'],
			'centPrefix'              => $phrase['cents'],
			'collectionInGridPrefix'  => $phrase['collection_in_grid'],
			'summaryPrefix'           => $phrase['summary'],
			'summaryInGridPrefix'     => $phrase['summary_in_grid'],
			'totalPerUnitPrefix'      => $phrase['totalPerUnitPrefix'],
			'totalUnitPrefix'         => $phrase['totalUnitPrefix'],
			'totalPerTypePrefix'      => $phrase['totalPerTypePrefix'],
			'summaryPageNoPrefix'     => $phrase['summary_page_no'],
			'tenderPrefix'            => $phrase['summary_tender'],
			'summaryPageNumbering[1]' => $phrase['summary_page_one'],
			'summaryPageNumbering[2]' => $phrase['summary_page_two'],
			'summaryPageNumbering[3]' => $phrase['summary_page_three'],
			'summaryPageNumbering[4]' => $phrase['summary_page_four'],
			'summaryPageNumbering[5]' => $phrase['summary_page_five'],
			'summaryPageNumbering[6]' => $phrase['summary_page_six'],
			'summaryPageNumbering[7]' => $phrase['summary_page_seven'],
			'summaryPageNumbering[8]' => $phrase['summary_page_eight'],
			'summaryPageNumbering[9]' => $phrase['summary_page_nine'],
			'eleHeadBold'             => $phrase['element_header_bold'],
			'eleHeadUnderline'        => $phrase['element_header_underline'],
			'eleHeadItalic'           => $phrase['element_header_italic'],
			'footHeadBold'            => $phrase['element_footer_bold'],
			'footHeadUnderline'       => $phrase['element_footer_underline'],
			'footHeadItalic'          => $phrase['element_footer_italic'],
			'topLeftRow1'             => $phrase['element_note_top_left_row1'],
			'topLeftRow2'             => $phrase['element_note_top_left_row2'],
			'topRightRow1'            => $phrase['element_note_top_right_row1'],
			'botLeftRow1'             => $phrase['element_note_bot_left_row1'],
			'botLeftRow2'             => $phrase['element_note_bot_left_row2'],
			'botRightRow1'            => $phrase['element_note_bot_right_row1'],
			'botRightRow2'            => $phrase['element_note_bot_right_row2'],
		);

		$data['summaryPageNo'] = array(
			$phrase['summary_page_one'],
			$phrase['summary_page_two'],
			$phrase['summary_page_three'],
			$phrase['summary_page_four'],
			$phrase['summary_page_five'],
			$phrase['summary_page_six'],
			$phrase['summary_page_seven'],
			$phrase['summary_page_eight'],
			$phrase['summary_page_nine'],
		);

		$form                = new BaseForm();
		$data['_csrf_token'] = $form->getCSRFToken();

		return $data;
	}

	public static function cloneExistingPrintingLayoutSettingsForBill($newPrintingSettingId, $defaultSetting, $billPhraseSetting, $headSettings)
	{
		// ====================================================================================================================================
		// BillLayoutSetting
		// ====================================================================================================================================
		// strip off unnecessary information to be clone into the db
		unset($defaultSetting['id'], $defaultSetting['created_at'], $defaultSetting['updated_at'], $defaultSetting['created_by'], $defaultSetting['updated_by'], $defaultSetting['deleted_at']);

		$defaultSetting['bill_id'] = $newPrintingSettingId;
		$newPrintingSettingObject  = new BillLayoutSetting();

		foreach ( $defaultSetting as $field => $value )
		{
			$newPrintingSettingObject->{$field} = $value;
		}

		$newPrintingSettingObject->save();

		$newBillLayoutSettingId = $newPrintingSettingObject->id;
		// ====================================================================================================================================

		// ====================================================================================================================================		// BillLayoutPhrase
		// ====================================================================================================================================
		// strip off unnecessary information to be clone into the db
		unset($billPhraseSetting['id'], $billPhraseSetting['created_at'], $billPhraseSetting['updated_at'], $billPhraseSetting['created_by'], $billPhraseSetting['updated_by'], $billPhraseSetting['deleted_at']);

		$billPhraseSetting['bill_layout_setting_id'] = $newBillLayoutSettingId;
		$newPrintingSettingObject                     = new BillLayoutPhrase();

		foreach ( $billPhraseSetting as $field => $value )
		{
			$newPrintingSettingObject->{$field} = $value;
		}

		$newPrintingSettingObject->save();
		// ====================================================================================================================================

		// ====================================================================================================================================
		// BillLayoutHeadSetting
		// ====================================================================================================================================
		foreach ( $headSettings as $newPrintingSetting )
		{
			$newPrintingSettingObject = new BillLayoutHeadSetting();

			// strip off unnecessary information to be clone into the db
			unset($newPrintingSetting['id'], $newPrintingSetting['created_at'], $newPrintingSetting['updated_at'], $newPrintingSetting['created_by'], $newPrintingSetting['updated_by'], $newPrintingSetting['deleted_at']);

			$newPrintingSetting['bill_layout_setting_id'] = $newBillLayoutSettingId;

			foreach ( $newPrintingSetting as $field => $value )
			{
				$newPrintingSettingObject->{$field} = $value;
			}

			$newPrintingSettingObject->save();
		}
		// ====================================================================================================================================
	}
}