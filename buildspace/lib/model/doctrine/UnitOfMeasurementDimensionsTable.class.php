<?php

/**
 * UnitOfMeasurementDimensionsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UnitOfMeasurementDimensionsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object UnitOfMeasurementDimensionsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('UnitOfMeasurementDimensions');
    }

    public static function getByUnitOfMeasurementIdAndDimensionId($uomId, $dimensionId, $hydrate=null)
    {
        $query = self::getInstance()
            ->createQuery('x')
            ->where('x.unit_of_measurement_id = ?', $uomId)
            ->andWhere('x.dimension_id = ?', $dimensionId);

        if($hydrate)
        {
            $query->setHydrationMode($hydrate);
        }

        return $query->fetchOne();
    }

    public static function canBeDeletedByUnitOfMeasurementIdAndDimensionId($uomId, $dimensionId)
    {
        $pdo = self::getInstance()->getConnection()->getDbh();

        $sql = "SELECT COUNT(fc.id) FROM ".BillBuildUpQuantityFormulatedColumnTable::getInstance()->getTableName()." fc
        JOIN ".BillBuildUpQuantityItemTable::getInstance()->getTableName()." qi ON fc.relation_id = qi.id
        JOIN ".BillItemTable::getInstance()->getTableName()." i ON qi.bill_item_id = i.id
        WHERE fc.column_name = '".$dimensionId."-dimension_column' AND i.uom_id = ".$uomId."
        AND fc.deleted_at IS NULL AND qi.deleted_at IS NULL
        AND i.project_revision_deleted_at IS NULL AND i.deleted_at IS NULL";

        $stmt = $pdo->prepare($sql);
        $stmt->execute();

        $count = $stmt->fetch(PDO::FETCH_COLUMN, 0);

        return $count > 0 ? false : true;
    }

    public static function getUnitDimensionsByUnitIds($unitIds)
    {
        return Doctrine_Core::getTable('UnitOfMeasurementDimensions')
        ->createQuery('m')
        ->leftJoin('m.Dimension d')
        ->whereIn('m.unit_of_measurement_id', $unitIds)
        ->orderBy('m.priority')
        ->fetchArray();
    }
}